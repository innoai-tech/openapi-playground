var $=Object.defineProperty;var g=(e,s,t)=>s in e?$(e,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[s]=t;var i=(e,s,t)=>g(e,typeof s!="symbol"?s+"":s,t);import{O as w,B as x,S as u,g as S,t as d,h as T,e as _,j,o as C}from"./vendor-rxjs.CtzYnjP_.chunk.js";import{b as F,v as c,d as p,e as f,a as I}from"./vendor-innoai-tech-lodash.BDvUhzFk.chunk.js";const U=(e,s)=>new O(e,s);class O extends w{constructor(t,r){super(n=>this._success$.subscribe(n));i(this,"requesting$",new x(!1));i(this,"error$",new u);i(this,"_success$",new u);i(this,"_input$",new u);i(this,"unsubscribe",this._input$.pipe(S(t=>(this.requesting$.next(!0),_(this.fetcher.request(this.createConfig(t))).pipe(d(r=>this._success$.next(r)),j(r=>(this.error$.next(r),C(r)))))),d(()=>{this.requesting$.next(!1)}),T()).subscribe());i(this,"_prevInputs");i(this,"next",t=>{const r=F(t)?t(this._prevInputs):t;this._prevInputs=r,this._input$.next(r)});i(this,"toHref",t=>this.fetcher.toHref(this.createConfig(t)));this.createConfig=t,this.fetcher=r}get operationID(){return this.createConfig.operationID}}const y=(e={})=>e["Content-Type"]||e["content-type"]||"",D=(e={})=>{e["Content-Type"]&&(e["Content-Type"]=void 0),e["content-type"]&&(e["content-type"]=void 0)},B=e=>y(e).includes("multipart/form-data"),E=e=>y(e).includes("application/x-www-form-urlencoded"),R=e=>{const s=new URLSearchParams,t=(r,n)=>{if(p(n)){c(n,o=>{t(r,o)});return}if(f(n)){t(r,JSON.stringify(n));return}I(n)||`${n}`.length===0||s.append(r,`${n}`)};return c(e,(r,n)=>{t(n,r)}),s.toString()},q=(e,s)=>{if(B(s)){D(s);const t=new FormData,r=(n,o)=>{o instanceof File||o instanceof Blob?t.append(n,o):p(o)?c(o,a=>r(n,a)):f(o)?t.append(n,JSON.stringify(o)):t.append(n,o)};return c(e,(n,o)=>r(o,n)),t}return E(s)?R(e):p(e)||f(e)?JSON.stringify(e):e},L=({paramsSerializer:e,transformRequestBody:s})=>({toHref:t=>{let r=e(t.params);return r.length&&!r.startsWith("?")&&(r="?"+r),`${t.url}${r}`},request:t=>{const r={method:t.method,headers:t.headers||{},body:s(t.body,t.headers||{})};return fetch(`${t.url}?${e(t.params)}`,r).then(async n=>{var h,l;let o;(h=n.headers.get("Content-Type"))!=null&&h.includes("application/json")?o=await n.json():(l=n.headers.get("Content-Type"))!=null&&l.includes("application/octet-stream")?o=await n.blob():o=await n.text();const a={config:t,status:n.status,headers:{}};for(const[b,m]of n.headers)a.headers[b]=m;return a.body=o,a}).then(n=>{if(n.status>=400)throw n.error=n.body,n;return n})}});export{U as a,L as c,R as p,q as t};
