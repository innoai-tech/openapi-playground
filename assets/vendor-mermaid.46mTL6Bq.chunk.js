import { Z as e } from "./vendor-min-mermaid~chunk-2XYWPRAO.Da8Ms7Co.chunk.js";
var t = class t {
	static {
		e(this, "SourceLocation");
	}
	constructor(e, t, r) {
		this.lexer = void 0, this.start = void 0, this.end = void 0, this.lexer = e, this.start = t, this.end = r;
	}
	static range(e, r) {
		return r ? e && e.loc && r.loc && e.loc.lexer === r.loc.lexer ? new t(e.loc.lexer, e.loc.start, r.loc.end) : null : e && e.loc;
	}
}, r = class r {
	static {
		e(this, "Token");
	}
	constructor(e, t) {
		this.text = void 0, this.loc = void 0, this.noexpand = void 0, this.treatAsRelax = void 0, this.text = e, this.loc = t;
	}
	range(e, a) {
		return new r(a, t.range(this, e));
	}
}, a = class t {
	static {
		e(this, "ParseError");
	}
	constructor(e, r) {
		this.name = void 0, this.position = void 0, this.length = void 0, this.rawMessage = void 0;
		var a, i, n = "KaTeX parse error: " + e, s = r && r.loc;
		if (s && s.start <= s.end) {
			var o = s.lexer.input;
			a = s.start, i = s.end, a === o.length ? n += " at end of input: " : n += " at position " + (a + 1) + ": ";
			var l = o.slice(a, i).replace(/[^]/g, "$&̲");
			n += (a > 15 ? "…" + o.slice(a - 15, a) : o.slice(0, a)) + l + (i + 15 < o.length ? o.slice(i, i + 15) + "…" : o.slice(i));
		}
		var h = Error(n);
		return h.name = "ParseError", h.__proto__ = t.prototype, h.position = a, null != a && null != i && (h.length = i - a), h.rawMessage = e, h;
	}
};
a.prototype.__proto__ = Error.prototype;
var i = e(function(e, t) {
	return -1 !== e.indexOf(t);
}, "contains"), n = e(function(e, t) {
	return void 0 === e ? t : e;
}, "deflt"), s = /([A-Z])/g, o = e(function(e) {
	return e.replace(s, "-$1").toLowerCase();
}, "hyphenate"), l = {
	"&": "&amp;",
	">": "&gt;",
	"<": "&lt;",
	"\"": "&quot;",
	"'": "&#x27;"
}, h = /[&><"']/g;
function m(e) {
	return String(e).replace(h, (e) => l[e]);
}
e(m, "escape");
var c = e(function e(t) {
	return "ordgroup" === t.type || "color" === t.type ? 1 === t.body.length ? e(t.body[0]) : t : "font" === t.type ? e(t.body) : t;
}, "getBaseElem"), u = e(function(e) {
	var t = c(e);
	return "mathord" === t.type || "textord" === t.type || "atom" === t.type;
}, "isCharacterBox"), p = e(function(e) {
	if (!e) throw Error("Expected non-null, but got " + String(e));
	return e;
}, "assert"), d = e(function(e) {
	var t = /^[\x00-\x20]*([^\\/#?]*?)(:|&#0*58|&#x0*3a|&colon)/i.exec(e);
	return t ? ":" === t[2] && /^[a-zA-Z][a-zA-Z0-9+\-.]*$/.test(t[1]) ? t[1].toLowerCase() : null : "_relative";
}, "protocolFromUrl"), g = {
	displayMode: {
		type: "boolean",
		description: "Render math in display mode, which puts the math in display style (so \\int and \\sum are large, for example), and centers the math on the page on its own line.",
		cli: "-d, --display-mode"
	},
	output: {
		type: { enum: [
			"htmlAndMathml",
			"html",
			"mathml"
		] },
		description: "Determines the markup language of the output.",
		cli: "-F, --format <type>"
	},
	leqno: {
		type: "boolean",
		description: "Render display math in leqno style (left-justified tags)."
	},
	fleqn: {
		type: "boolean",
		description: "Render display math flush left."
	},
	throwOnError: {
		type: "boolean",
		default: !0,
		cli: "-t, --no-throw-on-error",
		cliDescription: "Render errors (in the color given by --error-color) instead of throwing a ParseError exception when encountering an error."
	},
	errorColor: {
		type: "string",
		default: "#cc0000",
		cli: "-c, --error-color <color>",
		cliDescription: "A color string given in the format 'rgb' or 'rrggbb' (no #). This option determines the color of errors rendered by the -t option.",
		cliProcessor: e((e) => "#" + e, "cliProcessor")
	},
	macros: {
		type: "object",
		cli: "-m, --macro <def>",
		cliDescription: "Define custom macro of the form '\\foo:expansion' (use multiple -m arguments for multiple macros).",
		cliDefault: [],
		cliProcessor: e((e, t) => (t.push(e), t), "cliProcessor")
	},
	minRuleThickness: {
		type: "number",
		description: "Specifies a minimum thickness, in ems, for fraction lines, `\\sqrt` top lines, `{array}` vertical lines, `\\hline`, `\\hdashline`, `\\underline`, `\\overline`, and the borders of `\\fbox`, `\\boxed`, and `\\fcolorbox`.",
		processor: e((e) => Math.max(0, e), "processor"),
		cli: "--min-rule-thickness <size>",
		cliProcessor: parseFloat
	},
	colorIsTextColor: {
		type: "boolean",
		description: "Makes \\color behave like LaTeX's 2-argument \\textcolor, instead of LaTeX's one-argument \\color mode change.",
		cli: "-b, --color-is-text-color"
	},
	strict: {
		type: [
			{ enum: [
				"warn",
				"ignore",
				"error"
			] },
			"boolean",
			"function"
		],
		description: "Turn on strict / LaTeX faithfulness mode, which throws an error if the input uses features that are not supported by LaTeX.",
		cli: "-S, --strict",
		cliDefault: !1
	},
	trust: {
		type: ["boolean", "function"],
		description: "Trust the input, enabling all HTML features such as \\url.",
		cli: "-T, --trust"
	},
	maxSize: {
		type: "number",
		default: Infinity,
		description: "If non-zero, all user-specified sizes, e.g. in \\rule{500em}{500em}, will be capped to maxSize ems. Otherwise, elements and spaces can be arbitrarily large",
		processor: e((e) => Math.max(0, e), "processor"),
		cli: "-s, --max-size <n>",
		cliProcessor: parseInt
	},
	maxExpand: {
		type: "number",
		default: 1e3,
		description: "Limit the number of macro expansions to the specified number, to prevent e.g. infinite macro loops. If set to Infinity, the macro expander will try to fully expand as in LaTeX.",
		processor: e((e) => Math.max(0, e), "processor"),
		cli: "-e, --max-expand <n>",
		cliProcessor: e((e) => "Infinity" === e ? Infinity : parseInt(e), "cliProcessor")
	},
	globalGroup: {
		type: "boolean",
		cli: !1
	}
};
function f(e) {
	if (e.default) return e.default;
	var t = e.type, r = Array.isArray(t) ? t[0] : t;
	if ("string" != typeof r) return r.enum[0];
	switch (r) {
		case "boolean": return !1;
		case "string": return "";
		case "number": return 0;
		case "object": return {};
	}
}
e(f, "getDefaultValue");
var v = class {
	static {
		e(this, "Settings");
	}
	constructor(e) {
		for (var t in this.displayMode = void 0, this.output = void 0, this.leqno = void 0, this.fleqn = void 0, this.throwOnError = void 0, this.errorColor = void 0, this.macros = void 0, this.minRuleThickness = void 0, this.colorIsTextColor = void 0, this.strict = void 0, this.trust = void 0, this.maxSize = void 0, this.maxExpand = void 0, this.globalGroup = void 0, e = e || {}, g) if (g.hasOwnProperty(t)) {
			var r = g[t];
			this[t] = void 0 !== e[t] ? r.processor ? r.processor(e[t]) : e[t] : f(r);
		}
	}
	reportNonstrict(e, t, r) {
		var i = this.strict;
		if ("function" == typeof i && (i = i(e, t, r)), !(!i || "ignore" === i)) {
			if (!0 === i || "error" === i) throw new a("LaTeX-incompatible input and strict mode is set to 'error': " + (t + " [") + e + "]", r);
			"warn" === i ? "u" > typeof console && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + (t + " [") + e + "]") : "u" > typeof console && console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized '" + i + "': " + t + " [") + e + "]");
		}
	}
	useStrictBehavior(e, t, r) {
		var a = this.strict;
		if ("function" == typeof a) try {
			a = a(e, t, r);
		} catch {
			a = "error";
		}
		return !!a && "ignore" !== a && (!0 === a || "error" === a || ("warn" === a ? "u" > typeof console && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + (t + " [") + e + "]") : "u" > typeof console && console.warn("LaTeX-incompatible input and strict mode is set to " + ("unrecognized '" + a + "': " + t + " [") + e + "]"), !1));
	}
	isTrusted(e) {
		if (e.url && !e.protocol) {
			var t = d(e.url);
			if (null == t) return !1;
			e.protocol = t;
		}
		return !!("function" == typeof this.trust ? this.trust(e) : this.trust);
	}
}, b = class {
	static {
		e(this, "Style");
	}
	constructor(e, t, r) {
		this.id = void 0, this.size = void 0, this.cramped = void 0, this.id = e, this.size = t, this.cramped = r;
	}
	sup() {
		return y[x[this.id]];
	}
	sub() {
		return y[w[this.id]];
	}
	fracNum() {
		return y[k[this.id]];
	}
	fracDen() {
		return y[S[this.id]];
	}
	cramp() {
		return y[z[this.id]];
	}
	text() {
		return y[M[this.id]];
	}
	isTight() {
		return this.size >= 2;
	}
}, y = [
	new b(0, 0, !1),
	new b(1, 0, !0),
	new b(2, 1, !1),
	new b(3, 1, !0),
	new b(4, 2, !1),
	new b(5, 2, !0),
	new b(6, 3, !1),
	new b(7, 3, !0)
], x = [
	4,
	5,
	4,
	5,
	6,
	7,
	6,
	7
], w = [
	5,
	5,
	5,
	5,
	7,
	7,
	7,
	7
], k = [
	2,
	3,
	4,
	5,
	6,
	7,
	6,
	7
], S = [
	3,
	3,
	5,
	5,
	7,
	7,
	7,
	7
], z = [
	1,
	1,
	3,
	3,
	5,
	5,
	7,
	7
], M = [
	0,
	1,
	2,
	3,
	2,
	3,
	2,
	3
], A = {
	DISPLAY: y[0],
	TEXT: y[2],
	SCRIPT: y[4],
	SCRIPTSCRIPT: y[6]
}, T = [
	{
		name: "latin",
		blocks: [[256, 591], [768, 879]]
	},
	{
		name: "cyrillic",
		blocks: [[1024, 1279]]
	},
	{
		name: "armenian",
		blocks: [[1328, 1423]]
	},
	{
		name: "brahmic",
		blocks: [[2304, 4255]]
	},
	{
		name: "georgian",
		blocks: [[4256, 4351]]
	},
	{
		name: "cjk",
		blocks: [
			[12288, 12543],
			[19968, 40879],
			[65280, 65376]
		]
	},
	{
		name: "hangul",
		blocks: [[44032, 55215]]
	}
];
function B(e) {
	for (var t = 0; t < T.length; t++) for (var r = T[t], a = 0; a < r.blocks.length; a++) {
		var i = r.blocks[a];
		if (e >= i[0] && e <= i[1]) return r.name;
	}
	return null;
}
e(B, "scriptFromCodepoint");
var q = [];
function C(e) {
	for (var t = 0; t < q.length; t += 2) if (e >= q[t] && e <= q[t + 1]) return !0;
	return !1;
}
T.forEach((e) => e.blocks.forEach((e) => q.push(...e))), e(C, "supportedCodepoint");
var I = e(function(e, t) {
	return "M95," + (622 + e + t) + `
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l` + e / 2.075 + " -" + e + `
c5.3,-9.3,12,-14,20,-14
H400000v` + (40 + e) + `H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M` + (834 + e) + " " + t + "h400000v" + (40 + e) + "h-400000z";
}, "sqrtMain"), H = e(function(e, t) {
	return "M263," + (601 + e + t) + `c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l` + e / 2.084 + " -" + e + `
c4.7,-7.3,11,-11,19,-11
H40000v` + (40 + e) + `H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M` + (1001 + e) + " " + t + "h400000v" + (40 + e) + "h-400000z";
}, "sqrtSize1"), R = e(function(e, t) {
	return "M983 " + (10 + e + t) + `
l` + e / 3.13 + " -" + e + `
c4,-6.7,10,-10,18,-10 H400000v` + (40 + e) + `
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M` + (1001 + e) + " " + t + "h400000v" + (40 + e) + "h-400000z";
}, "sqrtSize2"), E = e(function(e, t) {
	return "M424," + (2398 + e + t) + `
c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514
c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20
s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121
s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081
l` + e / 4.223 + " -" + e + `c4,-6.7,10,-10,18,-10 H400000
v` + (40 + e) + `H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185
c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M` + (1001 + e) + " " + t + `
h400000v` + (40 + e) + "h-400000z";
}, "sqrtSize3"), O = e(function(e, t) {
	return "M473," + (2713 + e + t) + `
c339.3,-1799.3,509.3,-2700,510,-2702 l` + e / 5.298 + " -" + e + `
c3.3,-7.3,9.3,-11,18,-11 H400000v` + (40 + e) + `H1017.7
s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200
c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26
s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,
606zM` + (1001 + e) + " " + t + "h400000v" + (40 + e) + "H1017.7z";
}, "sqrtSize4"), N = e(function(e) {
	return "M400000 " + e + " H0 L" + e / 2 + " 0 l65 45 L145 " + (e - 80) + " H400000z";
}, "phasePath"), D = e(function(e, t, r) {
	return "M702 " + (e + t) + "H400000" + (40 + e) + `
H742v` + (r - 54 - t - e) + `l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1
h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170
c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667
219 661 l218 661zM702 ` + t + "H400000v" + (40 + e) + "H742z";
}, "sqrtTall"), L = e(function(e, t, r) {
	t *= 1e3;
	var a = "";
	switch (e) {
		case "sqrtMain":
			a = I(t, 80);
			break;
		case "sqrtSize1":
			a = H(t, 80);
			break;
		case "sqrtSize2":
			a = R(t, 80);
			break;
		case "sqrtSize3":
			a = E(t, 80);
			break;
		case "sqrtSize4":
			a = O(t, 80);
			break;
		case "sqrtTall": a = D(t, 80, r);
	}
	return a;
}, "sqrtPath"), P = e(function(e, t) {
	switch (e) {
		case "⎜": return "M291 0 H417 V" + t + " H291z M291 0 H417 V" + t + " H291z";
		case "∣": return "M145 0 H188 V" + t + " H145z M145 0 H188 V" + t + " H145z";
		case "∥": return "M145 0 H188 V" + t + " H145z M145 0 H188 V" + t + " H145z" + ("M367 0 H410 V" + t + " H367z M367 0 H410 V") + t + " H367z";
		case "⎟": return "M457 0 H583 V" + t + " H457z M457 0 H583 V" + t + " H457z";
		case "⎢": return "M319 0 H403 V" + t + " H319z M319 0 H403 V" + t + " H319z";
		case "⎥": return "M263 0 H347 V" + t + " H263z M263 0 H347 V" + t + " H263z";
		case "⎪": return "M384 0 H504 V" + t + " H384z M384 0 H504 V" + t + " H384z";
		case "⏐": return "M312 0 H355 V" + t + " H312z M312 0 H355 V" + t + " H312z";
		case "‖": return "M257 0 H300 V" + t + " H257z M257 0 H300 V" + t + " H257z" + ("M478 0 H521 V" + t + " H478z M478 0 H521 V") + t + " H478z";
		default: return "";
	}
}, "innerPath"), F = {
	doubleleftarrow: `M262 157
l10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3
 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28
 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5
c2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5
 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87
-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7
-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z
m8 0v40h399730v-40zm0 194v40h399730v-40z`,
	doublerightarrow: `M399738 392l
-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5
 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88
-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68
-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18
-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782
c-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3
-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z`,
	leftarrow: `M400000 241H110l3-3c68.7-52.7 113.7-120
 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8
-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247
c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208
 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3
 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202
 l-3-3h399890zM100 241v40h399900v-40z`,
	leftbrace: `M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117
-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7
 5-6 9-10 13-.7 1-7.3 1-20 1H6z`,
	leftbraceunder: `M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z`,
	leftgroup: `M400000 80
H435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0
 435 0h399565z`,
	leftgroupunder: `M400000 262
H435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219
 435 219h399565z`,
	leftharpoon: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3
-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5
-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7
-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z`,
	leftharpoonplus: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5
 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3
-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7
-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z
m0 0v40h400000v-40z`,
	leftharpoondown: `M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333
 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5
 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667
-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z`,
	leftharpoondownplus: `M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12
 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7
-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0
v40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z`,
	lefthook: `M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5
-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3
-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21
 71.5 23h399859zM103 281v-40h399897v40z`,
	leftlinesegment: `M40 281 V428 H0 V94 H40 V241 H400000 v40z
M40 281 V428 H0 V94 H40 V241 H400000 v40z`,
	leftmapsto: `M40 281 V448H0V74H40V241H400000v40z
M40 281 V448H0V74H40V241H400000v40z`,
	leftToFrom: `M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23
-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8
c28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3
 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z`,
	longequal: `M0 50 h400000 v40H0z m0 194h40000v40H0z
M0 50 h400000 v40H0z m0 194h40000v40H0z`,
	midbrace: `M200428 334
c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14
-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7
 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11
 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z`,
	midbraceunder: `M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z`,
	oiintSize1: `M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6
-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z
m368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8
60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z`,
	oiintSize2: `M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8
-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z
m502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2
c0 110 84 276 504 276s502.4-166 502.4-276z`,
	oiiintSize1: `M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6
-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z
m525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0
85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z`,
	oiiintSize2: `M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8
-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z
m770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1
c0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z`,
	rightarrow: `M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z`,
	rightbrace: `M400000 542l
-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5
s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1
c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z`,
	rightbraceunder: `M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z`,
	rightgroup: `M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0
 3-1 3-3v-38c-76-158-257-219-435-219H0z`,
	rightgroupunder: `M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18
 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z`,
	rightharpoon: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z`,
	rightharpoonplus: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11
-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7
 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z
m0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z`,
	rightharpoondown: `M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8
 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5
-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95
-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z`,
	rightharpoondownplus: `M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8
 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3
 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3
-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z
m0-194v40h400000v-40zm0 0v40h400000v-40z`,
	righthook: `M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3
 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0
-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21
 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z`,
	rightlinesegment: `M399960 241 V94 h40 V428 h-40 V281 H0 v-40z
M399960 241 V94 h40 V428 h-40 V281 H0 v-40z`,
	rightToFrom: `M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23
 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32
-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142
-167z M100 147v40h399900v-40zM0 341v40h399900v-40z`,
	twoheadleftarrow: `M0 167c68 40
 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69
-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3
-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19
-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101
 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z`,
	twoheadrightarrow: `M400000 167
c-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3
 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42
 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333
-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70
 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z`,
	tilde1: `M200 55.538c-77 0-168 73.953-177 73.953-3 0-7
-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0
 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0
 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128
-68.267.847-113-73.952-191-73.952z`,
	tilde2: `M344 55.266c-142 0-300.638 81.316-311.5 86.418
-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9
 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114
c1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751
 181.476 676 181.476c-149 0-189-126.21-332-126.21z`,
	tilde3: `M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457
-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0
 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697
 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696
 -338 0-409-156.573-744-156.573z`,
	tilde4: `M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345
-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409
 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9
 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409
 -175.236-744-175.236z`,
	vec: `M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`,
	widehat1: `M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`,
	widehat2: `M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,
	widehat3: `M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,
	widehat4: `M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,
	widecheck1: `M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,
-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z`,
	widecheck2: `M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,
	widecheck3: `M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,
	widecheck4: `M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,
	baraboveleftarrow: `M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202
c4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5
c-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130
s-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47
121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6
s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11
c0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z
M100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z`,
	rightarrowabovebar: `M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32
-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0
13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39
-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5
-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z`,
	baraboveshortleftharpoon: `M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11
c1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17
c2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21
c-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40
c-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z
M0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z`,
	rightharpoonaboveshortbar: `M0,241 l0,40c399126,0,399993,0,399993,0
c4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,
-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6
c-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z
M0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z`,
	shortbaraboveleftharpoon: `M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11
c1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,
1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,
-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z
M93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z`,
	shortrightharpoonabovebar: `M53,241l0,40c398570,0,399437,0,399437,0
c4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,
-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6
c-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z
M500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z`
}, V = e(function(e, t) {
	switch (e) {
		case "lbrack": return "M403 1759 V84 H666 V0 H319 V1759 v" + t + ` v1759 h347 v-84
H403z M403 1759 V0 H319 V1759 v` + t + " v1759 h84z";
		case "rbrack": return "M347 1759 V0 H0 V84 H263 V1759 v" + t + ` v1759 H0 v84 H347z
M347 1759 V0 H263 V1759 v` + t + " v1759 h84z";
		case "vert": return "M145 15 v585 v" + t + ` v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v` + -t + ` v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v` + t + " v585 h43z";
		case "doublevert": return "M145 15 v585 v" + t + ` v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v` + -t + ` v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v` + t + ` v585 h43z
M367 15 v585 v` + t + ` v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v` + -t + ` v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v` + t + " v585 h43z";
		case "lfloor": return "M319 602 V0 H403 V602 v" + t + ` v1715 h263 v84 H319z
MM319 602 V0 H403 V602 v` + t + " v1715 H319z";
		case "rfloor": return "M319 602 V0 H403 V602 v" + t + ` v1799 H0 v-84 H319z
MM319 602 V0 H403 V602 v` + t + " v1715 H319z";
		case "lceil": return "M403 1759 V84 H666 V0 H319 V1759 v" + t + ` v602 h84z
M403 1759 V0 H319 V1759 v` + t + " v602 h84z";
		case "rceil": return "M347 1759 V0 H0 V84 H263 V1759 v" + t + ` v602 h84z
M347 1759 V0 h-84 V1759 v` + t + " v602 h84z";
		case "lparen": return `M863,9c0,-2,-2,-5,-6,-9c0,0,-17,0,-17,0c-12.7,0,-19.3,0.3,-20,1
c-5.3,5.3,-10.3,11,-15,17c-242.7,294.7,-395.3,682,-458,1162c-21.3,163.3,-33.3,349,
-36,557 l0,` + (t + 84) + `c0.2,6,0,26,0,60c2,159.3,10,310.7,24,454c53.3,528,210,
949.7,470,1265c4.7,6,9.7,11.7,15,17c0.7,0.7,7,1,19,1c0,0,18,0,18,0c4,-4,6,-7,6,-9
c0,-2.7,-3.3,-8.7,-10,-18c-135.3,-192.7,-235.5,-414.3,-300.5,-665c-65,-250.7,-102.5,
-544.7,-112.5,-882c-2,-104,-3,-167,-3,-189
l0,-` + (t + 92) + `c0,-162.7,5.7,-314,17,-454c20.7,-272,63.7,-513,129,-723c65.3,
-210,155.3,-396.3,270,-559c6.7,-9.3,10,-15.3,10,-18z`;
		case "rparen": return `M76,0c-16.7,0,-25,3,-25,9c0,2,2,6.3,6,13c21.3,28.7,42.3,60.3,
63,95c96.7,156.7,172.8,332.5,228.5,527.5c55.7,195,92.8,416.5,111.5,664.5
c11.3,139.3,17,290.7,17,454c0,28,1.7,43,3.3,45l0,` + (t + 9) + `
c-3,4,-3.3,16.7,-3.3,38c0,162,-5.7,313.7,-17,455c-18.7,248,-55.8,469.3,-111.5,664
c-55.7,194.7,-131.8,370.3,-228.5,527c-20.7,34.7,-41.7,66.3,-63,95c-2,3.3,-4,7,-6,11
c0,7.3,5.7,11,17,11c0,0,11,0,11,0c9.3,0,14.3,-0.3,15,-1c5.3,-5.3,10.3,-11,15,-17
c242.7,-294.7,395.3,-681.7,458,-1161c21.3,-164.7,33.3,-350.7,36,-558
l0,-` + (t + 144) + `c-2,-159.3,-10,-310.7,-24,-454c-53.3,-528,-210,-949.7,
-470,-1265c-4.7,-6,-9.7,-11.7,-15,-17c-0.7,-0.7,-6.7,-1,-18,-1z`;
		default: throw Error("Unknown stretchy delimiter.");
	}
}, "tallDelim"), G = class {
	static {
		e(this, "DocumentFragment");
	}
	constructor(e) {
		this.children = void 0, this.classes = void 0, this.height = void 0, this.depth = void 0, this.maxFontSize = void 0, this.style = void 0, this.children = e, this.classes = [], this.height = 0, this.depth = 0, this.maxFontSize = 0, this.style = {};
	}
	hasClass(e) {
		return i(this.classes, e);
	}
	toNode() {
		for (var e = document.createDocumentFragment(), t = 0; t < this.children.length; t++) e.appendChild(this.children[t].toNode());
		return e;
	}
	toMarkup() {
		for (var e = "", t = 0; t < this.children.length; t++) e += this.children[t].toMarkup();
		return e;
	}
	toText() {
		var t = e((e) => e.toText(), "toText");
		return this.children.map(t).join("");
	}
}, U = {
	"AMS-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		65: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		66: [
			0,
			.68889,
			0,
			0,
			.66667
		],
		67: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		68: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		69: [
			0,
			.68889,
			0,
			0,
			.66667
		],
		70: [
			0,
			.68889,
			0,
			0,
			.61111
		],
		71: [
			0,
			.68889,
			0,
			0,
			.77778
		],
		72: [
			0,
			.68889,
			0,
			0,
			.77778
		],
		73: [
			0,
			.68889,
			0,
			0,
			.38889
		],
		74: [
			.16667,
			.68889,
			0,
			0,
			.5
		],
		75: [
			0,
			.68889,
			0,
			0,
			.77778
		],
		76: [
			0,
			.68889,
			0,
			0,
			.66667
		],
		77: [
			0,
			.68889,
			0,
			0,
			.94445
		],
		78: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		79: [
			.16667,
			.68889,
			0,
			0,
			.77778
		],
		80: [
			0,
			.68889,
			0,
			0,
			.61111
		],
		81: [
			.16667,
			.68889,
			0,
			0,
			.77778
		],
		82: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		83: [
			0,
			.68889,
			0,
			0,
			.55556
		],
		84: [
			0,
			.68889,
			0,
			0,
			.66667
		],
		85: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		86: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		87: [
			0,
			.68889,
			0,
			0,
			1
		],
		88: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		89: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		90: [
			0,
			.68889,
			0,
			0,
			.66667
		],
		107: [
			0,
			.68889,
			0,
			0,
			.55556
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		165: [
			0,
			.675,
			.025,
			0,
			.75
		],
		174: [
			.15559,
			.69224,
			0,
			0,
			.94666
		],
		240: [
			0,
			.68889,
			0,
			0,
			.55556
		],
		295: [
			0,
			.68889,
			0,
			0,
			.54028
		],
		710: [
			0,
			.825,
			0,
			0,
			2.33334
		],
		732: [
			0,
			.9,
			0,
			0,
			2.33334
		],
		770: [
			0,
			.825,
			0,
			0,
			2.33334
		],
		771: [
			0,
			.9,
			0,
			0,
			2.33334
		],
		989: [
			.08167,
			.58167,
			0,
			0,
			.77778
		],
		1008: [
			0,
			.43056,
			.04028,
			0,
			.66667
		],
		8245: [
			0,
			.54986,
			0,
			0,
			.275
		],
		8463: [
			0,
			.68889,
			0,
			0,
			.54028
		],
		8487: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		8498: [
			0,
			.68889,
			0,
			0,
			.55556
		],
		8502: [
			0,
			.68889,
			0,
			0,
			.66667
		],
		8503: [
			0,
			.68889,
			0,
			0,
			.44445
		],
		8504: [
			0,
			.68889,
			0,
			0,
			.66667
		],
		8513: [
			0,
			.68889,
			0,
			0,
			.63889
		],
		8592: [
			-.03598,
			.46402,
			0,
			0,
			.5
		],
		8594: [
			-.03598,
			.46402,
			0,
			0,
			.5
		],
		8602: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8603: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8606: [
			.01354,
			.52239,
			0,
			0,
			1
		],
		8608: [
			.01354,
			.52239,
			0,
			0,
			1
		],
		8610: [
			.01354,
			.52239,
			0,
			0,
			1.11111
		],
		8611: [
			.01354,
			.52239,
			0,
			0,
			1.11111
		],
		8619: [
			0,
			.54986,
			0,
			0,
			1
		],
		8620: [
			0,
			.54986,
			0,
			0,
			1
		],
		8621: [
			-.13313,
			.37788,
			0,
			0,
			1.38889
		],
		8622: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8624: [
			0,
			.69224,
			0,
			0,
			.5
		],
		8625: [
			0,
			.69224,
			0,
			0,
			.5
		],
		8630: [
			0,
			.43056,
			0,
			0,
			1
		],
		8631: [
			0,
			.43056,
			0,
			0,
			1
		],
		8634: [
			.08198,
			.58198,
			0,
			0,
			.77778
		],
		8635: [
			.08198,
			.58198,
			0,
			0,
			.77778
		],
		8638: [
			.19444,
			.69224,
			0,
			0,
			.41667
		],
		8639: [
			.19444,
			.69224,
			0,
			0,
			.41667
		],
		8642: [
			.19444,
			.69224,
			0,
			0,
			.41667
		],
		8643: [
			.19444,
			.69224,
			0,
			0,
			.41667
		],
		8644: [
			.1808,
			.675,
			0,
			0,
			1
		],
		8646: [
			.1808,
			.675,
			0,
			0,
			1
		],
		8647: [
			.1808,
			.675,
			0,
			0,
			1
		],
		8648: [
			.19444,
			.69224,
			0,
			0,
			.83334
		],
		8649: [
			.1808,
			.675,
			0,
			0,
			1
		],
		8650: [
			.19444,
			.69224,
			0,
			0,
			.83334
		],
		8651: [
			.01354,
			.52239,
			0,
			0,
			1
		],
		8652: [
			.01354,
			.52239,
			0,
			0,
			1
		],
		8653: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8654: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8655: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8666: [
			.13667,
			.63667,
			0,
			0,
			1
		],
		8667: [
			.13667,
			.63667,
			0,
			0,
			1
		],
		8669: [
			-.13313,
			.37788,
			0,
			0,
			1
		],
		8672: [
			-.064,
			.437,
			0,
			0,
			1.334
		],
		8674: [
			-.064,
			.437,
			0,
			0,
			1.334
		],
		8705: [
			0,
			.825,
			0,
			0,
			.5
		],
		8708: [
			0,
			.68889,
			0,
			0,
			.55556
		],
		8709: [
			.08167,
			.58167,
			0,
			0,
			.77778
		],
		8717: [
			0,
			.43056,
			0,
			0,
			.42917
		],
		8722: [
			-.03598,
			.46402,
			0,
			0,
			.5
		],
		8724: [
			.08198,
			.69224,
			0,
			0,
			.77778
		],
		8726: [
			.08167,
			.58167,
			0,
			0,
			.77778
		],
		8733: [
			0,
			.69224,
			0,
			0,
			.77778
		],
		8736: [
			0,
			.69224,
			0,
			0,
			.72222
		],
		8737: [
			0,
			.69224,
			0,
			0,
			.72222
		],
		8738: [
			.03517,
			.52239,
			0,
			0,
			.72222
		],
		8739: [
			.08167,
			.58167,
			0,
			0,
			.22222
		],
		8740: [
			.25142,
			.74111,
			0,
			0,
			.27778
		],
		8741: [
			.08167,
			.58167,
			0,
			0,
			.38889
		],
		8742: [
			.25142,
			.74111,
			0,
			0,
			.5
		],
		8756: [
			0,
			.69224,
			0,
			0,
			.66667
		],
		8757: [
			0,
			.69224,
			0,
			0,
			.66667
		],
		8764: [
			-.13313,
			.36687,
			0,
			0,
			.77778
		],
		8765: [
			-.13313,
			.37788,
			0,
			0,
			.77778
		],
		8769: [
			-.13313,
			.36687,
			0,
			0,
			.77778
		],
		8770: [
			-.03625,
			.46375,
			0,
			0,
			.77778
		],
		8774: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		8776: [
			-.01688,
			.48312,
			0,
			0,
			.77778
		],
		8778: [
			.08167,
			.58167,
			0,
			0,
			.77778
		],
		8782: [
			.06062,
			.54986,
			0,
			0,
			.77778
		],
		8783: [
			.06062,
			.54986,
			0,
			0,
			.77778
		],
		8785: [
			.08198,
			.58198,
			0,
			0,
			.77778
		],
		8786: [
			.08198,
			.58198,
			0,
			0,
			.77778
		],
		8787: [
			.08198,
			.58198,
			0,
			0,
			.77778
		],
		8790: [
			0,
			.69224,
			0,
			0,
			.77778
		],
		8791: [
			.22958,
			.72958,
			0,
			0,
			.77778
		],
		8796: [
			.08198,
			.91667,
			0,
			0,
			.77778
		],
		8806: [
			.25583,
			.75583,
			0,
			0,
			.77778
		],
		8807: [
			.25583,
			.75583,
			0,
			0,
			.77778
		],
		8808: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		8809: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		8812: [
			.25583,
			.75583,
			0,
			0,
			.5
		],
		8814: [
			.20576,
			.70576,
			0,
			0,
			.77778
		],
		8815: [
			.20576,
			.70576,
			0,
			0,
			.77778
		],
		8816: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		8817: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		8818: [
			.22958,
			.72958,
			0,
			0,
			.77778
		],
		8819: [
			.22958,
			.72958,
			0,
			0,
			.77778
		],
		8822: [
			.1808,
			.675,
			0,
			0,
			.77778
		],
		8823: [
			.1808,
			.675,
			0,
			0,
			.77778
		],
		8828: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		8829: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		8830: [
			.22958,
			.72958,
			0,
			0,
			.77778
		],
		8831: [
			.22958,
			.72958,
			0,
			0,
			.77778
		],
		8832: [
			.20576,
			.70576,
			0,
			0,
			.77778
		],
		8833: [
			.20576,
			.70576,
			0,
			0,
			.77778
		],
		8840: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		8841: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		8842: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		8843: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		8847: [
			.03517,
			.54986,
			0,
			0,
			.77778
		],
		8848: [
			.03517,
			.54986,
			0,
			0,
			.77778
		],
		8858: [
			.08198,
			.58198,
			0,
			0,
			.77778
		],
		8859: [
			.08198,
			.58198,
			0,
			0,
			.77778
		],
		8861: [
			.08198,
			.58198,
			0,
			0,
			.77778
		],
		8862: [
			0,
			.675,
			0,
			0,
			.77778
		],
		8863: [
			0,
			.675,
			0,
			0,
			.77778
		],
		8864: [
			0,
			.675,
			0,
			0,
			.77778
		],
		8865: [
			0,
			.675,
			0,
			0,
			.77778
		],
		8872: [
			0,
			.69224,
			0,
			0,
			.61111
		],
		8873: [
			0,
			.69224,
			0,
			0,
			.72222
		],
		8874: [
			0,
			.69224,
			0,
			0,
			.88889
		],
		8876: [
			0,
			.68889,
			0,
			0,
			.61111
		],
		8877: [
			0,
			.68889,
			0,
			0,
			.61111
		],
		8878: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		8879: [
			0,
			.68889,
			0,
			0,
			.72222
		],
		8882: [
			.03517,
			.54986,
			0,
			0,
			.77778
		],
		8883: [
			.03517,
			.54986,
			0,
			0,
			.77778
		],
		8884: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		8885: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		8888: [
			0,
			.54986,
			0,
			0,
			1.11111
		],
		8890: [
			.19444,
			.43056,
			0,
			0,
			.55556
		],
		8891: [
			.19444,
			.69224,
			0,
			0,
			.61111
		],
		8892: [
			.19444,
			.69224,
			0,
			0,
			.61111
		],
		8901: [
			0,
			.54986,
			0,
			0,
			.27778
		],
		8903: [
			.08167,
			.58167,
			0,
			0,
			.77778
		],
		8905: [
			.08167,
			.58167,
			0,
			0,
			.77778
		],
		8906: [
			.08167,
			.58167,
			0,
			0,
			.77778
		],
		8907: [
			0,
			.69224,
			0,
			0,
			.77778
		],
		8908: [
			0,
			.69224,
			0,
			0,
			.77778
		],
		8909: [
			-.03598,
			.46402,
			0,
			0,
			.77778
		],
		8910: [
			0,
			.54986,
			0,
			0,
			.76042
		],
		8911: [
			0,
			.54986,
			0,
			0,
			.76042
		],
		8912: [
			.03517,
			.54986,
			0,
			0,
			.77778
		],
		8913: [
			.03517,
			.54986,
			0,
			0,
			.77778
		],
		8914: [
			0,
			.54986,
			0,
			0,
			.66667
		],
		8915: [
			0,
			.54986,
			0,
			0,
			.66667
		],
		8916: [
			0,
			.69224,
			0,
			0,
			.66667
		],
		8918: [
			.0391,
			.5391,
			0,
			0,
			.77778
		],
		8919: [
			.0391,
			.5391,
			0,
			0,
			.77778
		],
		8920: [
			.03517,
			.54986,
			0,
			0,
			1.33334
		],
		8921: [
			.03517,
			.54986,
			0,
			0,
			1.33334
		],
		8922: [
			.38569,
			.88569,
			0,
			0,
			.77778
		],
		8923: [
			.38569,
			.88569,
			0,
			0,
			.77778
		],
		8926: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		8927: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		8928: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		8929: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		8934: [
			.23222,
			.74111,
			0,
			0,
			.77778
		],
		8935: [
			.23222,
			.74111,
			0,
			0,
			.77778
		],
		8936: [
			.23222,
			.74111,
			0,
			0,
			.77778
		],
		8937: [
			.23222,
			.74111,
			0,
			0,
			.77778
		],
		8938: [
			.20576,
			.70576,
			0,
			0,
			.77778
		],
		8939: [
			.20576,
			.70576,
			0,
			0,
			.77778
		],
		8940: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		8941: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		8994: [
			.19444,
			.69224,
			0,
			0,
			.77778
		],
		8995: [
			.19444,
			.69224,
			0,
			0,
			.77778
		],
		9416: [
			.15559,
			.69224,
			0,
			0,
			.90222
		],
		9484: [
			0,
			.69224,
			0,
			0,
			.5
		],
		9488: [
			0,
			.69224,
			0,
			0,
			.5
		],
		9492: [
			0,
			.37788,
			0,
			0,
			.5
		],
		9496: [
			0,
			.37788,
			0,
			0,
			.5
		],
		9585: [
			.19444,
			.68889,
			0,
			0,
			.88889
		],
		9586: [
			.19444,
			.74111,
			0,
			0,
			.88889
		],
		9632: [
			0,
			.675,
			0,
			0,
			.77778
		],
		9633: [
			0,
			.675,
			0,
			0,
			.77778
		],
		9650: [
			0,
			.54986,
			0,
			0,
			.72222
		],
		9651: [
			0,
			.54986,
			0,
			0,
			.72222
		],
		9654: [
			.03517,
			.54986,
			0,
			0,
			.77778
		],
		9660: [
			0,
			.54986,
			0,
			0,
			.72222
		],
		9661: [
			0,
			.54986,
			0,
			0,
			.72222
		],
		9664: [
			.03517,
			.54986,
			0,
			0,
			.77778
		],
		9674: [
			.11111,
			.69224,
			0,
			0,
			.66667
		],
		9733: [
			.19444,
			.69224,
			0,
			0,
			.94445
		],
		10003: [
			0,
			.69224,
			0,
			0,
			.83334
		],
		10016: [
			0,
			.69224,
			0,
			0,
			.83334
		],
		10731: [
			.11111,
			.69224,
			0,
			0,
			.66667
		],
		10846: [
			.19444,
			.75583,
			0,
			0,
			.61111
		],
		10877: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		10878: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		10885: [
			.25583,
			.75583,
			0,
			0,
			.77778
		],
		10886: [
			.25583,
			.75583,
			0,
			0,
			.77778
		],
		10887: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		10888: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		10889: [
			.26167,
			.75726,
			0,
			0,
			.77778
		],
		10890: [
			.26167,
			.75726,
			0,
			0,
			.77778
		],
		10891: [
			.48256,
			.98256,
			0,
			0,
			.77778
		],
		10892: [
			.48256,
			.98256,
			0,
			0,
			.77778
		],
		10901: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		10902: [
			.13667,
			.63667,
			0,
			0,
			.77778
		],
		10933: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		10934: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		10935: [
			.26167,
			.75726,
			0,
			0,
			.77778
		],
		10936: [
			.26167,
			.75726,
			0,
			0,
			.77778
		],
		10937: [
			.26167,
			.75726,
			0,
			0,
			.77778
		],
		10938: [
			.26167,
			.75726,
			0,
			0,
			.77778
		],
		10949: [
			.25583,
			.75583,
			0,
			0,
			.77778
		],
		10950: [
			.25583,
			.75583,
			0,
			0,
			.77778
		],
		10955: [
			.28481,
			.79383,
			0,
			0,
			.77778
		],
		10956: [
			.28481,
			.79383,
			0,
			0,
			.77778
		],
		57350: [
			.08167,
			.58167,
			0,
			0,
			.22222
		],
		57351: [
			.08167,
			.58167,
			0,
			0,
			.38889
		],
		57352: [
			.08167,
			.58167,
			0,
			0,
			.77778
		],
		57353: [
			0,
			.43056,
			.04028,
			0,
			.66667
		],
		57356: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		57357: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		57358: [
			.41951,
			.91951,
			0,
			0,
			.77778
		],
		57359: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		57360: [
			.30274,
			.79383,
			0,
			0,
			.77778
		],
		57361: [
			.41951,
			.91951,
			0,
			0,
			.77778
		],
		57366: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		57367: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		57368: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		57369: [
			.25142,
			.75726,
			0,
			0,
			.77778
		],
		57370: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		57371: [
			.13597,
			.63597,
			0,
			0,
			.77778
		]
	},
	"Caligraphic-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		65: [
			0,
			.68333,
			0,
			.19445,
			.79847
		],
		66: [
			0,
			.68333,
			.03041,
			.13889,
			.65681
		],
		67: [
			0,
			.68333,
			.05834,
			.13889,
			.52653
		],
		68: [
			0,
			.68333,
			.02778,
			.08334,
			.77139
		],
		69: [
			0,
			.68333,
			.08944,
			.11111,
			.52778
		],
		70: [
			0,
			.68333,
			.09931,
			.11111,
			.71875
		],
		71: [
			.09722,
			.68333,
			.0593,
			.11111,
			.59487
		],
		72: [
			0,
			.68333,
			.00965,
			.11111,
			.84452
		],
		73: [
			0,
			.68333,
			.07382,
			0,
			.54452
		],
		74: [
			.09722,
			.68333,
			.18472,
			.16667,
			.67778
		],
		75: [
			0,
			.68333,
			.01445,
			.05556,
			.76195
		],
		76: [
			0,
			.68333,
			0,
			.13889,
			.68972
		],
		77: [
			0,
			.68333,
			0,
			.13889,
			1.2009
		],
		78: [
			0,
			.68333,
			.14736,
			.08334,
			.82049
		],
		79: [
			0,
			.68333,
			.02778,
			.11111,
			.79611
		],
		80: [
			0,
			.68333,
			.08222,
			.08334,
			.69556
		],
		81: [
			.09722,
			.68333,
			0,
			.11111,
			.81667
		],
		82: [
			0,
			.68333,
			0,
			.08334,
			.8475
		],
		83: [
			0,
			.68333,
			.075,
			.13889,
			.60556
		],
		84: [
			0,
			.68333,
			.25417,
			0,
			.54464
		],
		85: [
			0,
			.68333,
			.09931,
			.08334,
			.62583
		],
		86: [
			0,
			.68333,
			.08222,
			0,
			.61278
		],
		87: [
			0,
			.68333,
			.08222,
			.08334,
			.98778
		],
		88: [
			0,
			.68333,
			.14643,
			.13889,
			.7133
		],
		89: [
			.09722,
			.68333,
			.08222,
			.08334,
			.66834
		],
		90: [
			0,
			.68333,
			.07944,
			.13889,
			.72473
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		]
	},
	"Fraktur-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		33: [
			0,
			.69141,
			0,
			0,
			.29574
		],
		34: [
			0,
			.69141,
			0,
			0,
			.21471
		],
		38: [
			0,
			.69141,
			0,
			0,
			.73786
		],
		39: [
			0,
			.69141,
			0,
			0,
			.21201
		],
		40: [
			.24982,
			.74947,
			0,
			0,
			.38865
		],
		41: [
			.24982,
			.74947,
			0,
			0,
			.38865
		],
		42: [
			0,
			.62119,
			0,
			0,
			.27764
		],
		43: [
			.08319,
			.58283,
			0,
			0,
			.75623
		],
		44: [
			0,
			.10803,
			0,
			0,
			.27764
		],
		45: [
			.08319,
			.58283,
			0,
			0,
			.75623
		],
		46: [
			0,
			.10803,
			0,
			0,
			.27764
		],
		47: [
			.24982,
			.74947,
			0,
			0,
			.50181
		],
		48: [
			0,
			.47534,
			0,
			0,
			.50181
		],
		49: [
			0,
			.47534,
			0,
			0,
			.50181
		],
		50: [
			0,
			.47534,
			0,
			0,
			.50181
		],
		51: [
			.18906,
			.47534,
			0,
			0,
			.50181
		],
		52: [
			.18906,
			.47534,
			0,
			0,
			.50181
		],
		53: [
			.18906,
			.47534,
			0,
			0,
			.50181
		],
		54: [
			0,
			.69141,
			0,
			0,
			.50181
		],
		55: [
			.18906,
			.47534,
			0,
			0,
			.50181
		],
		56: [
			0,
			.69141,
			0,
			0,
			.50181
		],
		57: [
			.18906,
			.47534,
			0,
			0,
			.50181
		],
		58: [
			0,
			.47534,
			0,
			0,
			.21606
		],
		59: [
			.12604,
			.47534,
			0,
			0,
			.21606
		],
		61: [
			-.13099,
			.36866,
			0,
			0,
			.75623
		],
		63: [
			0,
			.69141,
			0,
			0,
			.36245
		],
		65: [
			0,
			.69141,
			0,
			0,
			.7176
		],
		66: [
			0,
			.69141,
			0,
			0,
			.88397
		],
		67: [
			0,
			.69141,
			0,
			0,
			.61254
		],
		68: [
			0,
			.69141,
			0,
			0,
			.83158
		],
		69: [
			0,
			.69141,
			0,
			0,
			.66278
		],
		70: [
			.12604,
			.69141,
			0,
			0,
			.61119
		],
		71: [
			0,
			.69141,
			0,
			0,
			.78539
		],
		72: [
			.06302,
			.69141,
			0,
			0,
			.7203
		],
		73: [
			0,
			.69141,
			0,
			0,
			.55448
		],
		74: [
			.12604,
			.69141,
			0,
			0,
			.55231
		],
		75: [
			0,
			.69141,
			0,
			0,
			.66845
		],
		76: [
			0,
			.69141,
			0,
			0,
			.66602
		],
		77: [
			0,
			.69141,
			0,
			0,
			1.04953
		],
		78: [
			0,
			.69141,
			0,
			0,
			.83212
		],
		79: [
			0,
			.69141,
			0,
			0,
			.82699
		],
		80: [
			.18906,
			.69141,
			0,
			0,
			.82753
		],
		81: [
			.03781,
			.69141,
			0,
			0,
			.82699
		],
		82: [
			0,
			.69141,
			0,
			0,
			.82807
		],
		83: [
			0,
			.69141,
			0,
			0,
			.82861
		],
		84: [
			0,
			.69141,
			0,
			0,
			.66899
		],
		85: [
			0,
			.69141,
			0,
			0,
			.64576
		],
		86: [
			0,
			.69141,
			0,
			0,
			.83131
		],
		87: [
			0,
			.69141,
			0,
			0,
			1.04602
		],
		88: [
			0,
			.69141,
			0,
			0,
			.71922
		],
		89: [
			.18906,
			.69141,
			0,
			0,
			.83293
		],
		90: [
			.12604,
			.69141,
			0,
			0,
			.60201
		],
		91: [
			.24982,
			.74947,
			0,
			0,
			.27764
		],
		93: [
			.24982,
			.74947,
			0,
			0,
			.27764
		],
		94: [
			0,
			.69141,
			0,
			0,
			.49965
		],
		97: [
			0,
			.47534,
			0,
			0,
			.50046
		],
		98: [
			0,
			.69141,
			0,
			0,
			.51315
		],
		99: [
			0,
			.47534,
			0,
			0,
			.38946
		],
		100: [
			0,
			.62119,
			0,
			0,
			.49857
		],
		101: [
			0,
			.47534,
			0,
			0,
			.40053
		],
		102: [
			.18906,
			.69141,
			0,
			0,
			.32626
		],
		103: [
			.18906,
			.47534,
			0,
			0,
			.5037
		],
		104: [
			.18906,
			.69141,
			0,
			0,
			.52126
		],
		105: [
			0,
			.69141,
			0,
			0,
			.27899
		],
		106: [
			0,
			.69141,
			0,
			0,
			.28088
		],
		107: [
			0,
			.69141,
			0,
			0,
			.38946
		],
		108: [
			0,
			.69141,
			0,
			0,
			.27953
		],
		109: [
			0,
			.47534,
			0,
			0,
			.76676
		],
		110: [
			0,
			.47534,
			0,
			0,
			.52666
		],
		111: [
			0,
			.47534,
			0,
			0,
			.48885
		],
		112: [
			.18906,
			.52396,
			0,
			0,
			.50046
		],
		113: [
			.18906,
			.47534,
			0,
			0,
			.48912
		],
		114: [
			0,
			.47534,
			0,
			0,
			.38919
		],
		115: [
			0,
			.47534,
			0,
			0,
			.44266
		],
		116: [
			0,
			.62119,
			0,
			0,
			.33301
		],
		117: [
			0,
			.47534,
			0,
			0,
			.5172
		],
		118: [
			0,
			.52396,
			0,
			0,
			.5118
		],
		119: [
			0,
			.52396,
			0,
			0,
			.77351
		],
		120: [
			.18906,
			.47534,
			0,
			0,
			.38865
		],
		121: [
			.18906,
			.47534,
			0,
			0,
			.49884
		],
		122: [
			.18906,
			.47534,
			0,
			0,
			.39054
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		8216: [
			0,
			.69141,
			0,
			0,
			.21471
		],
		8217: [
			0,
			.69141,
			0,
			0,
			.21471
		],
		58112: [
			0,
			.62119,
			0,
			0,
			.49749
		],
		58113: [
			0,
			.62119,
			0,
			0,
			.4983
		],
		58114: [
			.18906,
			.69141,
			0,
			0,
			.33328
		],
		58115: [
			.18906,
			.69141,
			0,
			0,
			.32923
		],
		58116: [
			.18906,
			.47534,
			0,
			0,
			.50343
		],
		58117: [
			0,
			.69141,
			0,
			0,
			.33301
		],
		58118: [
			0,
			.62119,
			0,
			0,
			.33409
		],
		58119: [
			0,
			.47534,
			0,
			0,
			.50073
		]
	},
	"Main-Bold": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		33: [
			0,
			.69444,
			0,
			0,
			.35
		],
		34: [
			0,
			.69444,
			0,
			0,
			.60278
		],
		35: [
			.19444,
			.69444,
			0,
			0,
			.95833
		],
		36: [
			.05556,
			.75,
			0,
			0,
			.575
		],
		37: [
			.05556,
			.75,
			0,
			0,
			.95833
		],
		38: [
			0,
			.69444,
			0,
			0,
			.89444
		],
		39: [
			0,
			.69444,
			0,
			0,
			.31944
		],
		40: [
			.25,
			.75,
			0,
			0,
			.44722
		],
		41: [
			.25,
			.75,
			0,
			0,
			.44722
		],
		42: [
			0,
			.75,
			0,
			0,
			.575
		],
		43: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		44: [
			.19444,
			.15556,
			0,
			0,
			.31944
		],
		45: [
			0,
			.44444,
			0,
			0,
			.38333
		],
		46: [
			0,
			.15556,
			0,
			0,
			.31944
		],
		47: [
			.25,
			.75,
			0,
			0,
			.575
		],
		48: [
			0,
			.64444,
			0,
			0,
			.575
		],
		49: [
			0,
			.64444,
			0,
			0,
			.575
		],
		50: [
			0,
			.64444,
			0,
			0,
			.575
		],
		51: [
			0,
			.64444,
			0,
			0,
			.575
		],
		52: [
			0,
			.64444,
			0,
			0,
			.575
		],
		53: [
			0,
			.64444,
			0,
			0,
			.575
		],
		54: [
			0,
			.64444,
			0,
			0,
			.575
		],
		55: [
			0,
			.64444,
			0,
			0,
			.575
		],
		56: [
			0,
			.64444,
			0,
			0,
			.575
		],
		57: [
			0,
			.64444,
			0,
			0,
			.575
		],
		58: [
			0,
			.44444,
			0,
			0,
			.31944
		],
		59: [
			.19444,
			.44444,
			0,
			0,
			.31944
		],
		60: [
			.08556,
			.58556,
			0,
			0,
			.89444
		],
		61: [
			-.10889,
			.39111,
			0,
			0,
			.89444
		],
		62: [
			.08556,
			.58556,
			0,
			0,
			.89444
		],
		63: [
			0,
			.69444,
			0,
			0,
			.54305
		],
		64: [
			0,
			.69444,
			0,
			0,
			.89444
		],
		65: [
			0,
			.68611,
			0,
			0,
			.86944
		],
		66: [
			0,
			.68611,
			0,
			0,
			.81805
		],
		67: [
			0,
			.68611,
			0,
			0,
			.83055
		],
		68: [
			0,
			.68611,
			0,
			0,
			.88194
		],
		69: [
			0,
			.68611,
			0,
			0,
			.75555
		],
		70: [
			0,
			.68611,
			0,
			0,
			.72361
		],
		71: [
			0,
			.68611,
			0,
			0,
			.90416
		],
		72: [
			0,
			.68611,
			0,
			0,
			.9
		],
		73: [
			0,
			.68611,
			0,
			0,
			.43611
		],
		74: [
			0,
			.68611,
			0,
			0,
			.59444
		],
		75: [
			0,
			.68611,
			0,
			0,
			.90138
		],
		76: [
			0,
			.68611,
			0,
			0,
			.69166
		],
		77: [
			0,
			.68611,
			0,
			0,
			1.09166
		],
		78: [
			0,
			.68611,
			0,
			0,
			.9
		],
		79: [
			0,
			.68611,
			0,
			0,
			.86388
		],
		80: [
			0,
			.68611,
			0,
			0,
			.78611
		],
		81: [
			.19444,
			.68611,
			0,
			0,
			.86388
		],
		82: [
			0,
			.68611,
			0,
			0,
			.8625
		],
		83: [
			0,
			.68611,
			0,
			0,
			.63889
		],
		84: [
			0,
			.68611,
			0,
			0,
			.8
		],
		85: [
			0,
			.68611,
			0,
			0,
			.88472
		],
		86: [
			0,
			.68611,
			.01597,
			0,
			.86944
		],
		87: [
			0,
			.68611,
			.01597,
			0,
			1.18888
		],
		88: [
			0,
			.68611,
			0,
			0,
			.86944
		],
		89: [
			0,
			.68611,
			.02875,
			0,
			.86944
		],
		90: [
			0,
			.68611,
			0,
			0,
			.70277
		],
		91: [
			.25,
			.75,
			0,
			0,
			.31944
		],
		92: [
			.25,
			.75,
			0,
			0,
			.575
		],
		93: [
			.25,
			.75,
			0,
			0,
			.31944
		],
		94: [
			0,
			.69444,
			0,
			0,
			.575
		],
		95: [
			.31,
			.13444,
			.03194,
			0,
			.575
		],
		97: [
			0,
			.44444,
			0,
			0,
			.55902
		],
		98: [
			0,
			.69444,
			0,
			0,
			.63889
		],
		99: [
			0,
			.44444,
			0,
			0,
			.51111
		],
		100: [
			0,
			.69444,
			0,
			0,
			.63889
		],
		101: [
			0,
			.44444,
			0,
			0,
			.52708
		],
		102: [
			0,
			.69444,
			.10903,
			0,
			.35139
		],
		103: [
			.19444,
			.44444,
			.01597,
			0,
			.575
		],
		104: [
			0,
			.69444,
			0,
			0,
			.63889
		],
		105: [
			0,
			.69444,
			0,
			0,
			.31944
		],
		106: [
			.19444,
			.69444,
			0,
			0,
			.35139
		],
		107: [
			0,
			.69444,
			0,
			0,
			.60694
		],
		108: [
			0,
			.69444,
			0,
			0,
			.31944
		],
		109: [
			0,
			.44444,
			0,
			0,
			.95833
		],
		110: [
			0,
			.44444,
			0,
			0,
			.63889
		],
		111: [
			0,
			.44444,
			0,
			0,
			.575
		],
		112: [
			.19444,
			.44444,
			0,
			0,
			.63889
		],
		113: [
			.19444,
			.44444,
			0,
			0,
			.60694
		],
		114: [
			0,
			.44444,
			0,
			0,
			.47361
		],
		115: [
			0,
			.44444,
			0,
			0,
			.45361
		],
		116: [
			0,
			.63492,
			0,
			0,
			.44722
		],
		117: [
			0,
			.44444,
			0,
			0,
			.63889
		],
		118: [
			0,
			.44444,
			.01597,
			0,
			.60694
		],
		119: [
			0,
			.44444,
			.01597,
			0,
			.83055
		],
		120: [
			0,
			.44444,
			0,
			0,
			.60694
		],
		121: [
			.19444,
			.44444,
			.01597,
			0,
			.60694
		],
		122: [
			0,
			.44444,
			0,
			0,
			.51111
		],
		123: [
			.25,
			.75,
			0,
			0,
			.575
		],
		124: [
			.25,
			.75,
			0,
			0,
			.31944
		],
		125: [
			.25,
			.75,
			0,
			0,
			.575
		],
		126: [
			.35,
			.34444,
			0,
			0,
			.575
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		163: [
			0,
			.69444,
			0,
			0,
			.86853
		],
		168: [
			0,
			.69444,
			0,
			0,
			.575
		],
		172: [
			0,
			.44444,
			0,
			0,
			.76666
		],
		176: [
			0,
			.69444,
			0,
			0,
			.86944
		],
		177: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		184: [
			.17014,
			0,
			0,
			0,
			.51111
		],
		198: [
			0,
			.68611,
			0,
			0,
			1.04166
		],
		215: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		216: [
			.04861,
			.73472,
			0,
			0,
			.89444
		],
		223: [
			0,
			.69444,
			0,
			0,
			.59722
		],
		230: [
			0,
			.44444,
			0,
			0,
			.83055
		],
		247: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		248: [
			.09722,
			.54167,
			0,
			0,
			.575
		],
		305: [
			0,
			.44444,
			0,
			0,
			.31944
		],
		338: [
			0,
			.68611,
			0,
			0,
			1.16944
		],
		339: [
			0,
			.44444,
			0,
			0,
			.89444
		],
		567: [
			.19444,
			.44444,
			0,
			0,
			.35139
		],
		710: [
			0,
			.69444,
			0,
			0,
			.575
		],
		711: [
			0,
			.63194,
			0,
			0,
			.575
		],
		713: [
			0,
			.59611,
			0,
			0,
			.575
		],
		714: [
			0,
			.69444,
			0,
			0,
			.575
		],
		715: [
			0,
			.69444,
			0,
			0,
			.575
		],
		728: [
			0,
			.69444,
			0,
			0,
			.575
		],
		729: [
			0,
			.69444,
			0,
			0,
			.31944
		],
		730: [
			0,
			.69444,
			0,
			0,
			.86944
		],
		732: [
			0,
			.69444,
			0,
			0,
			.575
		],
		733: [
			0,
			.69444,
			0,
			0,
			.575
		],
		915: [
			0,
			.68611,
			0,
			0,
			.69166
		],
		916: [
			0,
			.68611,
			0,
			0,
			.95833
		],
		920: [
			0,
			.68611,
			0,
			0,
			.89444
		],
		923: [
			0,
			.68611,
			0,
			0,
			.80555
		],
		926: [
			0,
			.68611,
			0,
			0,
			.76666
		],
		928: [
			0,
			.68611,
			0,
			0,
			.9
		],
		931: [
			0,
			.68611,
			0,
			0,
			.83055
		],
		933: [
			0,
			.68611,
			0,
			0,
			.89444
		],
		934: [
			0,
			.68611,
			0,
			0,
			.83055
		],
		936: [
			0,
			.68611,
			0,
			0,
			.89444
		],
		937: [
			0,
			.68611,
			0,
			0,
			.83055
		],
		8211: [
			0,
			.44444,
			.03194,
			0,
			.575
		],
		8212: [
			0,
			.44444,
			.03194,
			0,
			1.14999
		],
		8216: [
			0,
			.69444,
			0,
			0,
			.31944
		],
		8217: [
			0,
			.69444,
			0,
			0,
			.31944
		],
		8220: [
			0,
			.69444,
			0,
			0,
			.60278
		],
		8221: [
			0,
			.69444,
			0,
			0,
			.60278
		],
		8224: [
			.19444,
			.69444,
			0,
			0,
			.51111
		],
		8225: [
			.19444,
			.69444,
			0,
			0,
			.51111
		],
		8242: [
			0,
			.55556,
			0,
			0,
			.34444
		],
		8407: [
			0,
			.72444,
			.15486,
			0,
			.575
		],
		8463: [
			0,
			.69444,
			0,
			0,
			.66759
		],
		8465: [
			0,
			.69444,
			0,
			0,
			.83055
		],
		8467: [
			0,
			.69444,
			0,
			0,
			.47361
		],
		8472: [
			.19444,
			.44444,
			0,
			0,
			.74027
		],
		8476: [
			0,
			.69444,
			0,
			0,
			.83055
		],
		8501: [
			0,
			.69444,
			0,
			0,
			.70277
		],
		8592: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8593: [
			.19444,
			.69444,
			0,
			0,
			.575
		],
		8594: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8595: [
			.19444,
			.69444,
			0,
			0,
			.575
		],
		8596: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8597: [
			.25,
			.75,
			0,
			0,
			.575
		],
		8598: [
			.19444,
			.69444,
			0,
			0,
			1.14999
		],
		8599: [
			.19444,
			.69444,
			0,
			0,
			1.14999
		],
		8600: [
			.19444,
			.69444,
			0,
			0,
			1.14999
		],
		8601: [
			.19444,
			.69444,
			0,
			0,
			1.14999
		],
		8636: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8637: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8640: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8641: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8656: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8657: [
			.19444,
			.69444,
			0,
			0,
			.70277
		],
		8658: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8659: [
			.19444,
			.69444,
			0,
			0,
			.70277
		],
		8660: [
			-.10889,
			.39111,
			0,
			0,
			1.14999
		],
		8661: [
			.25,
			.75,
			0,
			0,
			.70277
		],
		8704: [
			0,
			.69444,
			0,
			0,
			.63889
		],
		8706: [
			0,
			.69444,
			.06389,
			0,
			.62847
		],
		8707: [
			0,
			.69444,
			0,
			0,
			.63889
		],
		8709: [
			.05556,
			.75,
			0,
			0,
			.575
		],
		8711: [
			0,
			.68611,
			0,
			0,
			.95833
		],
		8712: [
			.08556,
			.58556,
			0,
			0,
			.76666
		],
		8715: [
			.08556,
			.58556,
			0,
			0,
			.76666
		],
		8722: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		8723: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		8725: [
			.25,
			.75,
			0,
			0,
			.575
		],
		8726: [
			.25,
			.75,
			0,
			0,
			.575
		],
		8727: [
			-.02778,
			.47222,
			0,
			0,
			.575
		],
		8728: [
			-.02639,
			.47361,
			0,
			0,
			.575
		],
		8729: [
			-.02639,
			.47361,
			0,
			0,
			.575
		],
		8730: [
			.18,
			.82,
			0,
			0,
			.95833
		],
		8733: [
			0,
			.44444,
			0,
			0,
			.89444
		],
		8734: [
			0,
			.44444,
			0,
			0,
			1.14999
		],
		8736: [
			0,
			.69224,
			0,
			0,
			.72222
		],
		8739: [
			.25,
			.75,
			0,
			0,
			.31944
		],
		8741: [
			.25,
			.75,
			0,
			0,
			.575
		],
		8743: [
			0,
			.55556,
			0,
			0,
			.76666
		],
		8744: [
			0,
			.55556,
			0,
			0,
			.76666
		],
		8745: [
			0,
			.55556,
			0,
			0,
			.76666
		],
		8746: [
			0,
			.55556,
			0,
			0,
			.76666
		],
		8747: [
			.19444,
			.69444,
			.12778,
			0,
			.56875
		],
		8764: [
			-.10889,
			.39111,
			0,
			0,
			.89444
		],
		8768: [
			.19444,
			.69444,
			0,
			0,
			.31944
		],
		8771: [
			.00222,
			.50222,
			0,
			0,
			.89444
		],
		8773: [
			.027,
			.638,
			0,
			0,
			.894
		],
		8776: [
			.02444,
			.52444,
			0,
			0,
			.89444
		],
		8781: [
			.00222,
			.50222,
			0,
			0,
			.89444
		],
		8801: [
			.00222,
			.50222,
			0,
			0,
			.89444
		],
		8804: [
			.19667,
			.69667,
			0,
			0,
			.89444
		],
		8805: [
			.19667,
			.69667,
			0,
			0,
			.89444
		],
		8810: [
			.08556,
			.58556,
			0,
			0,
			1.14999
		],
		8811: [
			.08556,
			.58556,
			0,
			0,
			1.14999
		],
		8826: [
			.08556,
			.58556,
			0,
			0,
			.89444
		],
		8827: [
			.08556,
			.58556,
			0,
			0,
			.89444
		],
		8834: [
			.08556,
			.58556,
			0,
			0,
			.89444
		],
		8835: [
			.08556,
			.58556,
			0,
			0,
			.89444
		],
		8838: [
			.19667,
			.69667,
			0,
			0,
			.89444
		],
		8839: [
			.19667,
			.69667,
			0,
			0,
			.89444
		],
		8846: [
			0,
			.55556,
			0,
			0,
			.76666
		],
		8849: [
			.19667,
			.69667,
			0,
			0,
			.89444
		],
		8850: [
			.19667,
			.69667,
			0,
			0,
			.89444
		],
		8851: [
			0,
			.55556,
			0,
			0,
			.76666
		],
		8852: [
			0,
			.55556,
			0,
			0,
			.76666
		],
		8853: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		8854: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		8855: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		8856: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		8857: [
			.13333,
			.63333,
			0,
			0,
			.89444
		],
		8866: [
			0,
			.69444,
			0,
			0,
			.70277
		],
		8867: [
			0,
			.69444,
			0,
			0,
			.70277
		],
		8868: [
			0,
			.69444,
			0,
			0,
			.89444
		],
		8869: [
			0,
			.69444,
			0,
			0,
			.89444
		],
		8900: [
			-.02639,
			.47361,
			0,
			0,
			.575
		],
		8901: [
			-.02639,
			.47361,
			0,
			0,
			.31944
		],
		8902: [
			-.02778,
			.47222,
			0,
			0,
			.575
		],
		8968: [
			.25,
			.75,
			0,
			0,
			.51111
		],
		8969: [
			.25,
			.75,
			0,
			0,
			.51111
		],
		8970: [
			.25,
			.75,
			0,
			0,
			.51111
		],
		8971: [
			.25,
			.75,
			0,
			0,
			.51111
		],
		8994: [
			-.13889,
			.36111,
			0,
			0,
			1.14999
		],
		8995: [
			-.13889,
			.36111,
			0,
			0,
			1.14999
		],
		9651: [
			.19444,
			.69444,
			0,
			0,
			1.02222
		],
		9657: [
			-.02778,
			.47222,
			0,
			0,
			.575
		],
		9661: [
			.19444,
			.69444,
			0,
			0,
			1.02222
		],
		9667: [
			-.02778,
			.47222,
			0,
			0,
			.575
		],
		9711: [
			.19444,
			.69444,
			0,
			0,
			1.14999
		],
		9824: [
			.12963,
			.69444,
			0,
			0,
			.89444
		],
		9825: [
			.12963,
			.69444,
			0,
			0,
			.89444
		],
		9826: [
			.12963,
			.69444,
			0,
			0,
			.89444
		],
		9827: [
			.12963,
			.69444,
			0,
			0,
			.89444
		],
		9837: [
			0,
			.75,
			0,
			0,
			.44722
		],
		9838: [
			.19444,
			.69444,
			0,
			0,
			.44722
		],
		9839: [
			.19444,
			.69444,
			0,
			0,
			.44722
		],
		10216: [
			.25,
			.75,
			0,
			0,
			.44722
		],
		10217: [
			.25,
			.75,
			0,
			0,
			.44722
		],
		10815: [
			0,
			.68611,
			0,
			0,
			.9
		],
		10927: [
			.19667,
			.69667,
			0,
			0,
			.89444
		],
		10928: [
			.19667,
			.69667,
			0,
			0,
			.89444
		],
		57376: [
			.19444,
			.69444,
			0,
			0,
			0
		]
	},
	"Main-BoldItalic": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		33: [
			0,
			.69444,
			.11417,
			0,
			.38611
		],
		34: [
			0,
			.69444,
			.07939,
			0,
			.62055
		],
		35: [
			.19444,
			.69444,
			.06833,
			0,
			.94444
		],
		37: [
			.05556,
			.75,
			.12861,
			0,
			.94444
		],
		38: [
			0,
			.69444,
			.08528,
			0,
			.88555
		],
		39: [
			0,
			.69444,
			.12945,
			0,
			.35555
		],
		40: [
			.25,
			.75,
			.15806,
			0,
			.47333
		],
		41: [
			.25,
			.75,
			.03306,
			0,
			.47333
		],
		42: [
			0,
			.75,
			.14333,
			0,
			.59111
		],
		43: [
			.10333,
			.60333,
			.03306,
			0,
			.88555
		],
		44: [
			.19444,
			.14722,
			0,
			0,
			.35555
		],
		45: [
			0,
			.44444,
			.02611,
			0,
			.41444
		],
		46: [
			0,
			.14722,
			0,
			0,
			.35555
		],
		47: [
			.25,
			.75,
			.15806,
			0,
			.59111
		],
		48: [
			0,
			.64444,
			.13167,
			0,
			.59111
		],
		49: [
			0,
			.64444,
			.13167,
			0,
			.59111
		],
		50: [
			0,
			.64444,
			.13167,
			0,
			.59111
		],
		51: [
			0,
			.64444,
			.13167,
			0,
			.59111
		],
		52: [
			.19444,
			.64444,
			.13167,
			0,
			.59111
		],
		53: [
			0,
			.64444,
			.13167,
			0,
			.59111
		],
		54: [
			0,
			.64444,
			.13167,
			0,
			.59111
		],
		55: [
			.19444,
			.64444,
			.13167,
			0,
			.59111
		],
		56: [
			0,
			.64444,
			.13167,
			0,
			.59111
		],
		57: [
			0,
			.64444,
			.13167,
			0,
			.59111
		],
		58: [
			0,
			.44444,
			.06695,
			0,
			.35555
		],
		59: [
			.19444,
			.44444,
			.06695,
			0,
			.35555
		],
		61: [
			-.10889,
			.39111,
			.06833,
			0,
			.88555
		],
		63: [
			0,
			.69444,
			.11472,
			0,
			.59111
		],
		64: [
			0,
			.69444,
			.09208,
			0,
			.88555
		],
		65: [
			0,
			.68611,
			0,
			0,
			.86555
		],
		66: [
			0,
			.68611,
			.0992,
			0,
			.81666
		],
		67: [
			0,
			.68611,
			.14208,
			0,
			.82666
		],
		68: [
			0,
			.68611,
			.09062,
			0,
			.87555
		],
		69: [
			0,
			.68611,
			.11431,
			0,
			.75666
		],
		70: [
			0,
			.68611,
			.12903,
			0,
			.72722
		],
		71: [
			0,
			.68611,
			.07347,
			0,
			.89527
		],
		72: [
			0,
			.68611,
			.17208,
			0,
			.8961
		],
		73: [
			0,
			.68611,
			.15681,
			0,
			.47166
		],
		74: [
			0,
			.68611,
			.145,
			0,
			.61055
		],
		75: [
			0,
			.68611,
			.14208,
			0,
			.89499
		],
		76: [
			0,
			.68611,
			0,
			0,
			.69777
		],
		77: [
			0,
			.68611,
			.17208,
			0,
			1.07277
		],
		78: [
			0,
			.68611,
			.17208,
			0,
			.8961
		],
		79: [
			0,
			.68611,
			.09062,
			0,
			.85499
		],
		80: [
			0,
			.68611,
			.0992,
			0,
			.78721
		],
		81: [
			.19444,
			.68611,
			.09062,
			0,
			.85499
		],
		82: [
			0,
			.68611,
			.02559,
			0,
			.85944
		],
		83: [
			0,
			.68611,
			.11264,
			0,
			.64999
		],
		84: [
			0,
			.68611,
			.12903,
			0,
			.7961
		],
		85: [
			0,
			.68611,
			.17208,
			0,
			.88083
		],
		86: [
			0,
			.68611,
			.18625,
			0,
			.86555
		],
		87: [
			0,
			.68611,
			.18625,
			0,
			1.15999
		],
		88: [
			0,
			.68611,
			.15681,
			0,
			.86555
		],
		89: [
			0,
			.68611,
			.19803,
			0,
			.86555
		],
		90: [
			0,
			.68611,
			.14208,
			0,
			.70888
		],
		91: [
			.25,
			.75,
			.1875,
			0,
			.35611
		],
		93: [
			.25,
			.75,
			.09972,
			0,
			.35611
		],
		94: [
			0,
			.69444,
			.06709,
			0,
			.59111
		],
		95: [
			.31,
			.13444,
			.09811,
			0,
			.59111
		],
		97: [
			0,
			.44444,
			.09426,
			0,
			.59111
		],
		98: [
			0,
			.69444,
			.07861,
			0,
			.53222
		],
		99: [
			0,
			.44444,
			.05222,
			0,
			.53222
		],
		100: [
			0,
			.69444,
			.10861,
			0,
			.59111
		],
		101: [
			0,
			.44444,
			.085,
			0,
			.53222
		],
		102: [
			.19444,
			.69444,
			.21778,
			0,
			.4
		],
		103: [
			.19444,
			.44444,
			.105,
			0,
			.53222
		],
		104: [
			0,
			.69444,
			.09426,
			0,
			.59111
		],
		105: [
			0,
			.69326,
			.11387,
			0,
			.35555
		],
		106: [
			.19444,
			.69326,
			.1672,
			0,
			.35555
		],
		107: [
			0,
			.69444,
			.11111,
			0,
			.53222
		],
		108: [
			0,
			.69444,
			.10861,
			0,
			.29666
		],
		109: [
			0,
			.44444,
			.09426,
			0,
			.94444
		],
		110: [
			0,
			.44444,
			.09426,
			0,
			.64999
		],
		111: [
			0,
			.44444,
			.07861,
			0,
			.59111
		],
		112: [
			.19444,
			.44444,
			.07861,
			0,
			.59111
		],
		113: [
			.19444,
			.44444,
			.105,
			0,
			.53222
		],
		114: [
			0,
			.44444,
			.11111,
			0,
			.50167
		],
		115: [
			0,
			.44444,
			.08167,
			0,
			.48694
		],
		116: [
			0,
			.63492,
			.09639,
			0,
			.385
		],
		117: [
			0,
			.44444,
			.09426,
			0,
			.62055
		],
		118: [
			0,
			.44444,
			.11111,
			0,
			.53222
		],
		119: [
			0,
			.44444,
			.11111,
			0,
			.76777
		],
		120: [
			0,
			.44444,
			.12583,
			0,
			.56055
		],
		121: [
			.19444,
			.44444,
			.105,
			0,
			.56166
		],
		122: [
			0,
			.44444,
			.13889,
			0,
			.49055
		],
		126: [
			.35,
			.34444,
			.11472,
			0,
			.59111
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		168: [
			0,
			.69444,
			.11473,
			0,
			.59111
		],
		176: [
			0,
			.69444,
			0,
			0,
			.94888
		],
		184: [
			.17014,
			0,
			0,
			0,
			.53222
		],
		198: [
			0,
			.68611,
			.11431,
			0,
			1.02277
		],
		216: [
			.04861,
			.73472,
			.09062,
			0,
			.88555
		],
		223: [
			.19444,
			.69444,
			.09736,
			0,
			.665
		],
		230: [
			0,
			.44444,
			.085,
			0,
			.82666
		],
		248: [
			.09722,
			.54167,
			.09458,
			0,
			.59111
		],
		305: [
			0,
			.44444,
			.09426,
			0,
			.35555
		],
		338: [
			0,
			.68611,
			.11431,
			0,
			1.14054
		],
		339: [
			0,
			.44444,
			.085,
			0,
			.82666
		],
		567: [
			.19444,
			.44444,
			.04611,
			0,
			.385
		],
		710: [
			0,
			.69444,
			.06709,
			0,
			.59111
		],
		711: [
			0,
			.63194,
			.08271,
			0,
			.59111
		],
		713: [
			0,
			.59444,
			.10444,
			0,
			.59111
		],
		714: [
			0,
			.69444,
			.08528,
			0,
			.59111
		],
		715: [
			0,
			.69444,
			0,
			0,
			.59111
		],
		728: [
			0,
			.69444,
			.10333,
			0,
			.59111
		],
		729: [
			0,
			.69444,
			.12945,
			0,
			.35555
		],
		730: [
			0,
			.69444,
			0,
			0,
			.94888
		],
		732: [
			0,
			.69444,
			.11472,
			0,
			.59111
		],
		733: [
			0,
			.69444,
			.11472,
			0,
			.59111
		],
		915: [
			0,
			.68611,
			.12903,
			0,
			.69777
		],
		916: [
			0,
			.68611,
			0,
			0,
			.94444
		],
		920: [
			0,
			.68611,
			.09062,
			0,
			.88555
		],
		923: [
			0,
			.68611,
			0,
			0,
			.80666
		],
		926: [
			0,
			.68611,
			.15092,
			0,
			.76777
		],
		928: [
			0,
			.68611,
			.17208,
			0,
			.8961
		],
		931: [
			0,
			.68611,
			.11431,
			0,
			.82666
		],
		933: [
			0,
			.68611,
			.10778,
			0,
			.88555
		],
		934: [
			0,
			.68611,
			.05632,
			0,
			.82666
		],
		936: [
			0,
			.68611,
			.10778,
			0,
			.88555
		],
		937: [
			0,
			.68611,
			.0992,
			0,
			.82666
		],
		8211: [
			0,
			.44444,
			.09811,
			0,
			.59111
		],
		8212: [
			0,
			.44444,
			.09811,
			0,
			1.18221
		],
		8216: [
			0,
			.69444,
			.12945,
			0,
			.35555
		],
		8217: [
			0,
			.69444,
			.12945,
			0,
			.35555
		],
		8220: [
			0,
			.69444,
			.16772,
			0,
			.62055
		],
		8221: [
			0,
			.69444,
			.07939,
			0,
			.62055
		]
	},
	"Main-Italic": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		33: [
			0,
			.69444,
			.12417,
			0,
			.30667
		],
		34: [
			0,
			.69444,
			.06961,
			0,
			.51444
		],
		35: [
			.19444,
			.69444,
			.06616,
			0,
			.81777
		],
		37: [
			.05556,
			.75,
			.13639,
			0,
			.81777
		],
		38: [
			0,
			.69444,
			.09694,
			0,
			.76666
		],
		39: [
			0,
			.69444,
			.12417,
			0,
			.30667
		],
		40: [
			.25,
			.75,
			.16194,
			0,
			.40889
		],
		41: [
			.25,
			.75,
			.03694,
			0,
			.40889
		],
		42: [
			0,
			.75,
			.14917,
			0,
			.51111
		],
		43: [
			.05667,
			.56167,
			.03694,
			0,
			.76666
		],
		44: [
			.19444,
			.10556,
			0,
			0,
			.30667
		],
		45: [
			0,
			.43056,
			.02826,
			0,
			.35778
		],
		46: [
			0,
			.10556,
			0,
			0,
			.30667
		],
		47: [
			.25,
			.75,
			.16194,
			0,
			.51111
		],
		48: [
			0,
			.64444,
			.13556,
			0,
			.51111
		],
		49: [
			0,
			.64444,
			.13556,
			0,
			.51111
		],
		50: [
			0,
			.64444,
			.13556,
			0,
			.51111
		],
		51: [
			0,
			.64444,
			.13556,
			0,
			.51111
		],
		52: [
			.19444,
			.64444,
			.13556,
			0,
			.51111
		],
		53: [
			0,
			.64444,
			.13556,
			0,
			.51111
		],
		54: [
			0,
			.64444,
			.13556,
			0,
			.51111
		],
		55: [
			.19444,
			.64444,
			.13556,
			0,
			.51111
		],
		56: [
			0,
			.64444,
			.13556,
			0,
			.51111
		],
		57: [
			0,
			.64444,
			.13556,
			0,
			.51111
		],
		58: [
			0,
			.43056,
			.0582,
			0,
			.30667
		],
		59: [
			.19444,
			.43056,
			.0582,
			0,
			.30667
		],
		61: [
			-.13313,
			.36687,
			.06616,
			0,
			.76666
		],
		63: [
			0,
			.69444,
			.1225,
			0,
			.51111
		],
		64: [
			0,
			.69444,
			.09597,
			0,
			.76666
		],
		65: [
			0,
			.68333,
			0,
			0,
			.74333
		],
		66: [
			0,
			.68333,
			.10257,
			0,
			.70389
		],
		67: [
			0,
			.68333,
			.14528,
			0,
			.71555
		],
		68: [
			0,
			.68333,
			.09403,
			0,
			.755
		],
		69: [
			0,
			.68333,
			.12028,
			0,
			.67833
		],
		70: [
			0,
			.68333,
			.13305,
			0,
			.65277
		],
		71: [
			0,
			.68333,
			.08722,
			0,
			.77361
		],
		72: [
			0,
			.68333,
			.16389,
			0,
			.74333
		],
		73: [
			0,
			.68333,
			.15806,
			0,
			.38555
		],
		74: [
			0,
			.68333,
			.14028,
			0,
			.525
		],
		75: [
			0,
			.68333,
			.14528,
			0,
			.76888
		],
		76: [
			0,
			.68333,
			0,
			0,
			.62722
		],
		77: [
			0,
			.68333,
			.16389,
			0,
			.89666
		],
		78: [
			0,
			.68333,
			.16389,
			0,
			.74333
		],
		79: [
			0,
			.68333,
			.09403,
			0,
			.76666
		],
		80: [
			0,
			.68333,
			.10257,
			0,
			.67833
		],
		81: [
			.19444,
			.68333,
			.09403,
			0,
			.76666
		],
		82: [
			0,
			.68333,
			.03868,
			0,
			.72944
		],
		83: [
			0,
			.68333,
			.11972,
			0,
			.56222
		],
		84: [
			0,
			.68333,
			.13305,
			0,
			.71555
		],
		85: [
			0,
			.68333,
			.16389,
			0,
			.74333
		],
		86: [
			0,
			.68333,
			.18361,
			0,
			.74333
		],
		87: [
			0,
			.68333,
			.18361,
			0,
			.99888
		],
		88: [
			0,
			.68333,
			.15806,
			0,
			.74333
		],
		89: [
			0,
			.68333,
			.19383,
			0,
			.74333
		],
		90: [
			0,
			.68333,
			.14528,
			0,
			.61333
		],
		91: [
			.25,
			.75,
			.1875,
			0,
			.30667
		],
		93: [
			.25,
			.75,
			.10528,
			0,
			.30667
		],
		94: [
			0,
			.69444,
			.06646,
			0,
			.51111
		],
		95: [
			.31,
			.12056,
			.09208,
			0,
			.51111
		],
		97: [
			0,
			.43056,
			.07671,
			0,
			.51111
		],
		98: [
			0,
			.69444,
			.06312,
			0,
			.46
		],
		99: [
			0,
			.43056,
			.05653,
			0,
			.46
		],
		100: [
			0,
			.69444,
			.10333,
			0,
			.51111
		],
		101: [
			0,
			.43056,
			.07514,
			0,
			.46
		],
		102: [
			.19444,
			.69444,
			.21194,
			0,
			.30667
		],
		103: [
			.19444,
			.43056,
			.08847,
			0,
			.46
		],
		104: [
			0,
			.69444,
			.07671,
			0,
			.51111
		],
		105: [
			0,
			.65536,
			.1019,
			0,
			.30667
		],
		106: [
			.19444,
			.65536,
			.14467,
			0,
			.30667
		],
		107: [
			0,
			.69444,
			.10764,
			0,
			.46
		],
		108: [
			0,
			.69444,
			.10333,
			0,
			.25555
		],
		109: [
			0,
			.43056,
			.07671,
			0,
			.81777
		],
		110: [
			0,
			.43056,
			.07671,
			0,
			.56222
		],
		111: [
			0,
			.43056,
			.06312,
			0,
			.51111
		],
		112: [
			.19444,
			.43056,
			.06312,
			0,
			.51111
		],
		113: [
			.19444,
			.43056,
			.08847,
			0,
			.46
		],
		114: [
			0,
			.43056,
			.10764,
			0,
			.42166
		],
		115: [
			0,
			.43056,
			.08208,
			0,
			.40889
		],
		116: [
			0,
			.61508,
			.09486,
			0,
			.33222
		],
		117: [
			0,
			.43056,
			.07671,
			0,
			.53666
		],
		118: [
			0,
			.43056,
			.10764,
			0,
			.46
		],
		119: [
			0,
			.43056,
			.10764,
			0,
			.66444
		],
		120: [
			0,
			.43056,
			.12042,
			0,
			.46389
		],
		121: [
			.19444,
			.43056,
			.08847,
			0,
			.48555
		],
		122: [
			0,
			.43056,
			.12292,
			0,
			.40889
		],
		126: [
			.35,
			.31786,
			.11585,
			0,
			.51111
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		168: [
			0,
			.66786,
			.10474,
			0,
			.51111
		],
		176: [
			0,
			.69444,
			0,
			0,
			.83129
		],
		184: [
			.17014,
			0,
			0,
			0,
			.46
		],
		198: [
			0,
			.68333,
			.12028,
			0,
			.88277
		],
		216: [
			.04861,
			.73194,
			.09403,
			0,
			.76666
		],
		223: [
			.19444,
			.69444,
			.10514,
			0,
			.53666
		],
		230: [
			0,
			.43056,
			.07514,
			0,
			.71555
		],
		248: [
			.09722,
			.52778,
			.09194,
			0,
			.51111
		],
		338: [
			0,
			.68333,
			.12028,
			0,
			.98499
		],
		339: [
			0,
			.43056,
			.07514,
			0,
			.71555
		],
		710: [
			0,
			.69444,
			.06646,
			0,
			.51111
		],
		711: [
			0,
			.62847,
			.08295,
			0,
			.51111
		],
		713: [
			0,
			.56167,
			.10333,
			0,
			.51111
		],
		714: [
			0,
			.69444,
			.09694,
			0,
			.51111
		],
		715: [
			0,
			.69444,
			0,
			0,
			.51111
		],
		728: [
			0,
			.69444,
			.10806,
			0,
			.51111
		],
		729: [
			0,
			.66786,
			.11752,
			0,
			.30667
		],
		730: [
			0,
			.69444,
			0,
			0,
			.83129
		],
		732: [
			0,
			.66786,
			.11585,
			0,
			.51111
		],
		733: [
			0,
			.69444,
			.1225,
			0,
			.51111
		],
		915: [
			0,
			.68333,
			.13305,
			0,
			.62722
		],
		916: [
			0,
			.68333,
			0,
			0,
			.81777
		],
		920: [
			0,
			.68333,
			.09403,
			0,
			.76666
		],
		923: [
			0,
			.68333,
			0,
			0,
			.69222
		],
		926: [
			0,
			.68333,
			.15294,
			0,
			.66444
		],
		928: [
			0,
			.68333,
			.16389,
			0,
			.74333
		],
		931: [
			0,
			.68333,
			.12028,
			0,
			.71555
		],
		933: [
			0,
			.68333,
			.11111,
			0,
			.76666
		],
		934: [
			0,
			.68333,
			.05986,
			0,
			.71555
		],
		936: [
			0,
			.68333,
			.11111,
			0,
			.76666
		],
		937: [
			0,
			.68333,
			.10257,
			0,
			.71555
		],
		8211: [
			0,
			.43056,
			.09208,
			0,
			.51111
		],
		8212: [
			0,
			.43056,
			.09208,
			0,
			1.02222
		],
		8216: [
			0,
			.69444,
			.12417,
			0,
			.30667
		],
		8217: [
			0,
			.69444,
			.12417,
			0,
			.30667
		],
		8220: [
			0,
			.69444,
			.1685,
			0,
			.51444
		],
		8221: [
			0,
			.69444,
			.06961,
			0,
			.51444
		],
		8463: [
			0,
			.68889,
			0,
			0,
			.54028
		]
	},
	"Main-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		33: [
			0,
			.69444,
			0,
			0,
			.27778
		],
		34: [
			0,
			.69444,
			0,
			0,
			.5
		],
		35: [
			.19444,
			.69444,
			0,
			0,
			.83334
		],
		36: [
			.05556,
			.75,
			0,
			0,
			.5
		],
		37: [
			.05556,
			.75,
			0,
			0,
			.83334
		],
		38: [
			0,
			.69444,
			0,
			0,
			.77778
		],
		39: [
			0,
			.69444,
			0,
			0,
			.27778
		],
		40: [
			.25,
			.75,
			0,
			0,
			.38889
		],
		41: [
			.25,
			.75,
			0,
			0,
			.38889
		],
		42: [
			0,
			.75,
			0,
			0,
			.5
		],
		43: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		44: [
			.19444,
			.10556,
			0,
			0,
			.27778
		],
		45: [
			0,
			.43056,
			0,
			0,
			.33333
		],
		46: [
			0,
			.10556,
			0,
			0,
			.27778
		],
		47: [
			.25,
			.75,
			0,
			0,
			.5
		],
		48: [
			0,
			.64444,
			0,
			0,
			.5
		],
		49: [
			0,
			.64444,
			0,
			0,
			.5
		],
		50: [
			0,
			.64444,
			0,
			0,
			.5
		],
		51: [
			0,
			.64444,
			0,
			0,
			.5
		],
		52: [
			0,
			.64444,
			0,
			0,
			.5
		],
		53: [
			0,
			.64444,
			0,
			0,
			.5
		],
		54: [
			0,
			.64444,
			0,
			0,
			.5
		],
		55: [
			0,
			.64444,
			0,
			0,
			.5
		],
		56: [
			0,
			.64444,
			0,
			0,
			.5
		],
		57: [
			0,
			.64444,
			0,
			0,
			.5
		],
		58: [
			0,
			.43056,
			0,
			0,
			.27778
		],
		59: [
			.19444,
			.43056,
			0,
			0,
			.27778
		],
		60: [
			.0391,
			.5391,
			0,
			0,
			.77778
		],
		61: [
			-.13313,
			.36687,
			0,
			0,
			.77778
		],
		62: [
			.0391,
			.5391,
			0,
			0,
			.77778
		],
		63: [
			0,
			.69444,
			0,
			0,
			.47222
		],
		64: [
			0,
			.69444,
			0,
			0,
			.77778
		],
		65: [
			0,
			.68333,
			0,
			0,
			.75
		],
		66: [
			0,
			.68333,
			0,
			0,
			.70834
		],
		67: [
			0,
			.68333,
			0,
			0,
			.72222
		],
		68: [
			0,
			.68333,
			0,
			0,
			.76389
		],
		69: [
			0,
			.68333,
			0,
			0,
			.68056
		],
		70: [
			0,
			.68333,
			0,
			0,
			.65278
		],
		71: [
			0,
			.68333,
			0,
			0,
			.78472
		],
		72: [
			0,
			.68333,
			0,
			0,
			.75
		],
		73: [
			0,
			.68333,
			0,
			0,
			.36111
		],
		74: [
			0,
			.68333,
			0,
			0,
			.51389
		],
		75: [
			0,
			.68333,
			0,
			0,
			.77778
		],
		76: [
			0,
			.68333,
			0,
			0,
			.625
		],
		77: [
			0,
			.68333,
			0,
			0,
			.91667
		],
		78: [
			0,
			.68333,
			0,
			0,
			.75
		],
		79: [
			0,
			.68333,
			0,
			0,
			.77778
		],
		80: [
			0,
			.68333,
			0,
			0,
			.68056
		],
		81: [
			.19444,
			.68333,
			0,
			0,
			.77778
		],
		82: [
			0,
			.68333,
			0,
			0,
			.73611
		],
		83: [
			0,
			.68333,
			0,
			0,
			.55556
		],
		84: [
			0,
			.68333,
			0,
			0,
			.72222
		],
		85: [
			0,
			.68333,
			0,
			0,
			.75
		],
		86: [
			0,
			.68333,
			.01389,
			0,
			.75
		],
		87: [
			0,
			.68333,
			.01389,
			0,
			1.02778
		],
		88: [
			0,
			.68333,
			0,
			0,
			.75
		],
		89: [
			0,
			.68333,
			.025,
			0,
			.75
		],
		90: [
			0,
			.68333,
			0,
			0,
			.61111
		],
		91: [
			.25,
			.75,
			0,
			0,
			.27778
		],
		92: [
			.25,
			.75,
			0,
			0,
			.5
		],
		93: [
			.25,
			.75,
			0,
			0,
			.27778
		],
		94: [
			0,
			.69444,
			0,
			0,
			.5
		],
		95: [
			.31,
			.12056,
			.02778,
			0,
			.5
		],
		97: [
			0,
			.43056,
			0,
			0,
			.5
		],
		98: [
			0,
			.69444,
			0,
			0,
			.55556
		],
		99: [
			0,
			.43056,
			0,
			0,
			.44445
		],
		100: [
			0,
			.69444,
			0,
			0,
			.55556
		],
		101: [
			0,
			.43056,
			0,
			0,
			.44445
		],
		102: [
			0,
			.69444,
			.07778,
			0,
			.30556
		],
		103: [
			.19444,
			.43056,
			.01389,
			0,
			.5
		],
		104: [
			0,
			.69444,
			0,
			0,
			.55556
		],
		105: [
			0,
			.66786,
			0,
			0,
			.27778
		],
		106: [
			.19444,
			.66786,
			0,
			0,
			.30556
		],
		107: [
			0,
			.69444,
			0,
			0,
			.52778
		],
		108: [
			0,
			.69444,
			0,
			0,
			.27778
		],
		109: [
			0,
			.43056,
			0,
			0,
			.83334
		],
		110: [
			0,
			.43056,
			0,
			0,
			.55556
		],
		111: [
			0,
			.43056,
			0,
			0,
			.5
		],
		112: [
			.19444,
			.43056,
			0,
			0,
			.55556
		],
		113: [
			.19444,
			.43056,
			0,
			0,
			.52778
		],
		114: [
			0,
			.43056,
			0,
			0,
			.39167
		],
		115: [
			0,
			.43056,
			0,
			0,
			.39445
		],
		116: [
			0,
			.61508,
			0,
			0,
			.38889
		],
		117: [
			0,
			.43056,
			0,
			0,
			.55556
		],
		118: [
			0,
			.43056,
			.01389,
			0,
			.52778
		],
		119: [
			0,
			.43056,
			.01389,
			0,
			.72222
		],
		120: [
			0,
			.43056,
			0,
			0,
			.52778
		],
		121: [
			.19444,
			.43056,
			.01389,
			0,
			.52778
		],
		122: [
			0,
			.43056,
			0,
			0,
			.44445
		],
		123: [
			.25,
			.75,
			0,
			0,
			.5
		],
		124: [
			.25,
			.75,
			0,
			0,
			.27778
		],
		125: [
			.25,
			.75,
			0,
			0,
			.5
		],
		126: [
			.35,
			.31786,
			0,
			0,
			.5
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		163: [
			0,
			.69444,
			0,
			0,
			.76909
		],
		167: [
			.19444,
			.69444,
			0,
			0,
			.44445
		],
		168: [
			0,
			.66786,
			0,
			0,
			.5
		],
		172: [
			0,
			.43056,
			0,
			0,
			.66667
		],
		176: [
			0,
			.69444,
			0,
			0,
			.75
		],
		177: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		182: [
			.19444,
			.69444,
			0,
			0,
			.61111
		],
		184: [
			.17014,
			0,
			0,
			0,
			.44445
		],
		198: [
			0,
			.68333,
			0,
			0,
			.90278
		],
		215: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		216: [
			.04861,
			.73194,
			0,
			0,
			.77778
		],
		223: [
			0,
			.69444,
			0,
			0,
			.5
		],
		230: [
			0,
			.43056,
			0,
			0,
			.72222
		],
		247: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		248: [
			.09722,
			.52778,
			0,
			0,
			.5
		],
		305: [
			0,
			.43056,
			0,
			0,
			.27778
		],
		338: [
			0,
			.68333,
			0,
			0,
			1.01389
		],
		339: [
			0,
			.43056,
			0,
			0,
			.77778
		],
		567: [
			.19444,
			.43056,
			0,
			0,
			.30556
		],
		710: [
			0,
			.69444,
			0,
			0,
			.5
		],
		711: [
			0,
			.62847,
			0,
			0,
			.5
		],
		713: [
			0,
			.56778,
			0,
			0,
			.5
		],
		714: [
			0,
			.69444,
			0,
			0,
			.5
		],
		715: [
			0,
			.69444,
			0,
			0,
			.5
		],
		728: [
			0,
			.69444,
			0,
			0,
			.5
		],
		729: [
			0,
			.66786,
			0,
			0,
			.27778
		],
		730: [
			0,
			.69444,
			0,
			0,
			.75
		],
		732: [
			0,
			.66786,
			0,
			0,
			.5
		],
		733: [
			0,
			.69444,
			0,
			0,
			.5
		],
		915: [
			0,
			.68333,
			0,
			0,
			.625
		],
		916: [
			0,
			.68333,
			0,
			0,
			.83334
		],
		920: [
			0,
			.68333,
			0,
			0,
			.77778
		],
		923: [
			0,
			.68333,
			0,
			0,
			.69445
		],
		926: [
			0,
			.68333,
			0,
			0,
			.66667
		],
		928: [
			0,
			.68333,
			0,
			0,
			.75
		],
		931: [
			0,
			.68333,
			0,
			0,
			.72222
		],
		933: [
			0,
			.68333,
			0,
			0,
			.77778
		],
		934: [
			0,
			.68333,
			0,
			0,
			.72222
		],
		936: [
			0,
			.68333,
			0,
			0,
			.77778
		],
		937: [
			0,
			.68333,
			0,
			0,
			.72222
		],
		8211: [
			0,
			.43056,
			.02778,
			0,
			.5
		],
		8212: [
			0,
			.43056,
			.02778,
			0,
			1
		],
		8216: [
			0,
			.69444,
			0,
			0,
			.27778
		],
		8217: [
			0,
			.69444,
			0,
			0,
			.27778
		],
		8220: [
			0,
			.69444,
			0,
			0,
			.5
		],
		8221: [
			0,
			.69444,
			0,
			0,
			.5
		],
		8224: [
			.19444,
			.69444,
			0,
			0,
			.44445
		],
		8225: [
			.19444,
			.69444,
			0,
			0,
			.44445
		],
		8230: [
			0,
			.123,
			0,
			0,
			1.172
		],
		8242: [
			0,
			.55556,
			0,
			0,
			.275
		],
		8407: [
			0,
			.71444,
			.15382,
			0,
			.5
		],
		8463: [
			0,
			.68889,
			0,
			0,
			.54028
		],
		8465: [
			0,
			.69444,
			0,
			0,
			.72222
		],
		8467: [
			0,
			.69444,
			0,
			.11111,
			.41667
		],
		8472: [
			.19444,
			.43056,
			0,
			.11111,
			.63646
		],
		8476: [
			0,
			.69444,
			0,
			0,
			.72222
		],
		8501: [
			0,
			.69444,
			0,
			0,
			.61111
		],
		8592: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8593: [
			.19444,
			.69444,
			0,
			0,
			.5
		],
		8594: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8595: [
			.19444,
			.69444,
			0,
			0,
			.5
		],
		8596: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8597: [
			.25,
			.75,
			0,
			0,
			.5
		],
		8598: [
			.19444,
			.69444,
			0,
			0,
			1
		],
		8599: [
			.19444,
			.69444,
			0,
			0,
			1
		],
		8600: [
			.19444,
			.69444,
			0,
			0,
			1
		],
		8601: [
			.19444,
			.69444,
			0,
			0,
			1
		],
		8614: [
			.011,
			.511,
			0,
			0,
			1
		],
		8617: [
			.011,
			.511,
			0,
			0,
			1.126
		],
		8618: [
			.011,
			.511,
			0,
			0,
			1.126
		],
		8636: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8637: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8640: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8641: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8652: [
			.011,
			.671,
			0,
			0,
			1
		],
		8656: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8657: [
			.19444,
			.69444,
			0,
			0,
			.61111
		],
		8658: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8659: [
			.19444,
			.69444,
			0,
			0,
			.61111
		],
		8660: [
			-.13313,
			.36687,
			0,
			0,
			1
		],
		8661: [
			.25,
			.75,
			0,
			0,
			.61111
		],
		8704: [
			0,
			.69444,
			0,
			0,
			.55556
		],
		8706: [
			0,
			.69444,
			.05556,
			.08334,
			.5309
		],
		8707: [
			0,
			.69444,
			0,
			0,
			.55556
		],
		8709: [
			.05556,
			.75,
			0,
			0,
			.5
		],
		8711: [
			0,
			.68333,
			0,
			0,
			.83334
		],
		8712: [
			.0391,
			.5391,
			0,
			0,
			.66667
		],
		8715: [
			.0391,
			.5391,
			0,
			0,
			.66667
		],
		8722: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		8723: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		8725: [
			.25,
			.75,
			0,
			0,
			.5
		],
		8726: [
			.25,
			.75,
			0,
			0,
			.5
		],
		8727: [
			-.03472,
			.46528,
			0,
			0,
			.5
		],
		8728: [
			-.05555,
			.44445,
			0,
			0,
			.5
		],
		8729: [
			-.05555,
			.44445,
			0,
			0,
			.5
		],
		8730: [
			.2,
			.8,
			0,
			0,
			.83334
		],
		8733: [
			0,
			.43056,
			0,
			0,
			.77778
		],
		8734: [
			0,
			.43056,
			0,
			0,
			1
		],
		8736: [
			0,
			.69224,
			0,
			0,
			.72222
		],
		8739: [
			.25,
			.75,
			0,
			0,
			.27778
		],
		8741: [
			.25,
			.75,
			0,
			0,
			.5
		],
		8743: [
			0,
			.55556,
			0,
			0,
			.66667
		],
		8744: [
			0,
			.55556,
			0,
			0,
			.66667
		],
		8745: [
			0,
			.55556,
			0,
			0,
			.66667
		],
		8746: [
			0,
			.55556,
			0,
			0,
			.66667
		],
		8747: [
			.19444,
			.69444,
			.11111,
			0,
			.41667
		],
		8764: [
			-.13313,
			.36687,
			0,
			0,
			.77778
		],
		8768: [
			.19444,
			.69444,
			0,
			0,
			.27778
		],
		8771: [
			-.03625,
			.46375,
			0,
			0,
			.77778
		],
		8773: [
			-.022,
			.589,
			0,
			0,
			.778
		],
		8776: [
			-.01688,
			.48312,
			0,
			0,
			.77778
		],
		8781: [
			-.03625,
			.46375,
			0,
			0,
			.77778
		],
		8784: [
			-.133,
			.673,
			0,
			0,
			.778
		],
		8801: [
			-.03625,
			.46375,
			0,
			0,
			.77778
		],
		8804: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		8805: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		8810: [
			.0391,
			.5391,
			0,
			0,
			1
		],
		8811: [
			.0391,
			.5391,
			0,
			0,
			1
		],
		8826: [
			.0391,
			.5391,
			0,
			0,
			.77778
		],
		8827: [
			.0391,
			.5391,
			0,
			0,
			.77778
		],
		8834: [
			.0391,
			.5391,
			0,
			0,
			.77778
		],
		8835: [
			.0391,
			.5391,
			0,
			0,
			.77778
		],
		8838: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		8839: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		8846: [
			0,
			.55556,
			0,
			0,
			.66667
		],
		8849: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		8850: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		8851: [
			0,
			.55556,
			0,
			0,
			.66667
		],
		8852: [
			0,
			.55556,
			0,
			0,
			.66667
		],
		8853: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		8854: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		8855: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		8856: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		8857: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		8866: [
			0,
			.69444,
			0,
			0,
			.61111
		],
		8867: [
			0,
			.69444,
			0,
			0,
			.61111
		],
		8868: [
			0,
			.69444,
			0,
			0,
			.77778
		],
		8869: [
			0,
			.69444,
			0,
			0,
			.77778
		],
		8872: [
			.249,
			.75,
			0,
			0,
			.867
		],
		8900: [
			-.05555,
			.44445,
			0,
			0,
			.5
		],
		8901: [
			-.05555,
			.44445,
			0,
			0,
			.27778
		],
		8902: [
			-.03472,
			.46528,
			0,
			0,
			.5
		],
		8904: [
			.005,
			.505,
			0,
			0,
			.9
		],
		8942: [
			.03,
			.903,
			0,
			0,
			.278
		],
		8943: [
			-.19,
			.313,
			0,
			0,
			1.172
		],
		8945: [
			-.1,
			.823,
			0,
			0,
			1.282
		],
		8968: [
			.25,
			.75,
			0,
			0,
			.44445
		],
		8969: [
			.25,
			.75,
			0,
			0,
			.44445
		],
		8970: [
			.25,
			.75,
			0,
			0,
			.44445
		],
		8971: [
			.25,
			.75,
			0,
			0,
			.44445
		],
		8994: [
			-.14236,
			.35764,
			0,
			0,
			1
		],
		8995: [
			-.14236,
			.35764,
			0,
			0,
			1
		],
		9136: [
			.244,
			.744,
			0,
			0,
			.412
		],
		9137: [
			.244,
			.745,
			0,
			0,
			.412
		],
		9651: [
			.19444,
			.69444,
			0,
			0,
			.88889
		],
		9657: [
			-.03472,
			.46528,
			0,
			0,
			.5
		],
		9661: [
			.19444,
			.69444,
			0,
			0,
			.88889
		],
		9667: [
			-.03472,
			.46528,
			0,
			0,
			.5
		],
		9711: [
			.19444,
			.69444,
			0,
			0,
			1
		],
		9824: [
			.12963,
			.69444,
			0,
			0,
			.77778
		],
		9825: [
			.12963,
			.69444,
			0,
			0,
			.77778
		],
		9826: [
			.12963,
			.69444,
			0,
			0,
			.77778
		],
		9827: [
			.12963,
			.69444,
			0,
			0,
			.77778
		],
		9837: [
			0,
			.75,
			0,
			0,
			.38889
		],
		9838: [
			.19444,
			.69444,
			0,
			0,
			.38889
		],
		9839: [
			.19444,
			.69444,
			0,
			0,
			.38889
		],
		10216: [
			.25,
			.75,
			0,
			0,
			.38889
		],
		10217: [
			.25,
			.75,
			0,
			0,
			.38889
		],
		10222: [
			.244,
			.744,
			0,
			0,
			.412
		],
		10223: [
			.244,
			.745,
			0,
			0,
			.412
		],
		10229: [
			.011,
			.511,
			0,
			0,
			1.609
		],
		10230: [
			.011,
			.511,
			0,
			0,
			1.638
		],
		10231: [
			.011,
			.511,
			0,
			0,
			1.859
		],
		10232: [
			.024,
			.525,
			0,
			0,
			1.609
		],
		10233: [
			.024,
			.525,
			0,
			0,
			1.638
		],
		10234: [
			.024,
			.525,
			0,
			0,
			1.858
		],
		10236: [
			.011,
			.511,
			0,
			0,
			1.638
		],
		10815: [
			0,
			.68333,
			0,
			0,
			.75
		],
		10927: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		10928: [
			.13597,
			.63597,
			0,
			0,
			.77778
		],
		57376: [
			.19444,
			.69444,
			0,
			0,
			0
		]
	},
	"Math-BoldItalic": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		48: [
			0,
			.44444,
			0,
			0,
			.575
		],
		49: [
			0,
			.44444,
			0,
			0,
			.575
		],
		50: [
			0,
			.44444,
			0,
			0,
			.575
		],
		51: [
			.19444,
			.44444,
			0,
			0,
			.575
		],
		52: [
			.19444,
			.44444,
			0,
			0,
			.575
		],
		53: [
			.19444,
			.44444,
			0,
			0,
			.575
		],
		54: [
			0,
			.64444,
			0,
			0,
			.575
		],
		55: [
			.19444,
			.44444,
			0,
			0,
			.575
		],
		56: [
			0,
			.64444,
			0,
			0,
			.575
		],
		57: [
			.19444,
			.44444,
			0,
			0,
			.575
		],
		65: [
			0,
			.68611,
			0,
			0,
			.86944
		],
		66: [
			0,
			.68611,
			.04835,
			0,
			.8664
		],
		67: [
			0,
			.68611,
			.06979,
			0,
			.81694
		],
		68: [
			0,
			.68611,
			.03194,
			0,
			.93812
		],
		69: [
			0,
			.68611,
			.05451,
			0,
			.81007
		],
		70: [
			0,
			.68611,
			.15972,
			0,
			.68889
		],
		71: [
			0,
			.68611,
			0,
			0,
			.88673
		],
		72: [
			0,
			.68611,
			.08229,
			0,
			.98229
		],
		73: [
			0,
			.68611,
			.07778,
			0,
			.51111
		],
		74: [
			0,
			.68611,
			.10069,
			0,
			.63125
		],
		75: [
			0,
			.68611,
			.06979,
			0,
			.97118
		],
		76: [
			0,
			.68611,
			0,
			0,
			.75555
		],
		77: [
			0,
			.68611,
			.11424,
			0,
			1.14201
		],
		78: [
			0,
			.68611,
			.11424,
			0,
			.95034
		],
		79: [
			0,
			.68611,
			.03194,
			0,
			.83666
		],
		80: [
			0,
			.68611,
			.15972,
			0,
			.72309
		],
		81: [
			.19444,
			.68611,
			0,
			0,
			.86861
		],
		82: [
			0,
			.68611,
			.00421,
			0,
			.87235
		],
		83: [
			0,
			.68611,
			.05382,
			0,
			.69271
		],
		84: [
			0,
			.68611,
			.15972,
			0,
			.63663
		],
		85: [
			0,
			.68611,
			.11424,
			0,
			.80027
		],
		86: [
			0,
			.68611,
			.25555,
			0,
			.67778
		],
		87: [
			0,
			.68611,
			.15972,
			0,
			1.09305
		],
		88: [
			0,
			.68611,
			.07778,
			0,
			.94722
		],
		89: [
			0,
			.68611,
			.25555,
			0,
			.67458
		],
		90: [
			0,
			.68611,
			.06979,
			0,
			.77257
		],
		97: [
			0,
			.44444,
			0,
			0,
			.63287
		],
		98: [
			0,
			.69444,
			0,
			0,
			.52083
		],
		99: [
			0,
			.44444,
			0,
			0,
			.51342
		],
		100: [
			0,
			.69444,
			0,
			0,
			.60972
		],
		101: [
			0,
			.44444,
			0,
			0,
			.55361
		],
		102: [
			.19444,
			.69444,
			.11042,
			0,
			.56806
		],
		103: [
			.19444,
			.44444,
			.03704,
			0,
			.5449
		],
		104: [
			0,
			.69444,
			0,
			0,
			.66759
		],
		105: [
			0,
			.69326,
			0,
			0,
			.4048
		],
		106: [
			.19444,
			.69326,
			.0622,
			0,
			.47083
		],
		107: [
			0,
			.69444,
			.01852,
			0,
			.6037
		],
		108: [
			0,
			.69444,
			.0088,
			0,
			.34815
		],
		109: [
			0,
			.44444,
			0,
			0,
			1.0324
		],
		110: [
			0,
			.44444,
			0,
			0,
			.71296
		],
		111: [
			0,
			.44444,
			0,
			0,
			.58472
		],
		112: [
			.19444,
			.44444,
			0,
			0,
			.60092
		],
		113: [
			.19444,
			.44444,
			.03704,
			0,
			.54213
		],
		114: [
			0,
			.44444,
			.03194,
			0,
			.5287
		],
		115: [
			0,
			.44444,
			0,
			0,
			.53125
		],
		116: [
			0,
			.63492,
			0,
			0,
			.41528
		],
		117: [
			0,
			.44444,
			0,
			0,
			.68102
		],
		118: [
			0,
			.44444,
			.03704,
			0,
			.56666
		],
		119: [
			0,
			.44444,
			.02778,
			0,
			.83148
		],
		120: [
			0,
			.44444,
			0,
			0,
			.65903
		],
		121: [
			.19444,
			.44444,
			.03704,
			0,
			.59028
		],
		122: [
			0,
			.44444,
			.04213,
			0,
			.55509
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		915: [
			0,
			.68611,
			.15972,
			0,
			.65694
		],
		916: [
			0,
			.68611,
			0,
			0,
			.95833
		],
		920: [
			0,
			.68611,
			.03194,
			0,
			.86722
		],
		923: [
			0,
			.68611,
			0,
			0,
			.80555
		],
		926: [
			0,
			.68611,
			.07458,
			0,
			.84125
		],
		928: [
			0,
			.68611,
			.08229,
			0,
			.98229
		],
		931: [
			0,
			.68611,
			.05451,
			0,
			.88507
		],
		933: [
			0,
			.68611,
			.15972,
			0,
			.67083
		],
		934: [
			0,
			.68611,
			0,
			0,
			.76666
		],
		936: [
			0,
			.68611,
			.11653,
			0,
			.71402
		],
		937: [
			0,
			.68611,
			.04835,
			0,
			.8789
		],
		945: [
			0,
			.44444,
			0,
			0,
			.76064
		],
		946: [
			.19444,
			.69444,
			.03403,
			0,
			.65972
		],
		947: [
			.19444,
			.44444,
			.06389,
			0,
			.59003
		],
		948: [
			0,
			.69444,
			.03819,
			0,
			.52222
		],
		949: [
			0,
			.44444,
			0,
			0,
			.52882
		],
		950: [
			.19444,
			.69444,
			.06215,
			0,
			.50833
		],
		951: [
			.19444,
			.44444,
			.03704,
			0,
			.6
		],
		952: [
			0,
			.69444,
			.03194,
			0,
			.5618
		],
		953: [
			0,
			.44444,
			0,
			0,
			.41204
		],
		954: [
			0,
			.44444,
			0,
			0,
			.66759
		],
		955: [
			0,
			.69444,
			0,
			0,
			.67083
		],
		956: [
			.19444,
			.44444,
			0,
			0,
			.70787
		],
		957: [
			0,
			.44444,
			.06898,
			0,
			.57685
		],
		958: [
			.19444,
			.69444,
			.03021,
			0,
			.50833
		],
		959: [
			0,
			.44444,
			0,
			0,
			.58472
		],
		960: [
			0,
			.44444,
			.03704,
			0,
			.68241
		],
		961: [
			.19444,
			.44444,
			0,
			0,
			.6118
		],
		962: [
			.09722,
			.44444,
			.07917,
			0,
			.42361
		],
		963: [
			0,
			.44444,
			.03704,
			0,
			.68588
		],
		964: [
			0,
			.44444,
			.13472,
			0,
			.52083
		],
		965: [
			0,
			.44444,
			.03704,
			0,
			.63055
		],
		966: [
			.19444,
			.44444,
			0,
			0,
			.74722
		],
		967: [
			.19444,
			.44444,
			0,
			0,
			.71805
		],
		968: [
			.19444,
			.69444,
			.03704,
			0,
			.75833
		],
		969: [
			0,
			.44444,
			.03704,
			0,
			.71782
		],
		977: [
			0,
			.69444,
			0,
			0,
			.69155
		],
		981: [
			.19444,
			.69444,
			0,
			0,
			.7125
		],
		982: [
			0,
			.44444,
			.03194,
			0,
			.975
		],
		1009: [
			.19444,
			.44444,
			0,
			0,
			.6118
		],
		1013: [
			0,
			.44444,
			0,
			0,
			.48333
		],
		57649: [
			0,
			.44444,
			0,
			0,
			.39352
		],
		57911: [
			.19444,
			.44444,
			0,
			0,
			.43889
		]
	},
	"Math-Italic": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		48: [
			0,
			.43056,
			0,
			0,
			.5
		],
		49: [
			0,
			.43056,
			0,
			0,
			.5
		],
		50: [
			0,
			.43056,
			0,
			0,
			.5
		],
		51: [
			.19444,
			.43056,
			0,
			0,
			.5
		],
		52: [
			.19444,
			.43056,
			0,
			0,
			.5
		],
		53: [
			.19444,
			.43056,
			0,
			0,
			.5
		],
		54: [
			0,
			.64444,
			0,
			0,
			.5
		],
		55: [
			.19444,
			.43056,
			0,
			0,
			.5
		],
		56: [
			0,
			.64444,
			0,
			0,
			.5
		],
		57: [
			.19444,
			.43056,
			0,
			0,
			.5
		],
		65: [
			0,
			.68333,
			0,
			.13889,
			.75
		],
		66: [
			0,
			.68333,
			.05017,
			.08334,
			.75851
		],
		67: [
			0,
			.68333,
			.07153,
			.08334,
			.71472
		],
		68: [
			0,
			.68333,
			.02778,
			.05556,
			.82792
		],
		69: [
			0,
			.68333,
			.05764,
			.08334,
			.7382
		],
		70: [
			0,
			.68333,
			.13889,
			.08334,
			.64306
		],
		71: [
			0,
			.68333,
			0,
			.08334,
			.78625
		],
		72: [
			0,
			.68333,
			.08125,
			.05556,
			.83125
		],
		73: [
			0,
			.68333,
			.07847,
			.11111,
			.43958
		],
		74: [
			0,
			.68333,
			.09618,
			.16667,
			.55451
		],
		75: [
			0,
			.68333,
			.07153,
			.05556,
			.84931
		],
		76: [
			0,
			.68333,
			0,
			.02778,
			.68056
		],
		77: [
			0,
			.68333,
			.10903,
			.08334,
			.97014
		],
		78: [
			0,
			.68333,
			.10903,
			.08334,
			.80347
		],
		79: [
			0,
			.68333,
			.02778,
			.08334,
			.76278
		],
		80: [
			0,
			.68333,
			.13889,
			.08334,
			.64201
		],
		81: [
			.19444,
			.68333,
			0,
			.08334,
			.79056
		],
		82: [
			0,
			.68333,
			.00773,
			.08334,
			.75929
		],
		83: [
			0,
			.68333,
			.05764,
			.08334,
			.6132
		],
		84: [
			0,
			.68333,
			.13889,
			.08334,
			.58438
		],
		85: [
			0,
			.68333,
			.10903,
			.02778,
			.68278
		],
		86: [
			0,
			.68333,
			.22222,
			0,
			.58333
		],
		87: [
			0,
			.68333,
			.13889,
			0,
			.94445
		],
		88: [
			0,
			.68333,
			.07847,
			.08334,
			.82847
		],
		89: [
			0,
			.68333,
			.22222,
			0,
			.58056
		],
		90: [
			0,
			.68333,
			.07153,
			.08334,
			.68264
		],
		97: [
			0,
			.43056,
			0,
			0,
			.52859
		],
		98: [
			0,
			.69444,
			0,
			0,
			.42917
		],
		99: [
			0,
			.43056,
			0,
			.05556,
			.43276
		],
		100: [
			0,
			.69444,
			0,
			.16667,
			.52049
		],
		101: [
			0,
			.43056,
			0,
			.05556,
			.46563
		],
		102: [
			.19444,
			.69444,
			.10764,
			.16667,
			.48959
		],
		103: [
			.19444,
			.43056,
			.03588,
			.02778,
			.47697
		],
		104: [
			0,
			.69444,
			0,
			0,
			.57616
		],
		105: [
			0,
			.65952,
			0,
			0,
			.34451
		],
		106: [
			.19444,
			.65952,
			.05724,
			0,
			.41181
		],
		107: [
			0,
			.69444,
			.03148,
			0,
			.5206
		],
		108: [
			0,
			.69444,
			.01968,
			.08334,
			.29838
		],
		109: [
			0,
			.43056,
			0,
			0,
			.87801
		],
		110: [
			0,
			.43056,
			0,
			0,
			.60023
		],
		111: [
			0,
			.43056,
			0,
			.05556,
			.48472
		],
		112: [
			.19444,
			.43056,
			0,
			.08334,
			.50313
		],
		113: [
			.19444,
			.43056,
			.03588,
			.08334,
			.44641
		],
		114: [
			0,
			.43056,
			.02778,
			.05556,
			.45116
		],
		115: [
			0,
			.43056,
			0,
			.05556,
			.46875
		],
		116: [
			0,
			.61508,
			0,
			.08334,
			.36111
		],
		117: [
			0,
			.43056,
			0,
			.02778,
			.57246
		],
		118: [
			0,
			.43056,
			.03588,
			.02778,
			.48472
		],
		119: [
			0,
			.43056,
			.02691,
			.08334,
			.71592
		],
		120: [
			0,
			.43056,
			0,
			.02778,
			.57153
		],
		121: [
			.19444,
			.43056,
			.03588,
			.05556,
			.49028
		],
		122: [
			0,
			.43056,
			.04398,
			.05556,
			.46505
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		915: [
			0,
			.68333,
			.13889,
			.08334,
			.61528
		],
		916: [
			0,
			.68333,
			0,
			.16667,
			.83334
		],
		920: [
			0,
			.68333,
			.02778,
			.08334,
			.76278
		],
		923: [
			0,
			.68333,
			0,
			.16667,
			.69445
		],
		926: [
			0,
			.68333,
			.07569,
			.08334,
			.74236
		],
		928: [
			0,
			.68333,
			.08125,
			.05556,
			.83125
		],
		931: [
			0,
			.68333,
			.05764,
			.08334,
			.77986
		],
		933: [
			0,
			.68333,
			.13889,
			.05556,
			.58333
		],
		934: [
			0,
			.68333,
			0,
			.08334,
			.66667
		],
		936: [
			0,
			.68333,
			.11,
			.05556,
			.61222
		],
		937: [
			0,
			.68333,
			.05017,
			.08334,
			.7724
		],
		945: [
			0,
			.43056,
			.0037,
			.02778,
			.6397
		],
		946: [
			.19444,
			.69444,
			.05278,
			.08334,
			.56563
		],
		947: [
			.19444,
			.43056,
			.05556,
			0,
			.51773
		],
		948: [
			0,
			.69444,
			.03785,
			.05556,
			.44444
		],
		949: [
			0,
			.43056,
			0,
			.08334,
			.46632
		],
		950: [
			.19444,
			.69444,
			.07378,
			.08334,
			.4375
		],
		951: [
			.19444,
			.43056,
			.03588,
			.05556,
			.49653
		],
		952: [
			0,
			.69444,
			.02778,
			.08334,
			.46944
		],
		953: [
			0,
			.43056,
			0,
			.05556,
			.35394
		],
		954: [
			0,
			.43056,
			0,
			0,
			.57616
		],
		955: [
			0,
			.69444,
			0,
			0,
			.58334
		],
		956: [
			.19444,
			.43056,
			0,
			.02778,
			.60255
		],
		957: [
			0,
			.43056,
			.06366,
			.02778,
			.49398
		],
		958: [
			.19444,
			.69444,
			.04601,
			.11111,
			.4375
		],
		959: [
			0,
			.43056,
			0,
			.05556,
			.48472
		],
		960: [
			0,
			.43056,
			.03588,
			0,
			.57003
		],
		961: [
			.19444,
			.43056,
			0,
			.08334,
			.51702
		],
		962: [
			.09722,
			.43056,
			.07986,
			.08334,
			.36285
		],
		963: [
			0,
			.43056,
			.03588,
			0,
			.57141
		],
		964: [
			0,
			.43056,
			.1132,
			.02778,
			.43715
		],
		965: [
			0,
			.43056,
			.03588,
			.02778,
			.54028
		],
		966: [
			.19444,
			.43056,
			0,
			.08334,
			.65417
		],
		967: [
			.19444,
			.43056,
			0,
			.05556,
			.62569
		],
		968: [
			.19444,
			.69444,
			.03588,
			.11111,
			.65139
		],
		969: [
			0,
			.43056,
			.03588,
			0,
			.62245
		],
		977: [
			0,
			.69444,
			0,
			.08334,
			.59144
		],
		981: [
			.19444,
			.69444,
			0,
			.08334,
			.59583
		],
		982: [
			0,
			.43056,
			.02778,
			0,
			.82813
		],
		1009: [
			.19444,
			.43056,
			0,
			.08334,
			.51702
		],
		1013: [
			0,
			.43056,
			0,
			.05556,
			.4059
		],
		57649: [
			0,
			.43056,
			0,
			.02778,
			.32246
		],
		57911: [
			.19444,
			.43056,
			0,
			.08334,
			.38403
		]
	},
	"SansSerif-Bold": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		33: [
			0,
			.69444,
			0,
			0,
			.36667
		],
		34: [
			0,
			.69444,
			0,
			0,
			.55834
		],
		35: [
			.19444,
			.69444,
			0,
			0,
			.91667
		],
		36: [
			.05556,
			.75,
			0,
			0,
			.55
		],
		37: [
			.05556,
			.75,
			0,
			0,
			1.02912
		],
		38: [
			0,
			.69444,
			0,
			0,
			.83056
		],
		39: [
			0,
			.69444,
			0,
			0,
			.30556
		],
		40: [
			.25,
			.75,
			0,
			0,
			.42778
		],
		41: [
			.25,
			.75,
			0,
			0,
			.42778
		],
		42: [
			0,
			.75,
			0,
			0,
			.55
		],
		43: [
			.11667,
			.61667,
			0,
			0,
			.85556
		],
		44: [
			.10556,
			.13056,
			0,
			0,
			.30556
		],
		45: [
			0,
			.45833,
			0,
			0,
			.36667
		],
		46: [
			0,
			.13056,
			0,
			0,
			.30556
		],
		47: [
			.25,
			.75,
			0,
			0,
			.55
		],
		48: [
			0,
			.69444,
			0,
			0,
			.55
		],
		49: [
			0,
			.69444,
			0,
			0,
			.55
		],
		50: [
			0,
			.69444,
			0,
			0,
			.55
		],
		51: [
			0,
			.69444,
			0,
			0,
			.55
		],
		52: [
			0,
			.69444,
			0,
			0,
			.55
		],
		53: [
			0,
			.69444,
			0,
			0,
			.55
		],
		54: [
			0,
			.69444,
			0,
			0,
			.55
		],
		55: [
			0,
			.69444,
			0,
			0,
			.55
		],
		56: [
			0,
			.69444,
			0,
			0,
			.55
		],
		57: [
			0,
			.69444,
			0,
			0,
			.55
		],
		58: [
			0,
			.45833,
			0,
			0,
			.30556
		],
		59: [
			.10556,
			.45833,
			0,
			0,
			.30556
		],
		61: [
			-.09375,
			.40625,
			0,
			0,
			.85556
		],
		63: [
			0,
			.69444,
			0,
			0,
			.51945
		],
		64: [
			0,
			.69444,
			0,
			0,
			.73334
		],
		65: [
			0,
			.69444,
			0,
			0,
			.73334
		],
		66: [
			0,
			.69444,
			0,
			0,
			.73334
		],
		67: [
			0,
			.69444,
			0,
			0,
			.70278
		],
		68: [
			0,
			.69444,
			0,
			0,
			.79445
		],
		69: [
			0,
			.69444,
			0,
			0,
			.64167
		],
		70: [
			0,
			.69444,
			0,
			0,
			.61111
		],
		71: [
			0,
			.69444,
			0,
			0,
			.73334
		],
		72: [
			0,
			.69444,
			0,
			0,
			.79445
		],
		73: [
			0,
			.69444,
			0,
			0,
			.33056
		],
		74: [
			0,
			.69444,
			0,
			0,
			.51945
		],
		75: [
			0,
			.69444,
			0,
			0,
			.76389
		],
		76: [
			0,
			.69444,
			0,
			0,
			.58056
		],
		77: [
			0,
			.69444,
			0,
			0,
			.97778
		],
		78: [
			0,
			.69444,
			0,
			0,
			.79445
		],
		79: [
			0,
			.69444,
			0,
			0,
			.79445
		],
		80: [
			0,
			.69444,
			0,
			0,
			.70278
		],
		81: [
			.10556,
			.69444,
			0,
			0,
			.79445
		],
		82: [
			0,
			.69444,
			0,
			0,
			.70278
		],
		83: [
			0,
			.69444,
			0,
			0,
			.61111
		],
		84: [
			0,
			.69444,
			0,
			0,
			.73334
		],
		85: [
			0,
			.69444,
			0,
			0,
			.76389
		],
		86: [
			0,
			.69444,
			.01528,
			0,
			.73334
		],
		87: [
			0,
			.69444,
			.01528,
			0,
			1.03889
		],
		88: [
			0,
			.69444,
			0,
			0,
			.73334
		],
		89: [
			0,
			.69444,
			.0275,
			0,
			.73334
		],
		90: [
			0,
			.69444,
			0,
			0,
			.67223
		],
		91: [
			.25,
			.75,
			0,
			0,
			.34306
		],
		93: [
			.25,
			.75,
			0,
			0,
			.34306
		],
		94: [
			0,
			.69444,
			0,
			0,
			.55
		],
		95: [
			.35,
			.10833,
			.03056,
			0,
			.55
		],
		97: [
			0,
			.45833,
			0,
			0,
			.525
		],
		98: [
			0,
			.69444,
			0,
			0,
			.56111
		],
		99: [
			0,
			.45833,
			0,
			0,
			.48889
		],
		100: [
			0,
			.69444,
			0,
			0,
			.56111
		],
		101: [
			0,
			.45833,
			0,
			0,
			.51111
		],
		102: [
			0,
			.69444,
			.07639,
			0,
			.33611
		],
		103: [
			.19444,
			.45833,
			.01528,
			0,
			.55
		],
		104: [
			0,
			.69444,
			0,
			0,
			.56111
		],
		105: [
			0,
			.69444,
			0,
			0,
			.25556
		],
		106: [
			.19444,
			.69444,
			0,
			0,
			.28611
		],
		107: [
			0,
			.69444,
			0,
			0,
			.53056
		],
		108: [
			0,
			.69444,
			0,
			0,
			.25556
		],
		109: [
			0,
			.45833,
			0,
			0,
			.86667
		],
		110: [
			0,
			.45833,
			0,
			0,
			.56111
		],
		111: [
			0,
			.45833,
			0,
			0,
			.55
		],
		112: [
			.19444,
			.45833,
			0,
			0,
			.56111
		],
		113: [
			.19444,
			.45833,
			0,
			0,
			.56111
		],
		114: [
			0,
			.45833,
			.01528,
			0,
			.37222
		],
		115: [
			0,
			.45833,
			0,
			0,
			.42167
		],
		116: [
			0,
			.58929,
			0,
			0,
			.40417
		],
		117: [
			0,
			.45833,
			0,
			0,
			.56111
		],
		118: [
			0,
			.45833,
			.01528,
			0,
			.5
		],
		119: [
			0,
			.45833,
			.01528,
			0,
			.74445
		],
		120: [
			0,
			.45833,
			0,
			0,
			.5
		],
		121: [
			.19444,
			.45833,
			.01528,
			0,
			.5
		],
		122: [
			0,
			.45833,
			0,
			0,
			.47639
		],
		126: [
			.35,
			.34444,
			0,
			0,
			.55
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		168: [
			0,
			.69444,
			0,
			0,
			.55
		],
		176: [
			0,
			.69444,
			0,
			0,
			.73334
		],
		180: [
			0,
			.69444,
			0,
			0,
			.55
		],
		184: [
			.17014,
			0,
			0,
			0,
			.48889
		],
		305: [
			0,
			.45833,
			0,
			0,
			.25556
		],
		567: [
			.19444,
			.45833,
			0,
			0,
			.28611
		],
		710: [
			0,
			.69444,
			0,
			0,
			.55
		],
		711: [
			0,
			.63542,
			0,
			0,
			.55
		],
		713: [
			0,
			.63778,
			0,
			0,
			.55
		],
		728: [
			0,
			.69444,
			0,
			0,
			.55
		],
		729: [
			0,
			.69444,
			0,
			0,
			.30556
		],
		730: [
			0,
			.69444,
			0,
			0,
			.73334
		],
		732: [
			0,
			.69444,
			0,
			0,
			.55
		],
		733: [
			0,
			.69444,
			0,
			0,
			.55
		],
		915: [
			0,
			.69444,
			0,
			0,
			.58056
		],
		916: [
			0,
			.69444,
			0,
			0,
			.91667
		],
		920: [
			0,
			.69444,
			0,
			0,
			.85556
		],
		923: [
			0,
			.69444,
			0,
			0,
			.67223
		],
		926: [
			0,
			.69444,
			0,
			0,
			.73334
		],
		928: [
			0,
			.69444,
			0,
			0,
			.79445
		],
		931: [
			0,
			.69444,
			0,
			0,
			.79445
		],
		933: [
			0,
			.69444,
			0,
			0,
			.85556
		],
		934: [
			0,
			.69444,
			0,
			0,
			.79445
		],
		936: [
			0,
			.69444,
			0,
			0,
			.85556
		],
		937: [
			0,
			.69444,
			0,
			0,
			.79445
		],
		8211: [
			0,
			.45833,
			.03056,
			0,
			.55
		],
		8212: [
			0,
			.45833,
			.03056,
			0,
			1.10001
		],
		8216: [
			0,
			.69444,
			0,
			0,
			.30556
		],
		8217: [
			0,
			.69444,
			0,
			0,
			.30556
		],
		8220: [
			0,
			.69444,
			0,
			0,
			.55834
		],
		8221: [
			0,
			.69444,
			0,
			0,
			.55834
		]
	},
	"SansSerif-Italic": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		33: [
			0,
			.69444,
			.05733,
			0,
			.31945
		],
		34: [
			0,
			.69444,
			.00316,
			0,
			.5
		],
		35: [
			.19444,
			.69444,
			.05087,
			0,
			.83334
		],
		36: [
			.05556,
			.75,
			.11156,
			0,
			.5
		],
		37: [
			.05556,
			.75,
			.03126,
			0,
			.83334
		],
		38: [
			0,
			.69444,
			.03058,
			0,
			.75834
		],
		39: [
			0,
			.69444,
			.07816,
			0,
			.27778
		],
		40: [
			.25,
			.75,
			.13164,
			0,
			.38889
		],
		41: [
			.25,
			.75,
			.02536,
			0,
			.38889
		],
		42: [
			0,
			.75,
			.11775,
			0,
			.5
		],
		43: [
			.08333,
			.58333,
			.02536,
			0,
			.77778
		],
		44: [
			.125,
			.08333,
			0,
			0,
			.27778
		],
		45: [
			0,
			.44444,
			.01946,
			0,
			.33333
		],
		46: [
			0,
			.08333,
			0,
			0,
			.27778
		],
		47: [
			.25,
			.75,
			.13164,
			0,
			.5
		],
		48: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		49: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		50: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		51: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		52: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		53: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		54: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		55: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		56: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		57: [
			0,
			.65556,
			.11156,
			0,
			.5
		],
		58: [
			0,
			.44444,
			.02502,
			0,
			.27778
		],
		59: [
			.125,
			.44444,
			.02502,
			0,
			.27778
		],
		61: [
			-.13,
			.37,
			.05087,
			0,
			.77778
		],
		63: [
			0,
			.69444,
			.11809,
			0,
			.47222
		],
		64: [
			0,
			.69444,
			.07555,
			0,
			.66667
		],
		65: [
			0,
			.69444,
			0,
			0,
			.66667
		],
		66: [
			0,
			.69444,
			.08293,
			0,
			.66667
		],
		67: [
			0,
			.69444,
			.11983,
			0,
			.63889
		],
		68: [
			0,
			.69444,
			.07555,
			0,
			.72223
		],
		69: [
			0,
			.69444,
			.11983,
			0,
			.59722
		],
		70: [
			0,
			.69444,
			.13372,
			0,
			.56945
		],
		71: [
			0,
			.69444,
			.11983,
			0,
			.66667
		],
		72: [
			0,
			.69444,
			.08094,
			0,
			.70834
		],
		73: [
			0,
			.69444,
			.13372,
			0,
			.27778
		],
		74: [
			0,
			.69444,
			.08094,
			0,
			.47222
		],
		75: [
			0,
			.69444,
			.11983,
			0,
			.69445
		],
		76: [
			0,
			.69444,
			0,
			0,
			.54167
		],
		77: [
			0,
			.69444,
			.08094,
			0,
			.875
		],
		78: [
			0,
			.69444,
			.08094,
			0,
			.70834
		],
		79: [
			0,
			.69444,
			.07555,
			0,
			.73611
		],
		80: [
			0,
			.69444,
			.08293,
			0,
			.63889
		],
		81: [
			.125,
			.69444,
			.07555,
			0,
			.73611
		],
		82: [
			0,
			.69444,
			.08293,
			0,
			.64584
		],
		83: [
			0,
			.69444,
			.09205,
			0,
			.55556
		],
		84: [
			0,
			.69444,
			.13372,
			0,
			.68056
		],
		85: [
			0,
			.69444,
			.08094,
			0,
			.6875
		],
		86: [
			0,
			.69444,
			.1615,
			0,
			.66667
		],
		87: [
			0,
			.69444,
			.1615,
			0,
			.94445
		],
		88: [
			0,
			.69444,
			.13372,
			0,
			.66667
		],
		89: [
			0,
			.69444,
			.17261,
			0,
			.66667
		],
		90: [
			0,
			.69444,
			.11983,
			0,
			.61111
		],
		91: [
			.25,
			.75,
			.15942,
			0,
			.28889
		],
		93: [
			.25,
			.75,
			.08719,
			0,
			.28889
		],
		94: [
			0,
			.69444,
			.0799,
			0,
			.5
		],
		95: [
			.35,
			.09444,
			.08616,
			0,
			.5
		],
		97: [
			0,
			.44444,
			.00981,
			0,
			.48056
		],
		98: [
			0,
			.69444,
			.03057,
			0,
			.51667
		],
		99: [
			0,
			.44444,
			.08336,
			0,
			.44445
		],
		100: [
			0,
			.69444,
			.09483,
			0,
			.51667
		],
		101: [
			0,
			.44444,
			.06778,
			0,
			.44445
		],
		102: [
			0,
			.69444,
			.21705,
			0,
			.30556
		],
		103: [
			.19444,
			.44444,
			.10836,
			0,
			.5
		],
		104: [
			0,
			.69444,
			.01778,
			0,
			.51667
		],
		105: [
			0,
			.67937,
			.09718,
			0,
			.23889
		],
		106: [
			.19444,
			.67937,
			.09162,
			0,
			.26667
		],
		107: [
			0,
			.69444,
			.08336,
			0,
			.48889
		],
		108: [
			0,
			.69444,
			.09483,
			0,
			.23889
		],
		109: [
			0,
			.44444,
			.01778,
			0,
			.79445
		],
		110: [
			0,
			.44444,
			.01778,
			0,
			.51667
		],
		111: [
			0,
			.44444,
			.06613,
			0,
			.5
		],
		112: [
			.19444,
			.44444,
			.0389,
			0,
			.51667
		],
		113: [
			.19444,
			.44444,
			.04169,
			0,
			.51667
		],
		114: [
			0,
			.44444,
			.10836,
			0,
			.34167
		],
		115: [
			0,
			.44444,
			.0778,
			0,
			.38333
		],
		116: [
			0,
			.57143,
			.07225,
			0,
			.36111
		],
		117: [
			0,
			.44444,
			.04169,
			0,
			.51667
		],
		118: [
			0,
			.44444,
			.10836,
			0,
			.46111
		],
		119: [
			0,
			.44444,
			.10836,
			0,
			.68334
		],
		120: [
			0,
			.44444,
			.09169,
			0,
			.46111
		],
		121: [
			.19444,
			.44444,
			.10836,
			0,
			.46111
		],
		122: [
			0,
			.44444,
			.08752,
			0,
			.43472
		],
		126: [
			.35,
			.32659,
			.08826,
			0,
			.5
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		168: [
			0,
			.67937,
			.06385,
			0,
			.5
		],
		176: [
			0,
			.69444,
			0,
			0,
			.73752
		],
		184: [
			.17014,
			0,
			0,
			0,
			.44445
		],
		305: [
			0,
			.44444,
			.04169,
			0,
			.23889
		],
		567: [
			.19444,
			.44444,
			.04169,
			0,
			.26667
		],
		710: [
			0,
			.69444,
			.0799,
			0,
			.5
		],
		711: [
			0,
			.63194,
			.08432,
			0,
			.5
		],
		713: [
			0,
			.60889,
			.08776,
			0,
			.5
		],
		714: [
			0,
			.69444,
			.09205,
			0,
			.5
		],
		715: [
			0,
			.69444,
			0,
			0,
			.5
		],
		728: [
			0,
			.69444,
			.09483,
			0,
			.5
		],
		729: [
			0,
			.67937,
			.07774,
			0,
			.27778
		],
		730: [
			0,
			.69444,
			0,
			0,
			.73752
		],
		732: [
			0,
			.67659,
			.08826,
			0,
			.5
		],
		733: [
			0,
			.69444,
			.09205,
			0,
			.5
		],
		915: [
			0,
			.69444,
			.13372,
			0,
			.54167
		],
		916: [
			0,
			.69444,
			0,
			0,
			.83334
		],
		920: [
			0,
			.69444,
			.07555,
			0,
			.77778
		],
		923: [
			0,
			.69444,
			0,
			0,
			.61111
		],
		926: [
			0,
			.69444,
			.12816,
			0,
			.66667
		],
		928: [
			0,
			.69444,
			.08094,
			0,
			.70834
		],
		931: [
			0,
			.69444,
			.11983,
			0,
			.72222
		],
		933: [
			0,
			.69444,
			.09031,
			0,
			.77778
		],
		934: [
			0,
			.69444,
			.04603,
			0,
			.72222
		],
		936: [
			0,
			.69444,
			.09031,
			0,
			.77778
		],
		937: [
			0,
			.69444,
			.08293,
			0,
			.72222
		],
		8211: [
			0,
			.44444,
			.08616,
			0,
			.5
		],
		8212: [
			0,
			.44444,
			.08616,
			0,
			1
		],
		8216: [
			0,
			.69444,
			.07816,
			0,
			.27778
		],
		8217: [
			0,
			.69444,
			.07816,
			0,
			.27778
		],
		8220: [
			0,
			.69444,
			.14205,
			0,
			.5
		],
		8221: [
			0,
			.69444,
			.00316,
			0,
			.5
		]
	},
	"SansSerif-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		33: [
			0,
			.69444,
			0,
			0,
			.31945
		],
		34: [
			0,
			.69444,
			0,
			0,
			.5
		],
		35: [
			.19444,
			.69444,
			0,
			0,
			.83334
		],
		36: [
			.05556,
			.75,
			0,
			0,
			.5
		],
		37: [
			.05556,
			.75,
			0,
			0,
			.83334
		],
		38: [
			0,
			.69444,
			0,
			0,
			.75834
		],
		39: [
			0,
			.69444,
			0,
			0,
			.27778
		],
		40: [
			.25,
			.75,
			0,
			0,
			.38889
		],
		41: [
			.25,
			.75,
			0,
			0,
			.38889
		],
		42: [
			0,
			.75,
			0,
			0,
			.5
		],
		43: [
			.08333,
			.58333,
			0,
			0,
			.77778
		],
		44: [
			.125,
			.08333,
			0,
			0,
			.27778
		],
		45: [
			0,
			.44444,
			0,
			0,
			.33333
		],
		46: [
			0,
			.08333,
			0,
			0,
			.27778
		],
		47: [
			.25,
			.75,
			0,
			0,
			.5
		],
		48: [
			0,
			.65556,
			0,
			0,
			.5
		],
		49: [
			0,
			.65556,
			0,
			0,
			.5
		],
		50: [
			0,
			.65556,
			0,
			0,
			.5
		],
		51: [
			0,
			.65556,
			0,
			0,
			.5
		],
		52: [
			0,
			.65556,
			0,
			0,
			.5
		],
		53: [
			0,
			.65556,
			0,
			0,
			.5
		],
		54: [
			0,
			.65556,
			0,
			0,
			.5
		],
		55: [
			0,
			.65556,
			0,
			0,
			.5
		],
		56: [
			0,
			.65556,
			0,
			0,
			.5
		],
		57: [
			0,
			.65556,
			0,
			0,
			.5
		],
		58: [
			0,
			.44444,
			0,
			0,
			.27778
		],
		59: [
			.125,
			.44444,
			0,
			0,
			.27778
		],
		61: [
			-.13,
			.37,
			0,
			0,
			.77778
		],
		63: [
			0,
			.69444,
			0,
			0,
			.47222
		],
		64: [
			0,
			.69444,
			0,
			0,
			.66667
		],
		65: [
			0,
			.69444,
			0,
			0,
			.66667
		],
		66: [
			0,
			.69444,
			0,
			0,
			.66667
		],
		67: [
			0,
			.69444,
			0,
			0,
			.63889
		],
		68: [
			0,
			.69444,
			0,
			0,
			.72223
		],
		69: [
			0,
			.69444,
			0,
			0,
			.59722
		],
		70: [
			0,
			.69444,
			0,
			0,
			.56945
		],
		71: [
			0,
			.69444,
			0,
			0,
			.66667
		],
		72: [
			0,
			.69444,
			0,
			0,
			.70834
		],
		73: [
			0,
			.69444,
			0,
			0,
			.27778
		],
		74: [
			0,
			.69444,
			0,
			0,
			.47222
		],
		75: [
			0,
			.69444,
			0,
			0,
			.69445
		],
		76: [
			0,
			.69444,
			0,
			0,
			.54167
		],
		77: [
			0,
			.69444,
			0,
			0,
			.875
		],
		78: [
			0,
			.69444,
			0,
			0,
			.70834
		],
		79: [
			0,
			.69444,
			0,
			0,
			.73611
		],
		80: [
			0,
			.69444,
			0,
			0,
			.63889
		],
		81: [
			.125,
			.69444,
			0,
			0,
			.73611
		],
		82: [
			0,
			.69444,
			0,
			0,
			.64584
		],
		83: [
			0,
			.69444,
			0,
			0,
			.55556
		],
		84: [
			0,
			.69444,
			0,
			0,
			.68056
		],
		85: [
			0,
			.69444,
			0,
			0,
			.6875
		],
		86: [
			0,
			.69444,
			.01389,
			0,
			.66667
		],
		87: [
			0,
			.69444,
			.01389,
			0,
			.94445
		],
		88: [
			0,
			.69444,
			0,
			0,
			.66667
		],
		89: [
			0,
			.69444,
			.025,
			0,
			.66667
		],
		90: [
			0,
			.69444,
			0,
			0,
			.61111
		],
		91: [
			.25,
			.75,
			0,
			0,
			.28889
		],
		93: [
			.25,
			.75,
			0,
			0,
			.28889
		],
		94: [
			0,
			.69444,
			0,
			0,
			.5
		],
		95: [
			.35,
			.09444,
			.02778,
			0,
			.5
		],
		97: [
			0,
			.44444,
			0,
			0,
			.48056
		],
		98: [
			0,
			.69444,
			0,
			0,
			.51667
		],
		99: [
			0,
			.44444,
			0,
			0,
			.44445
		],
		100: [
			0,
			.69444,
			0,
			0,
			.51667
		],
		101: [
			0,
			.44444,
			0,
			0,
			.44445
		],
		102: [
			0,
			.69444,
			.06944,
			0,
			.30556
		],
		103: [
			.19444,
			.44444,
			.01389,
			0,
			.5
		],
		104: [
			0,
			.69444,
			0,
			0,
			.51667
		],
		105: [
			0,
			.67937,
			0,
			0,
			.23889
		],
		106: [
			.19444,
			.67937,
			0,
			0,
			.26667
		],
		107: [
			0,
			.69444,
			0,
			0,
			.48889
		],
		108: [
			0,
			.69444,
			0,
			0,
			.23889
		],
		109: [
			0,
			.44444,
			0,
			0,
			.79445
		],
		110: [
			0,
			.44444,
			0,
			0,
			.51667
		],
		111: [
			0,
			.44444,
			0,
			0,
			.5
		],
		112: [
			.19444,
			.44444,
			0,
			0,
			.51667
		],
		113: [
			.19444,
			.44444,
			0,
			0,
			.51667
		],
		114: [
			0,
			.44444,
			.01389,
			0,
			.34167
		],
		115: [
			0,
			.44444,
			0,
			0,
			.38333
		],
		116: [
			0,
			.57143,
			0,
			0,
			.36111
		],
		117: [
			0,
			.44444,
			0,
			0,
			.51667
		],
		118: [
			0,
			.44444,
			.01389,
			0,
			.46111
		],
		119: [
			0,
			.44444,
			.01389,
			0,
			.68334
		],
		120: [
			0,
			.44444,
			0,
			0,
			.46111
		],
		121: [
			.19444,
			.44444,
			.01389,
			0,
			.46111
		],
		122: [
			0,
			.44444,
			0,
			0,
			.43472
		],
		126: [
			.35,
			.32659,
			0,
			0,
			.5
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		168: [
			0,
			.67937,
			0,
			0,
			.5
		],
		176: [
			0,
			.69444,
			0,
			0,
			.66667
		],
		184: [
			.17014,
			0,
			0,
			0,
			.44445
		],
		305: [
			0,
			.44444,
			0,
			0,
			.23889
		],
		567: [
			.19444,
			.44444,
			0,
			0,
			.26667
		],
		710: [
			0,
			.69444,
			0,
			0,
			.5
		],
		711: [
			0,
			.63194,
			0,
			0,
			.5
		],
		713: [
			0,
			.60889,
			0,
			0,
			.5
		],
		714: [
			0,
			.69444,
			0,
			0,
			.5
		],
		715: [
			0,
			.69444,
			0,
			0,
			.5
		],
		728: [
			0,
			.69444,
			0,
			0,
			.5
		],
		729: [
			0,
			.67937,
			0,
			0,
			.27778
		],
		730: [
			0,
			.69444,
			0,
			0,
			.66667
		],
		732: [
			0,
			.67659,
			0,
			0,
			.5
		],
		733: [
			0,
			.69444,
			0,
			0,
			.5
		],
		915: [
			0,
			.69444,
			0,
			0,
			.54167
		],
		916: [
			0,
			.69444,
			0,
			0,
			.83334
		],
		920: [
			0,
			.69444,
			0,
			0,
			.77778
		],
		923: [
			0,
			.69444,
			0,
			0,
			.61111
		],
		926: [
			0,
			.69444,
			0,
			0,
			.66667
		],
		928: [
			0,
			.69444,
			0,
			0,
			.70834
		],
		931: [
			0,
			.69444,
			0,
			0,
			.72222
		],
		933: [
			0,
			.69444,
			0,
			0,
			.77778
		],
		934: [
			0,
			.69444,
			0,
			0,
			.72222
		],
		936: [
			0,
			.69444,
			0,
			0,
			.77778
		],
		937: [
			0,
			.69444,
			0,
			0,
			.72222
		],
		8211: [
			0,
			.44444,
			.02778,
			0,
			.5
		],
		8212: [
			0,
			.44444,
			.02778,
			0,
			1
		],
		8216: [
			0,
			.69444,
			0,
			0,
			.27778
		],
		8217: [
			0,
			.69444,
			0,
			0,
			.27778
		],
		8220: [
			0,
			.69444,
			0,
			0,
			.5
		],
		8221: [
			0,
			.69444,
			0,
			0,
			.5
		]
	},
	"Script-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		65: [
			0,
			.7,
			.22925,
			0,
			.80253
		],
		66: [
			0,
			.7,
			.04087,
			0,
			.90757
		],
		67: [
			0,
			.7,
			.1689,
			0,
			.66619
		],
		68: [
			0,
			.7,
			.09371,
			0,
			.77443
		],
		69: [
			0,
			.7,
			.18583,
			0,
			.56162
		],
		70: [
			0,
			.7,
			.13634,
			0,
			.89544
		],
		71: [
			0,
			.7,
			.17322,
			0,
			.60961
		],
		72: [
			0,
			.7,
			.29694,
			0,
			.96919
		],
		73: [
			0,
			.7,
			.19189,
			0,
			.80907
		],
		74: [
			.27778,
			.7,
			.19189,
			0,
			1.05159
		],
		75: [
			0,
			.7,
			.31259,
			0,
			.91364
		],
		76: [
			0,
			.7,
			.19189,
			0,
			.87373
		],
		77: [
			0,
			.7,
			.15981,
			0,
			1.08031
		],
		78: [
			0,
			.7,
			.3525,
			0,
			.9015
		],
		79: [
			0,
			.7,
			.08078,
			0,
			.73787
		],
		80: [
			0,
			.7,
			.08078,
			0,
			1.01262
		],
		81: [
			0,
			.7,
			.03305,
			0,
			.88282
		],
		82: [
			0,
			.7,
			.06259,
			0,
			.85
		],
		83: [
			0,
			.7,
			.19189,
			0,
			.86767
		],
		84: [
			0,
			.7,
			.29087,
			0,
			.74697
		],
		85: [
			0,
			.7,
			.25815,
			0,
			.79996
		],
		86: [
			0,
			.7,
			.27523,
			0,
			.62204
		],
		87: [
			0,
			.7,
			.27523,
			0,
			.80532
		],
		88: [
			0,
			.7,
			.26006,
			0,
			.94445
		],
		89: [
			0,
			.7,
			.2939,
			0,
			.70961
		],
		90: [
			0,
			.7,
			.24037,
			0,
			.8212
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		]
	},
	"Size1-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		40: [
			.35001,
			.85,
			0,
			0,
			.45834
		],
		41: [
			.35001,
			.85,
			0,
			0,
			.45834
		],
		47: [
			.35001,
			.85,
			0,
			0,
			.57778
		],
		91: [
			.35001,
			.85,
			0,
			0,
			.41667
		],
		92: [
			.35001,
			.85,
			0,
			0,
			.57778
		],
		93: [
			.35001,
			.85,
			0,
			0,
			.41667
		],
		123: [
			.35001,
			.85,
			0,
			0,
			.58334
		],
		125: [
			.35001,
			.85,
			0,
			0,
			.58334
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		710: [
			0,
			.72222,
			0,
			0,
			.55556
		],
		732: [
			0,
			.72222,
			0,
			0,
			.55556
		],
		770: [
			0,
			.72222,
			0,
			0,
			.55556
		],
		771: [
			0,
			.72222,
			0,
			0,
			.55556
		],
		8214: [
			-99e-5,
			.601,
			0,
			0,
			.77778
		],
		8593: [
			1e-5,
			.6,
			0,
			0,
			.66667
		],
		8595: [
			1e-5,
			.6,
			0,
			0,
			.66667
		],
		8657: [
			1e-5,
			.6,
			0,
			0,
			.77778
		],
		8659: [
			1e-5,
			.6,
			0,
			0,
			.77778
		],
		8719: [
			.25001,
			.75,
			0,
			0,
			.94445
		],
		8720: [
			.25001,
			.75,
			0,
			0,
			.94445
		],
		8721: [
			.25001,
			.75,
			0,
			0,
			1.05556
		],
		8730: [
			.35001,
			.85,
			0,
			0,
			1
		],
		8739: [
			-.00599,
			.606,
			0,
			0,
			.33333
		],
		8741: [
			-.00599,
			.606,
			0,
			0,
			.55556
		],
		8747: [
			.30612,
			.805,
			.19445,
			0,
			.47222
		],
		8748: [
			.306,
			.805,
			.19445,
			0,
			.47222
		],
		8749: [
			.306,
			.805,
			.19445,
			0,
			.47222
		],
		8750: [
			.30612,
			.805,
			.19445,
			0,
			.47222
		],
		8896: [
			.25001,
			.75,
			0,
			0,
			.83334
		],
		8897: [
			.25001,
			.75,
			0,
			0,
			.83334
		],
		8898: [
			.25001,
			.75,
			0,
			0,
			.83334
		],
		8899: [
			.25001,
			.75,
			0,
			0,
			.83334
		],
		8968: [
			.35001,
			.85,
			0,
			0,
			.47222
		],
		8969: [
			.35001,
			.85,
			0,
			0,
			.47222
		],
		8970: [
			.35001,
			.85,
			0,
			0,
			.47222
		],
		8971: [
			.35001,
			.85,
			0,
			0,
			.47222
		],
		9168: [
			-99e-5,
			.601,
			0,
			0,
			.66667
		],
		10216: [
			.35001,
			.85,
			0,
			0,
			.47222
		],
		10217: [
			.35001,
			.85,
			0,
			0,
			.47222
		],
		10752: [
			.25001,
			.75,
			0,
			0,
			1.11111
		],
		10753: [
			.25001,
			.75,
			0,
			0,
			1.11111
		],
		10754: [
			.25001,
			.75,
			0,
			0,
			1.11111
		],
		10756: [
			.25001,
			.75,
			0,
			0,
			.83334
		],
		10758: [
			.25001,
			.75,
			0,
			0,
			.83334
		]
	},
	"Size2-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		40: [
			.65002,
			1.15,
			0,
			0,
			.59722
		],
		41: [
			.65002,
			1.15,
			0,
			0,
			.59722
		],
		47: [
			.65002,
			1.15,
			0,
			0,
			.81111
		],
		91: [
			.65002,
			1.15,
			0,
			0,
			.47222
		],
		92: [
			.65002,
			1.15,
			0,
			0,
			.81111
		],
		93: [
			.65002,
			1.15,
			0,
			0,
			.47222
		],
		123: [
			.65002,
			1.15,
			0,
			0,
			.66667
		],
		125: [
			.65002,
			1.15,
			0,
			0,
			.66667
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		710: [
			0,
			.75,
			0,
			0,
			1
		],
		732: [
			0,
			.75,
			0,
			0,
			1
		],
		770: [
			0,
			.75,
			0,
			0,
			1
		],
		771: [
			0,
			.75,
			0,
			0,
			1
		],
		8719: [
			.55001,
			1.05,
			0,
			0,
			1.27778
		],
		8720: [
			.55001,
			1.05,
			0,
			0,
			1.27778
		],
		8721: [
			.55001,
			1.05,
			0,
			0,
			1.44445
		],
		8730: [
			.65002,
			1.15,
			0,
			0,
			1
		],
		8747: [
			.86225,
			1.36,
			.44445,
			0,
			.55556
		],
		8748: [
			.862,
			1.36,
			.44445,
			0,
			.55556
		],
		8749: [
			.862,
			1.36,
			.44445,
			0,
			.55556
		],
		8750: [
			.86225,
			1.36,
			.44445,
			0,
			.55556
		],
		8896: [
			.55001,
			1.05,
			0,
			0,
			1.11111
		],
		8897: [
			.55001,
			1.05,
			0,
			0,
			1.11111
		],
		8898: [
			.55001,
			1.05,
			0,
			0,
			1.11111
		],
		8899: [
			.55001,
			1.05,
			0,
			0,
			1.11111
		],
		8968: [
			.65002,
			1.15,
			0,
			0,
			.52778
		],
		8969: [
			.65002,
			1.15,
			0,
			0,
			.52778
		],
		8970: [
			.65002,
			1.15,
			0,
			0,
			.52778
		],
		8971: [
			.65002,
			1.15,
			0,
			0,
			.52778
		],
		10216: [
			.65002,
			1.15,
			0,
			0,
			.61111
		],
		10217: [
			.65002,
			1.15,
			0,
			0,
			.61111
		],
		10752: [
			.55001,
			1.05,
			0,
			0,
			1.51112
		],
		10753: [
			.55001,
			1.05,
			0,
			0,
			1.51112
		],
		10754: [
			.55001,
			1.05,
			0,
			0,
			1.51112
		],
		10756: [
			.55001,
			1.05,
			0,
			0,
			1.11111
		],
		10758: [
			.55001,
			1.05,
			0,
			0,
			1.11111
		]
	},
	"Size3-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		40: [
			.95003,
			1.45,
			0,
			0,
			.73611
		],
		41: [
			.95003,
			1.45,
			0,
			0,
			.73611
		],
		47: [
			.95003,
			1.45,
			0,
			0,
			1.04445
		],
		91: [
			.95003,
			1.45,
			0,
			0,
			.52778
		],
		92: [
			.95003,
			1.45,
			0,
			0,
			1.04445
		],
		93: [
			.95003,
			1.45,
			0,
			0,
			.52778
		],
		123: [
			.95003,
			1.45,
			0,
			0,
			.75
		],
		125: [
			.95003,
			1.45,
			0,
			0,
			.75
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		710: [
			0,
			.75,
			0,
			0,
			1.44445
		],
		732: [
			0,
			.75,
			0,
			0,
			1.44445
		],
		770: [
			0,
			.75,
			0,
			0,
			1.44445
		],
		771: [
			0,
			.75,
			0,
			0,
			1.44445
		],
		8730: [
			.95003,
			1.45,
			0,
			0,
			1
		],
		8968: [
			.95003,
			1.45,
			0,
			0,
			.58334
		],
		8969: [
			.95003,
			1.45,
			0,
			0,
			.58334
		],
		8970: [
			.95003,
			1.45,
			0,
			0,
			.58334
		],
		8971: [
			.95003,
			1.45,
			0,
			0,
			.58334
		],
		10216: [
			.95003,
			1.45,
			0,
			0,
			.75
		],
		10217: [
			.95003,
			1.45,
			0,
			0,
			.75
		]
	},
	"Size4-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.25
		],
		40: [
			1.25003,
			1.75,
			0,
			0,
			.79167
		],
		41: [
			1.25003,
			1.75,
			0,
			0,
			.79167
		],
		47: [
			1.25003,
			1.75,
			0,
			0,
			1.27778
		],
		91: [
			1.25003,
			1.75,
			0,
			0,
			.58334
		],
		92: [
			1.25003,
			1.75,
			0,
			0,
			1.27778
		],
		93: [
			1.25003,
			1.75,
			0,
			0,
			.58334
		],
		123: [
			1.25003,
			1.75,
			0,
			0,
			.80556
		],
		125: [
			1.25003,
			1.75,
			0,
			0,
			.80556
		],
		160: [
			0,
			0,
			0,
			0,
			.25
		],
		710: [
			0,
			.825,
			0,
			0,
			1.8889
		],
		732: [
			0,
			.825,
			0,
			0,
			1.8889
		],
		770: [
			0,
			.825,
			0,
			0,
			1.8889
		],
		771: [
			0,
			.825,
			0,
			0,
			1.8889
		],
		8730: [
			1.25003,
			1.75,
			0,
			0,
			1
		],
		8968: [
			1.25003,
			1.75,
			0,
			0,
			.63889
		],
		8969: [
			1.25003,
			1.75,
			0,
			0,
			.63889
		],
		8970: [
			1.25003,
			1.75,
			0,
			0,
			.63889
		],
		8971: [
			1.25003,
			1.75,
			0,
			0,
			.63889
		],
		9115: [
			.64502,
			1.155,
			0,
			0,
			.875
		],
		9116: [
			1e-5,
			.6,
			0,
			0,
			.875
		],
		9117: [
			.64502,
			1.155,
			0,
			0,
			.875
		],
		9118: [
			.64502,
			1.155,
			0,
			0,
			.875
		],
		9119: [
			1e-5,
			.6,
			0,
			0,
			.875
		],
		9120: [
			.64502,
			1.155,
			0,
			0,
			.875
		],
		9121: [
			.64502,
			1.155,
			0,
			0,
			.66667
		],
		9122: [
			-99e-5,
			.601,
			0,
			0,
			.66667
		],
		9123: [
			.64502,
			1.155,
			0,
			0,
			.66667
		],
		9124: [
			.64502,
			1.155,
			0,
			0,
			.66667
		],
		9125: [
			-99e-5,
			.601,
			0,
			0,
			.66667
		],
		9126: [
			.64502,
			1.155,
			0,
			0,
			.66667
		],
		9127: [
			1e-5,
			.9,
			0,
			0,
			.88889
		],
		9128: [
			.65002,
			1.15,
			0,
			0,
			.88889
		],
		9129: [
			.90001,
			0,
			0,
			0,
			.88889
		],
		9130: [
			0,
			.3,
			0,
			0,
			.88889
		],
		9131: [
			1e-5,
			.9,
			0,
			0,
			.88889
		],
		9132: [
			.65002,
			1.15,
			0,
			0,
			.88889
		],
		9133: [
			.90001,
			0,
			0,
			0,
			.88889
		],
		9143: [
			.88502,
			.915,
			0,
			0,
			1.05556
		],
		10216: [
			1.25003,
			1.75,
			0,
			0,
			.80556
		],
		10217: [
			1.25003,
			1.75,
			0,
			0,
			.80556
		],
		57344: [
			-.00499,
			.605,
			0,
			0,
			1.05556
		],
		57345: [
			-.00499,
			.605,
			0,
			0,
			1.05556
		],
		57680: [
			0,
			.12,
			0,
			0,
			.45
		],
		57681: [
			0,
			.12,
			0,
			0,
			.45
		],
		57682: [
			0,
			.12,
			0,
			0,
			.45
		],
		57683: [
			0,
			.12,
			0,
			0,
			.45
		]
	},
	"Typewriter-Regular": {
		32: [
			0,
			0,
			0,
			0,
			.525
		],
		33: [
			0,
			.61111,
			0,
			0,
			.525
		],
		34: [
			0,
			.61111,
			0,
			0,
			.525
		],
		35: [
			0,
			.61111,
			0,
			0,
			.525
		],
		36: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		37: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		38: [
			0,
			.61111,
			0,
			0,
			.525
		],
		39: [
			0,
			.61111,
			0,
			0,
			.525
		],
		40: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		41: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		42: [
			0,
			.52083,
			0,
			0,
			.525
		],
		43: [
			-.08056,
			.53055,
			0,
			0,
			.525
		],
		44: [
			.13889,
			.125,
			0,
			0,
			.525
		],
		45: [
			-.08056,
			.53055,
			0,
			0,
			.525
		],
		46: [
			0,
			.125,
			0,
			0,
			.525
		],
		47: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		48: [
			0,
			.61111,
			0,
			0,
			.525
		],
		49: [
			0,
			.61111,
			0,
			0,
			.525
		],
		50: [
			0,
			.61111,
			0,
			0,
			.525
		],
		51: [
			0,
			.61111,
			0,
			0,
			.525
		],
		52: [
			0,
			.61111,
			0,
			0,
			.525
		],
		53: [
			0,
			.61111,
			0,
			0,
			.525
		],
		54: [
			0,
			.61111,
			0,
			0,
			.525
		],
		55: [
			0,
			.61111,
			0,
			0,
			.525
		],
		56: [
			0,
			.61111,
			0,
			0,
			.525
		],
		57: [
			0,
			.61111,
			0,
			0,
			.525
		],
		58: [
			0,
			.43056,
			0,
			0,
			.525
		],
		59: [
			.13889,
			.43056,
			0,
			0,
			.525
		],
		60: [
			-.05556,
			.55556,
			0,
			0,
			.525
		],
		61: [
			-.19549,
			.41562,
			0,
			0,
			.525
		],
		62: [
			-.05556,
			.55556,
			0,
			0,
			.525
		],
		63: [
			0,
			.61111,
			0,
			0,
			.525
		],
		64: [
			0,
			.61111,
			0,
			0,
			.525
		],
		65: [
			0,
			.61111,
			0,
			0,
			.525
		],
		66: [
			0,
			.61111,
			0,
			0,
			.525
		],
		67: [
			0,
			.61111,
			0,
			0,
			.525
		],
		68: [
			0,
			.61111,
			0,
			0,
			.525
		],
		69: [
			0,
			.61111,
			0,
			0,
			.525
		],
		70: [
			0,
			.61111,
			0,
			0,
			.525
		],
		71: [
			0,
			.61111,
			0,
			0,
			.525
		],
		72: [
			0,
			.61111,
			0,
			0,
			.525
		],
		73: [
			0,
			.61111,
			0,
			0,
			.525
		],
		74: [
			0,
			.61111,
			0,
			0,
			.525
		],
		75: [
			0,
			.61111,
			0,
			0,
			.525
		],
		76: [
			0,
			.61111,
			0,
			0,
			.525
		],
		77: [
			0,
			.61111,
			0,
			0,
			.525
		],
		78: [
			0,
			.61111,
			0,
			0,
			.525
		],
		79: [
			0,
			.61111,
			0,
			0,
			.525
		],
		80: [
			0,
			.61111,
			0,
			0,
			.525
		],
		81: [
			.13889,
			.61111,
			0,
			0,
			.525
		],
		82: [
			0,
			.61111,
			0,
			0,
			.525
		],
		83: [
			0,
			.61111,
			0,
			0,
			.525
		],
		84: [
			0,
			.61111,
			0,
			0,
			.525
		],
		85: [
			0,
			.61111,
			0,
			0,
			.525
		],
		86: [
			0,
			.61111,
			0,
			0,
			.525
		],
		87: [
			0,
			.61111,
			0,
			0,
			.525
		],
		88: [
			0,
			.61111,
			0,
			0,
			.525
		],
		89: [
			0,
			.61111,
			0,
			0,
			.525
		],
		90: [
			0,
			.61111,
			0,
			0,
			.525
		],
		91: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		92: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		93: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		94: [
			0,
			.61111,
			0,
			0,
			.525
		],
		95: [
			.09514,
			0,
			0,
			0,
			.525
		],
		96: [
			0,
			.61111,
			0,
			0,
			.525
		],
		97: [
			0,
			.43056,
			0,
			0,
			.525
		],
		98: [
			0,
			.61111,
			0,
			0,
			.525
		],
		99: [
			0,
			.43056,
			0,
			0,
			.525
		],
		100: [
			0,
			.61111,
			0,
			0,
			.525
		],
		101: [
			0,
			.43056,
			0,
			0,
			.525
		],
		102: [
			0,
			.61111,
			0,
			0,
			.525
		],
		103: [
			.22222,
			.43056,
			0,
			0,
			.525
		],
		104: [
			0,
			.61111,
			0,
			0,
			.525
		],
		105: [
			0,
			.61111,
			0,
			0,
			.525
		],
		106: [
			.22222,
			.61111,
			0,
			0,
			.525
		],
		107: [
			0,
			.61111,
			0,
			0,
			.525
		],
		108: [
			0,
			.61111,
			0,
			0,
			.525
		],
		109: [
			0,
			.43056,
			0,
			0,
			.525
		],
		110: [
			0,
			.43056,
			0,
			0,
			.525
		],
		111: [
			0,
			.43056,
			0,
			0,
			.525
		],
		112: [
			.22222,
			.43056,
			0,
			0,
			.525
		],
		113: [
			.22222,
			.43056,
			0,
			0,
			.525
		],
		114: [
			0,
			.43056,
			0,
			0,
			.525
		],
		115: [
			0,
			.43056,
			0,
			0,
			.525
		],
		116: [
			0,
			.55358,
			0,
			0,
			.525
		],
		117: [
			0,
			.43056,
			0,
			0,
			.525
		],
		118: [
			0,
			.43056,
			0,
			0,
			.525
		],
		119: [
			0,
			.43056,
			0,
			0,
			.525
		],
		120: [
			0,
			.43056,
			0,
			0,
			.525
		],
		121: [
			.22222,
			.43056,
			0,
			0,
			.525
		],
		122: [
			0,
			.43056,
			0,
			0,
			.525
		],
		123: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		124: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		125: [
			.08333,
			.69444,
			0,
			0,
			.525
		],
		126: [
			0,
			.61111,
			0,
			0,
			.525
		],
		127: [
			0,
			.61111,
			0,
			0,
			.525
		],
		160: [
			0,
			0,
			0,
			0,
			.525
		],
		176: [
			0,
			.61111,
			0,
			0,
			.525
		],
		184: [
			.19445,
			0,
			0,
			0,
			.525
		],
		305: [
			0,
			.43056,
			0,
			0,
			.525
		],
		567: [
			.22222,
			.43056,
			0,
			0,
			.525
		],
		711: [
			0,
			.56597,
			0,
			0,
			.525
		],
		713: [
			0,
			.56555,
			0,
			0,
			.525
		],
		714: [
			0,
			.61111,
			0,
			0,
			.525
		],
		715: [
			0,
			.61111,
			0,
			0,
			.525
		],
		728: [
			0,
			.61111,
			0,
			0,
			.525
		],
		730: [
			0,
			.61111,
			0,
			0,
			.525
		],
		770: [
			0,
			.61111,
			0,
			0,
			.525
		],
		771: [
			0,
			.61111,
			0,
			0,
			.525
		],
		776: [
			0,
			.61111,
			0,
			0,
			.525
		],
		915: [
			0,
			.61111,
			0,
			0,
			.525
		],
		916: [
			0,
			.61111,
			0,
			0,
			.525
		],
		920: [
			0,
			.61111,
			0,
			0,
			.525
		],
		923: [
			0,
			.61111,
			0,
			0,
			.525
		],
		926: [
			0,
			.61111,
			0,
			0,
			.525
		],
		928: [
			0,
			.61111,
			0,
			0,
			.525
		],
		931: [
			0,
			.61111,
			0,
			0,
			.525
		],
		933: [
			0,
			.61111,
			0,
			0,
			.525
		],
		934: [
			0,
			.61111,
			0,
			0,
			.525
		],
		936: [
			0,
			.61111,
			0,
			0,
			.525
		],
		937: [
			0,
			.61111,
			0,
			0,
			.525
		],
		8216: [
			0,
			.61111,
			0,
			0,
			.525
		],
		8217: [
			0,
			.61111,
			0,
			0,
			.525
		],
		8242: [
			0,
			.61111,
			0,
			0,
			.525
		],
		9251: [
			.11111,
			.21944,
			0,
			0,
			.525
		]
	}
}, _ = {
	slant: [
		.25,
		.25,
		.25
	],
	space: [
		0,
		0,
		0
	],
	stretch: [
		0,
		0,
		0
	],
	shrink: [
		0,
		0,
		0
	],
	xHeight: [
		.431,
		.431,
		.431
	],
	quad: [
		1,
		1.171,
		1.472
	],
	extraSpace: [
		0,
		0,
		0
	],
	num1: [
		.677,
		.732,
		.925
	],
	num2: [
		.394,
		.384,
		.387
	],
	num3: [
		.444,
		.471,
		.504
	],
	denom1: [
		.686,
		.752,
		1.025
	],
	denom2: [
		.345,
		.344,
		.532
	],
	sup1: [
		.413,
		.503,
		.504
	],
	sup2: [
		.363,
		.431,
		.404
	],
	sup3: [
		.289,
		.286,
		.294
	],
	sub1: [
		.15,
		.143,
		.2
	],
	sub2: [
		.247,
		.286,
		.4
	],
	supDrop: [
		.386,
		.353,
		.494
	],
	subDrop: [
		.05,
		.071,
		.1
	],
	delim1: [
		2.39,
		1.7,
		1.98
	],
	delim2: [
		1.01,
		1.157,
		1.42
	],
	axisHeight: [
		.25,
		.25,
		.25
	],
	defaultRuleThickness: [
		.04,
		.049,
		.049
	],
	bigOpSpacing1: [
		.111,
		.111,
		.111
	],
	bigOpSpacing2: [
		.166,
		.166,
		.166
	],
	bigOpSpacing3: [
		.2,
		.2,
		.2
	],
	bigOpSpacing4: [
		.6,
		.611,
		.611
	],
	bigOpSpacing5: [
		.1,
		.143,
		.143
	],
	sqrtRuleThickness: [
		.04,
		.04,
		.04
	],
	ptPerEm: [
		10,
		10,
		10
	],
	doubleRuleSep: [
		.2,
		.2,
		.2
	],
	arrayRuleWidth: [
		.04,
		.04,
		.04
	],
	fboxsep: [
		.3,
		.3,
		.3
	],
	fboxrule: [
		.04,
		.04,
		.04
	]
}, Y = {
	Å: "A",
	Ð: "D",
	Þ: "o",
	å: "a",
	ð: "d",
	þ: "o",
	А: "A",
	Б: "B",
	В: "B",
	Г: "F",
	Д: "A",
	Е: "E",
	Ж: "K",
	З: "3",
	И: "N",
	Й: "N",
	К: "K",
	Л: "N",
	М: "M",
	Н: "H",
	О: "O",
	П: "N",
	Р: "P",
	С: "C",
	Т: "T",
	У: "y",
	Ф: "O",
	Х: "X",
	Ц: "U",
	Ч: "h",
	Ш: "W",
	Щ: "W",
	Ъ: "B",
	Ы: "X",
	Ь: "B",
	Э: "3",
	Ю: "X",
	Я: "R",
	а: "a",
	б: "b",
	в: "a",
	г: "r",
	д: "y",
	е: "e",
	ж: "m",
	з: "e",
	и: "n",
	й: "n",
	к: "n",
	л: "n",
	м: "m",
	н: "n",
	о: "o",
	п: "n",
	р: "p",
	с: "c",
	т: "o",
	у: "y",
	ф: "b",
	х: "x",
	ц: "n",
	ч: "n",
	ш: "w",
	щ: "w",
	ъ: "a",
	ы: "m",
	ь: "a",
	э: "e",
	ю: "m",
	я: "r"
};
function W(e, t) {
	U[e] = t;
}
function X(e, t, r) {
	if (!U[t]) throw Error("Font metrics not found for font: " + t + ".");
	var a = e.charCodeAt(0), i = U[t][a];
	if (!i && e[0] in Y && (a = Y[e[0]].charCodeAt(0), i = U[t][a]), !i && "text" === r && C(a) && (i = U[t][77]), i) return {
		depth: i[0],
		height: i[1],
		italic: i[2],
		skew: i[3],
		width: i[4]
	};
}
e(W, "setFontMetrics"), e(X, "getCharacterMetrics");
var $ = {};
function j(e) {
	var t;
	if (!$[t = e >= 5 ? 0 : e >= 3 ? 1 : 2]) {
		var r = $[t] = { cssEmPerMu: _.quad[t] / 18 };
		for (var a in _) _.hasOwnProperty(a) && (r[a] = _[a][t]);
	}
	return $[t];
}
e(j, "getGlobalMetrics");
var Z = [
	[
		1,
		1,
		1
	],
	[
		2,
		1,
		1
	],
	[
		3,
		1,
		1
	],
	[
		4,
		2,
		1
	],
	[
		5,
		2,
		1
	],
	[
		6,
		3,
		1
	],
	[
		7,
		4,
		2
	],
	[
		8,
		6,
		3
	],
	[
		9,
		7,
		6
	],
	[
		10,
		8,
		7
	],
	[
		11,
		10,
		9
	]
], K = [
	.5,
	.6,
	.7,
	.8,
	.9,
	1,
	1.2,
	1.44,
	1.728,
	2.074,
	2.488
], J = e(function(e, t) {
	return t.size < 2 ? e : Z[e - 1][t.size - 1];
}, "sizeAtStyle"), Q = class t {
	static {
		e(this, "Options");
	}
	constructor(e) {
		this.style = void 0, this.color = void 0, this.size = void 0, this.textSize = void 0, this.phantom = void 0, this.font = void 0, this.fontFamily = void 0, this.fontWeight = void 0, this.fontShape = void 0, this.sizeMultiplier = void 0, this.maxSize = void 0, this.minRuleThickness = void 0, this._fontMetrics = void 0, this.style = e.style, this.color = e.color, this.size = e.size || t.BASESIZE, this.textSize = e.textSize || this.size, this.phantom = !!e.phantom, this.font = e.font || "", this.fontFamily = e.fontFamily || "", this.fontWeight = e.fontWeight || "", this.fontShape = e.fontShape || "", this.sizeMultiplier = K[this.size - 1], this.maxSize = e.maxSize, this.minRuleThickness = e.minRuleThickness, this._fontMetrics = void 0;
	}
	extend(e) {
		var r = {
			style: this.style,
			size: this.size,
			textSize: this.textSize,
			color: this.color,
			phantom: this.phantom,
			font: this.font,
			fontFamily: this.fontFamily,
			fontWeight: this.fontWeight,
			fontShape: this.fontShape,
			maxSize: this.maxSize,
			minRuleThickness: this.minRuleThickness
		};
		for (var a in e) e.hasOwnProperty(a) && (r[a] = e[a]);
		return new t(r);
	}
	havingStyle(e) {
		return this.style === e ? this : this.extend({
			style: e,
			size: J(this.textSize, e)
		});
	}
	havingCrampedStyle() {
		return this.havingStyle(this.style.cramp());
	}
	havingSize(e) {
		return this.size === e && this.textSize === e ? this : this.extend({
			style: this.style.text(),
			size: e,
			textSize: e,
			sizeMultiplier: K[e - 1]
		});
	}
	havingBaseStyle(e) {
		e = e || this.style.text();
		var r = J(t.BASESIZE, e);
		return this.size === r && this.textSize === t.BASESIZE && this.style === e ? this : this.extend({
			style: e,
			size: r
		});
	}
	havingBaseSizing() {
		var e;
		switch (this.style.id) {
			case 4:
			case 5:
				e = 3;
				break;
			case 6:
			case 7:
				e = 1;
				break;
			default: e = 6;
		}
		return this.extend({
			style: this.style.text(),
			size: e
		});
	}
	withColor(e) {
		return this.extend({ color: e });
	}
	withPhantom() {
		return this.extend({ phantom: !0 });
	}
	withFont(e) {
		return this.extend({ font: e });
	}
	withTextFontFamily(e) {
		return this.extend({
			fontFamily: e,
			font: ""
		});
	}
	withTextFontWeight(e) {
		return this.extend({
			fontWeight: e,
			font: ""
		});
	}
	withTextFontShape(e) {
		return this.extend({
			fontShape: e,
			font: ""
		});
	}
	sizingClasses(e) {
		return e.size !== this.size ? [
			"sizing",
			"reset-size" + e.size,
			"size" + this.size
		] : [];
	}
	baseSizingClasses() {
		return this.size !== t.BASESIZE ? [
			"sizing",
			"reset-size" + this.size,
			"size" + t.BASESIZE
		] : [];
	}
	fontMetrics() {
		return this._fontMetrics || (this._fontMetrics = j(this.size)), this._fontMetrics;
	}
	getColor() {
		return this.phantom ? "transparent" : this.color;
	}
};
Q.BASESIZE = 6;
var ee = {
	pt: 1,
	mm: 7227 / 2540,
	cm: 7227 / 254,
	in: 72.27,
	bp: 1.00375,
	pc: 12,
	dd: 1238 / 1157,
	cc: 14856 / 1157,
	nd: 685 / 642,
	nc: 1370 / 107,
	sp: 1 / 65536,
	px: 1.00375
}, et = {
	ex: !0,
	em: !0,
	mu: !0
}, er = e(function(e) {
	return "string" != typeof e && (e = e.unit), e in ee || e in et || "ex" === e;
}, "validUnit"), ea = e(function(e, t) {
	var r, i;
	if (e.unit in ee) r = ee[e.unit] / t.fontMetrics().ptPerEm / t.sizeMultiplier;
	else if ("mu" === e.unit) r = t.fontMetrics().cssEmPerMu;
	else {
		if (i = t.style.isTight() ? t.havingStyle(t.style.text()) : t, "ex" === e.unit) r = i.fontMetrics().xHeight;
		else if ("em" === e.unit) r = i.fontMetrics().quad;
		else throw new a("Invalid unit: '" + e.unit + "'");
		i !== t && (r *= i.sizeMultiplier / t.sizeMultiplier);
	}
	return Math.min(e.number * r, t.maxSize);
}, "calculateSize"), ei = e(function(e) {
	return +e.toFixed(4) + "em";
}, "makeEm"), en = e(function(e) {
	return e.filter((e) => e).join(" ");
}, "createClass"), es = e(function(e, t, r) {
	if (this.classes = e || [], this.attributes = {}, this.height = 0, this.depth = 0, this.maxFontSize = 0, this.style = r || {}, t) {
		t.style.isTight() && this.classes.push("mtight");
		var a = t.getColor();
		a && (this.style.color = a);
	}
}, "initNode"), eo = e(function(e) {
	var t = document.createElement(e);
	for (var r in t.className = en(this.classes), this.style) this.style.hasOwnProperty(r) && (t.style[r] = this.style[r]);
	for (var a in this.attributes) this.attributes.hasOwnProperty(a) && t.setAttribute(a, this.attributes[a]);
	for (var i = 0; i < this.children.length; i++) t.appendChild(this.children[i].toNode());
	return t;
}, "toNode"), el = /[\s"'>/=\x00-\x1f]/, eh = e(function(e) {
	var t = "<" + e;
	this.classes.length && (t += " class=\"" + m(en(this.classes)) + "\"");
	var r = "";
	for (var i in this.style) this.style.hasOwnProperty(i) && (r += o(i) + ":" + this.style[i] + ";");
	for (var n in r && (t += " style=\"" + m(r) + "\""), this.attributes) if (this.attributes.hasOwnProperty(n)) {
		if (el.test(n)) throw new a("Invalid attribute name '" + n + "'");
		t += " " + n + "=\"" + m(this.attributes[n]) + "\"";
	}
	t += ">";
	for (var s = 0; s < this.children.length; s++) t += this.children[s].toMarkup();
	return t + ("</" + e) + ">";
}, "toMarkup"), em = class {
	static {
		e(this, "Span");
	}
	constructor(e, t, r, a) {
		this.children = void 0, this.attributes = void 0, this.classes = void 0, this.height = void 0, this.depth = void 0, this.width = void 0, this.maxFontSize = void 0, this.style = void 0, es.call(this, e, r, a), this.children = t || [];
	}
	setAttribute(e, t) {
		this.attributes[e] = t;
	}
	hasClass(e) {
		return i(this.classes, e);
	}
	toNode() {
		return eo.call(this, "span");
	}
	toMarkup() {
		return eh.call(this, "span");
	}
}, ec = class {
	static {
		e(this, "Anchor");
	}
	constructor(e, t, r, a) {
		this.children = void 0, this.attributes = void 0, this.classes = void 0, this.height = void 0, this.depth = void 0, this.maxFontSize = void 0, this.style = void 0, es.call(this, t, a), this.children = r || [], this.setAttribute("href", e);
	}
	setAttribute(e, t) {
		this.attributes[e] = t;
	}
	hasClass(e) {
		return i(this.classes, e);
	}
	toNode() {
		return eo.call(this, "a");
	}
	toMarkup() {
		return eh.call(this, "a");
	}
}, eu = class {
	static {
		e(this, "Img");
	}
	constructor(e, t, r) {
		this.src = void 0, this.alt = void 0, this.classes = void 0, this.height = void 0, this.depth = void 0, this.maxFontSize = void 0, this.style = void 0, this.alt = t, this.src = e, this.classes = ["mord"], this.style = r;
	}
	hasClass(e) {
		return i(this.classes, e);
	}
	toNode() {
		var e = document.createElement("img");
		for (var t in e.src = this.src, e.alt = this.alt, e.className = "mord", this.style) this.style.hasOwnProperty(t) && (e.style[t] = this.style[t]);
		return e;
	}
	toMarkup() {
		var e = "<img src=\"" + m(this.src) + "\" alt=\"" + m(this.alt) + "\"", t = "";
		for (var r in this.style) this.style.hasOwnProperty(r) && (t += o(r) + ":" + this.style[r] + ";");
		return t && (e += " style=\"" + m(t) + "\""), e += "'/>";
	}
}, ep = {
	î: "ı̂",
	ï: "ı̈",
	í: "ı́",
	ì: "ı̀"
}, ed = class {
	static {
		e(this, "SymbolNode");
	}
	constructor(e, t, r, a, i, n, s, o) {
		this.text = void 0, this.height = void 0, this.depth = void 0, this.italic = void 0, this.skew = void 0, this.width = void 0, this.maxFontSize = void 0, this.classes = void 0, this.style = void 0, this.text = e, this.height = t || 0, this.depth = r || 0, this.italic = a || 0, this.skew = i || 0, this.width = n || 0, this.classes = s || [], this.style = o || {}, this.maxFontSize = 0;
		var l = B(this.text.charCodeAt(0));
		l && this.classes.push(l + "_fallback"), /[îïíì]/.test(this.text) && (this.text = ep[this.text]);
	}
	hasClass(e) {
		return i(this.classes, e);
	}
	toNode() {
		var e = document.createTextNode(this.text), t = null;
		for (var r in this.italic > 0 && ((t = document.createElement("span")).style.marginRight = ei(this.italic)), this.classes.length > 0 && ((t = t || document.createElement("span")).className = en(this.classes)), this.style) this.style.hasOwnProperty(r) && ((t = t || document.createElement("span")).style[r] = this.style[r]);
		return t ? (t.appendChild(e), t) : e;
	}
	toMarkup() {
		var e = !1, t = "<span";
		this.classes.length && (e = !0, t += " class=\"", t += m(en(this.classes)), t += "\"");
		var r = "";
		for (var a in this.italic > 0 && (r += "margin-right:" + this.italic + "em;"), this.style) this.style.hasOwnProperty(a) && (r += o(a) + ":" + this.style[a] + ";");
		r && (e = !0, t += " style=\"" + m(r) + "\"");
		var i = m(this.text);
		return e ? (t += ">", t += i, t += "</span>") : i;
	}
}, eg = class {
	static {
		e(this, "SvgNode");
	}
	constructor(e, t) {
		this.children = void 0, this.attributes = void 0, this.children = e || [], this.attributes = t || {};
	}
	toNode() {
		var e = document.createElementNS("http://www.w3.org/2000/svg", "svg");
		for (var t in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, t) && e.setAttribute(t, this.attributes[t]);
		for (var r = 0; r < this.children.length; r++) e.appendChild(this.children[r].toNode());
		return e;
	}
	toMarkup() {
		var e = "<svg xmlns=\"http://www.w3.org/2000/svg\"";
		for (var t in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, t) && (e += " " + t + "=\"" + m(this.attributes[t]) + "\"");
		e += ">";
		for (var r = 0; r < this.children.length; r++) e += this.children[r].toMarkup();
		return e + "</svg>";
	}
}, ef = class {
	static {
		e(this, "PathNode");
	}
	constructor(e, t) {
		this.pathName = void 0, this.alternate = void 0, this.pathName = e, this.alternate = t;
	}
	toNode() {
		var e = document.createElementNS("http://www.w3.org/2000/svg", "path");
		return this.alternate ? e.setAttribute("d", this.alternate) : e.setAttribute("d", F[this.pathName]), e;
	}
	toMarkup() {
		return this.alternate ? "<path d=\"" + m(this.alternate) + "\"/>" : "<path d=\"" + m(F[this.pathName]) + "\"/>";
	}
}, ev = class {
	static {
		e(this, "LineNode");
	}
	constructor(e) {
		this.attributes = void 0, this.attributes = e || {};
	}
	toNode() {
		var e = document.createElementNS("http://www.w3.org/2000/svg", "line");
		for (var t in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, t) && e.setAttribute(t, this.attributes[t]);
		return e;
	}
	toMarkup() {
		var e = "<line";
		for (var t in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, t) && (e += " " + t + "=\"" + m(this.attributes[t]) + "\"");
		return e + "/>";
	}
};
function eb(e) {
	if (e instanceof ed) return e;
	throw Error("Expected symbolNode but got " + String(e) + ".");
}
function ey(e) {
	if (e instanceof em) return e;
	throw Error("Expected span<HtmlDomNode> but got " + String(e) + ".");
}
e(eb, "assertSymbolDomNode"), e(ey, "assertSpan");
var ex = {
	bin: 1,
	close: 1,
	inner: 1,
	open: 1,
	punct: 1,
	rel: 1
}, ew = {
	"accent-token": 1,
	mathord: 1,
	"op-token": 1,
	spacing: 1,
	textord: 1
}, ek = {
	math: {},
	text: {}
};
function eS(e, t, r, a, i, n) {
	ek[e][i] = {
		font: t,
		group: r,
		replace: a
	}, n && a && (ek[e][a] = ek[e][i]);
}
e(eS, "defineSymbol");
var ez = "math", eM = "text", eA = "main", eT = "accent-token", eB = "close", eq = "inner", eC = "mathord", eI = "op-token", eH = "open", eR = "punct", eE = "spacing", eO = "textord";
eS(ez, eA, "rel", "≡", "\\equiv", !0), eS(ez, eA, "rel", "≺", "\\prec", !0), eS(ez, eA, "rel", "≻", "\\succ", !0), eS(ez, eA, "rel", "∼", "\\sim", !0), eS(ez, eA, "rel", "⊥", "\\perp"), eS(ez, eA, "rel", "⪯", "\\preceq", !0), eS(ez, eA, "rel", "⪰", "\\succeq", !0), eS(ez, eA, "rel", "≃", "\\simeq", !0), eS(ez, eA, "rel", "∣", "\\mid", !0), eS(ez, eA, "rel", "≪", "\\ll", !0), eS(ez, eA, "rel", "≫", "\\gg", !0), eS(ez, eA, "rel", "≍", "\\asymp", !0), eS(ez, eA, "rel", "∥", "\\parallel"), eS(ez, eA, "rel", "⋈", "\\bowtie", !0), eS(ez, eA, "rel", "⌣", "\\smile", !0), eS(ez, eA, "rel", "⊑", "\\sqsubseteq", !0), eS(ez, eA, "rel", "⊒", "\\sqsupseteq", !0), eS(ez, eA, "rel", "≐", "\\doteq", !0), eS(ez, eA, "rel", "⌢", "\\frown", !0), eS(ez, eA, "rel", "∋", "\\ni", !0), eS(ez, eA, "rel", "∝", "\\propto", !0), eS(ez, eA, "rel", "⊢", "\\vdash", !0), eS(ez, eA, "rel", "⊣", "\\dashv", !0), eS(ez, eA, "rel", "∋", "\\owns"), eS(ez, eA, eR, ".", "\\ldotp"), eS(ez, eA, eR, "⋅", "\\cdotp"), eS(ez, eA, eO, "#", "\\#"), eS(eM, eA, eO, "#", "\\#"), eS(ez, eA, eO, "&", "\\&"), eS(eM, eA, eO, "&", "\\&"), eS(ez, eA, eO, "ℵ", "\\aleph", !0), eS(ez, eA, eO, "∀", "\\forall", !0), eS(ez, eA, eO, "ℏ", "\\hbar", !0), eS(ez, eA, eO, "∃", "\\exists", !0), eS(ez, eA, eO, "∇", "\\nabla", !0), eS(ez, eA, eO, "♭", "\\flat", !0), eS(ez, eA, eO, "ℓ", "\\ell", !0), eS(ez, eA, eO, "♮", "\\natural", !0), eS(ez, eA, eO, "♣", "\\clubsuit", !0), eS(ez, eA, eO, "℘", "\\wp", !0), eS(ez, eA, eO, "♯", "\\sharp", !0), eS(ez, eA, eO, "♢", "\\diamondsuit", !0), eS(ez, eA, eO, "ℜ", "\\Re", !0), eS(ez, eA, eO, "♡", "\\heartsuit", !0), eS(ez, eA, eO, "ℑ", "\\Im", !0), eS(ez, eA, eO, "♠", "\\spadesuit", !0), eS(ez, eA, eO, "§", "\\S", !0), eS(eM, eA, eO, "§", "\\S"), eS(ez, eA, eO, "¶", "\\P", !0), eS(eM, eA, eO, "¶", "\\P"), eS(ez, eA, eO, "†", "\\dag"), eS(eM, eA, eO, "†", "\\dag"), eS(eM, eA, eO, "†", "\\textdagger"), eS(ez, eA, eO, "‡", "\\ddag"), eS(eM, eA, eO, "‡", "\\ddag"), eS(eM, eA, eO, "‡", "\\textdaggerdbl"), eS(ez, eA, eB, "⎱", "\\rmoustache", !0), eS(ez, eA, eH, "⎰", "\\lmoustache", !0), eS(ez, eA, eB, "⟯", "\\rgroup", !0), eS(ez, eA, eH, "⟮", "\\lgroup", !0), eS(ez, eA, "bin", "∓", "\\mp", !0), eS(ez, eA, "bin", "⊖", "\\ominus", !0), eS(ez, eA, "bin", "⊎", "\\uplus", !0), eS(ez, eA, "bin", "⊓", "\\sqcap", !0), eS(ez, eA, "bin", "∗", "\\ast"), eS(ez, eA, "bin", "⊔", "\\sqcup", !0), eS(ez, eA, "bin", "◯", "\\bigcirc", !0), eS(ez, eA, "bin", "∙", "\\bullet", !0), eS(ez, eA, "bin", "‡", "\\ddagger"), eS(ez, eA, "bin", "≀", "\\wr", !0), eS(ez, eA, "bin", "⨿", "\\amalg"), eS(ez, eA, "bin", "&", "\\And"), eS(ez, eA, "rel", "⟵", "\\longleftarrow", !0), eS(ez, eA, "rel", "⇐", "\\Leftarrow", !0), eS(ez, eA, "rel", "⟸", "\\Longleftarrow", !0), eS(ez, eA, "rel", "⟶", "\\longrightarrow", !0), eS(ez, eA, "rel", "⇒", "\\Rightarrow", !0), eS(ez, eA, "rel", "⟹", "\\Longrightarrow", !0), eS(ez, eA, "rel", "↔", "\\leftrightarrow", !0), eS(ez, eA, "rel", "⟷", "\\longleftrightarrow", !0), eS(ez, eA, "rel", "⇔", "\\Leftrightarrow", !0), eS(ez, eA, "rel", "⟺", "\\Longleftrightarrow", !0), eS(ez, eA, "rel", "↦", "\\mapsto", !0), eS(ez, eA, "rel", "⟼", "\\longmapsto", !0), eS(ez, eA, "rel", "↗", "\\nearrow", !0), eS(ez, eA, "rel", "↩", "\\hookleftarrow", !0), eS(ez, eA, "rel", "↪", "\\hookrightarrow", !0), eS(ez, eA, "rel", "↘", "\\searrow", !0), eS(ez, eA, "rel", "↼", "\\leftharpoonup", !0), eS(ez, eA, "rel", "⇀", "\\rightharpoonup", !0), eS(ez, eA, "rel", "↙", "\\swarrow", !0), eS(ez, eA, "rel", "↽", "\\leftharpoondown", !0), eS(ez, eA, "rel", "⇁", "\\rightharpoondown", !0), eS(ez, eA, "rel", "↖", "\\nwarrow", !0), eS(ez, eA, "rel", "⇌", "\\rightleftharpoons", !0), eS(ez, "ams", "rel", "≮", "\\nless", !0), eS(ez, "ams", "rel", "", "\\@nleqslant"), eS(ez, "ams", "rel", "", "\\@nleqq"), eS(ez, "ams", "rel", "⪇", "\\lneq", !0), eS(ez, "ams", "rel", "≨", "\\lneqq", !0), eS(ez, "ams", "rel", "", "\\@lvertneqq"), eS(ez, "ams", "rel", "⋦", "\\lnsim", !0), eS(ez, "ams", "rel", "⪉", "\\lnapprox", !0), eS(ez, "ams", "rel", "⊀", "\\nprec", !0), eS(ez, "ams", "rel", "⋠", "\\npreceq", !0), eS(ez, "ams", "rel", "⋨", "\\precnsim", !0), eS(ez, "ams", "rel", "⪹", "\\precnapprox", !0), eS(ez, "ams", "rel", "≁", "\\nsim", !0), eS(ez, "ams", "rel", "", "\\@nshortmid"), eS(ez, "ams", "rel", "∤", "\\nmid", !0), eS(ez, "ams", "rel", "⊬", "\\nvdash", !0), eS(ez, "ams", "rel", "⊭", "\\nvDash", !0), eS(ez, "ams", "rel", "⋪", "\\ntriangleleft"), eS(ez, "ams", "rel", "⋬", "\\ntrianglelefteq", !0), eS(ez, "ams", "rel", "⊊", "\\subsetneq", !0), eS(ez, "ams", "rel", "", "\\@varsubsetneq"), eS(ez, "ams", "rel", "⫋", "\\subsetneqq", !0), eS(ez, "ams", "rel", "", "\\@varsubsetneqq"), eS(ez, "ams", "rel", "≯", "\\ngtr", !0), eS(ez, "ams", "rel", "", "\\@ngeqslant"), eS(ez, "ams", "rel", "", "\\@ngeqq"), eS(ez, "ams", "rel", "⪈", "\\gneq", !0), eS(ez, "ams", "rel", "≩", "\\gneqq", !0), eS(ez, "ams", "rel", "", "\\@gvertneqq"), eS(ez, "ams", "rel", "⋧", "\\gnsim", !0), eS(ez, "ams", "rel", "⪊", "\\gnapprox", !0), eS(ez, "ams", "rel", "⊁", "\\nsucc", !0), eS(ez, "ams", "rel", "⋡", "\\nsucceq", !0), eS(ez, "ams", "rel", "⋩", "\\succnsim", !0), eS(ez, "ams", "rel", "⪺", "\\succnapprox", !0), eS(ez, "ams", "rel", "≆", "\\ncong", !0), eS(ez, "ams", "rel", "", "\\@nshortparallel"), eS(ez, "ams", "rel", "∦", "\\nparallel", !0), eS(ez, "ams", "rel", "⊯", "\\nVDash", !0), eS(ez, "ams", "rel", "⋫", "\\ntriangleright"), eS(ez, "ams", "rel", "⋭", "\\ntrianglerighteq", !0), eS(ez, "ams", "rel", "", "\\@nsupseteqq"), eS(ez, "ams", "rel", "⊋", "\\supsetneq", !0), eS(ez, "ams", "rel", "", "\\@varsupsetneq"), eS(ez, "ams", "rel", "⫌", "\\supsetneqq", !0), eS(ez, "ams", "rel", "", "\\@varsupsetneqq"), eS(ez, "ams", "rel", "⊮", "\\nVdash", !0), eS(ez, "ams", "rel", "⪵", "\\precneqq", !0), eS(ez, "ams", "rel", "⪶", "\\succneqq", !0), eS(ez, "ams", "rel", "", "\\@nsubseteqq"), eS(ez, "ams", "bin", "⊴", "\\unlhd"), eS(ez, "ams", "bin", "⊵", "\\unrhd"), eS(ez, "ams", "rel", "↚", "\\nleftarrow", !0), eS(ez, "ams", "rel", "↛", "\\nrightarrow", !0), eS(ez, "ams", "rel", "⇍", "\\nLeftarrow", !0), eS(ez, "ams", "rel", "⇏", "\\nRightarrow", !0), eS(ez, "ams", "rel", "↮", "\\nleftrightarrow", !0), eS(ez, "ams", "rel", "⇎", "\\nLeftrightarrow", !0), eS(ez, "ams", "rel", "△", "\\vartriangle"), eS(ez, "ams", eO, "ℏ", "\\hslash"), eS(ez, "ams", eO, "▽", "\\triangledown"), eS(ez, "ams", eO, "◊", "\\lozenge"), eS(ez, "ams", eO, "Ⓢ", "\\circledS"), eS(ez, "ams", eO, "®", "\\circledR"), eS(eM, "ams", eO, "®", "\\circledR"), eS(ez, "ams", eO, "∡", "\\measuredangle", !0), eS(ez, "ams", eO, "∄", "\\nexists"), eS(ez, "ams", eO, "℧", "\\mho"), eS(ez, "ams", eO, "Ⅎ", "\\Finv", !0), eS(ez, "ams", eO, "⅁", "\\Game", !0), eS(ez, "ams", eO, "‵", "\\backprime"), eS(ez, "ams", eO, "▲", "\\blacktriangle"), eS(ez, "ams", eO, "▼", "\\blacktriangledown"), eS(ez, "ams", eO, "■", "\\blacksquare"), eS(ez, "ams", eO, "⧫", "\\blacklozenge"), eS(ez, "ams", eO, "★", "\\bigstar"), eS(ez, "ams", eO, "∢", "\\sphericalangle", !0), eS(ez, "ams", eO, "∁", "\\complement", !0), eS(ez, "ams", eO, "ð", "\\eth", !0), eS(eM, eA, eO, "ð", "ð"), eS(ez, "ams", eO, "╱", "\\diagup"), eS(ez, "ams", eO, "╲", "\\diagdown"), eS(ez, "ams", eO, "□", "\\square"), eS(ez, "ams", eO, "□", "\\Box"), eS(ez, "ams", eO, "◊", "\\Diamond"), eS(ez, "ams", eO, "¥", "\\yen", !0), eS(eM, "ams", eO, "¥", "\\yen", !0), eS(ez, "ams", eO, "✓", "\\checkmark", !0), eS(eM, "ams", eO, "✓", "\\checkmark"), eS(ez, "ams", eO, "ℶ", "\\beth", !0), eS(ez, "ams", eO, "ℸ", "\\daleth", !0), eS(ez, "ams", eO, "ℷ", "\\gimel", !0), eS(ez, "ams", eO, "ϝ", "\\digamma", !0), eS(ez, "ams", eO, "ϰ", "\\varkappa"), eS(ez, "ams", eH, "┌", "\\@ulcorner", !0), eS(ez, "ams", eB, "┐", "\\@urcorner", !0), eS(ez, "ams", eH, "└", "\\@llcorner", !0), eS(ez, "ams", eB, "┘", "\\@lrcorner", !0), eS(ez, "ams", "rel", "≦", "\\leqq", !0), eS(ez, "ams", "rel", "⩽", "\\leqslant", !0), eS(ez, "ams", "rel", "⪕", "\\eqslantless", !0), eS(ez, "ams", "rel", "≲", "\\lesssim", !0), eS(ez, "ams", "rel", "⪅", "\\lessapprox", !0), eS(ez, "ams", "rel", "≊", "\\approxeq", !0), eS(ez, "ams", "bin", "⋖", "\\lessdot"), eS(ez, "ams", "rel", "⋘", "\\lll", !0), eS(ez, "ams", "rel", "≶", "\\lessgtr", !0), eS(ez, "ams", "rel", "⋚", "\\lesseqgtr", !0), eS(ez, "ams", "rel", "⪋", "\\lesseqqgtr", !0), eS(ez, "ams", "rel", "≑", "\\doteqdot"), eS(ez, "ams", "rel", "≓", "\\risingdotseq", !0), eS(ez, "ams", "rel", "≒", "\\fallingdotseq", !0), eS(ez, "ams", "rel", "∽", "\\backsim", !0), eS(ez, "ams", "rel", "⋍", "\\backsimeq", !0), eS(ez, "ams", "rel", "⫅", "\\subseteqq", !0), eS(ez, "ams", "rel", "⋐", "\\Subset", !0), eS(ez, "ams", "rel", "⊏", "\\sqsubset", !0), eS(ez, "ams", "rel", "≼", "\\preccurlyeq", !0), eS(ez, "ams", "rel", "⋞", "\\curlyeqprec", !0), eS(ez, "ams", "rel", "≾", "\\precsim", !0), eS(ez, "ams", "rel", "⪷", "\\precapprox", !0), eS(ez, "ams", "rel", "⊲", "\\vartriangleleft"), eS(ez, "ams", "rel", "⊴", "\\trianglelefteq"), eS(ez, "ams", "rel", "⊨", "\\vDash", !0), eS(ez, "ams", "rel", "⊪", "\\Vvdash", !0), eS(ez, "ams", "rel", "⌣", "\\smallsmile"), eS(ez, "ams", "rel", "⌢", "\\smallfrown"), eS(ez, "ams", "rel", "≏", "\\bumpeq", !0), eS(ez, "ams", "rel", "≎", "\\Bumpeq", !0), eS(ez, "ams", "rel", "≧", "\\geqq", !0), eS(ez, "ams", "rel", "⩾", "\\geqslant", !0), eS(ez, "ams", "rel", "⪖", "\\eqslantgtr", !0), eS(ez, "ams", "rel", "≳", "\\gtrsim", !0), eS(ez, "ams", "rel", "⪆", "\\gtrapprox", !0), eS(ez, "ams", "bin", "⋗", "\\gtrdot"), eS(ez, "ams", "rel", "⋙", "\\ggg", !0), eS(ez, "ams", "rel", "≷", "\\gtrless", !0), eS(ez, "ams", "rel", "⋛", "\\gtreqless", !0), eS(ez, "ams", "rel", "⪌", "\\gtreqqless", !0), eS(ez, "ams", "rel", "≖", "\\eqcirc", !0), eS(ez, "ams", "rel", "≗", "\\circeq", !0), eS(ez, "ams", "rel", "≜", "\\triangleq", !0), eS(ez, "ams", "rel", "∼", "\\thicksim"), eS(ez, "ams", "rel", "≈", "\\thickapprox"), eS(ez, "ams", "rel", "⫆", "\\supseteqq", !0), eS(ez, "ams", "rel", "⋑", "\\Supset", !0), eS(ez, "ams", "rel", "⊐", "\\sqsupset", !0), eS(ez, "ams", "rel", "≽", "\\succcurlyeq", !0), eS(ez, "ams", "rel", "⋟", "\\curlyeqsucc", !0), eS(ez, "ams", "rel", "≿", "\\succsim", !0), eS(ez, "ams", "rel", "⪸", "\\succapprox", !0), eS(ez, "ams", "rel", "⊳", "\\vartriangleright"), eS(ez, "ams", "rel", "⊵", "\\trianglerighteq"), eS(ez, "ams", "rel", "⊩", "\\Vdash", !0), eS(ez, "ams", "rel", "∣", "\\shortmid"), eS(ez, "ams", "rel", "∥", "\\shortparallel"), eS(ez, "ams", "rel", "≬", "\\between", !0), eS(ez, "ams", "rel", "⋔", "\\pitchfork", !0), eS(ez, "ams", "rel", "∝", "\\varpropto"), eS(ez, "ams", "rel", "◀", "\\blacktriangleleft"), eS(ez, "ams", "rel", "∴", "\\therefore", !0), eS(ez, "ams", "rel", "∍", "\\backepsilon"), eS(ez, "ams", "rel", "▶", "\\blacktriangleright"), eS(ez, "ams", "rel", "∵", "\\because", !0), eS(ez, "ams", "rel", "⋘", "\\llless"), eS(ez, "ams", "rel", "⋙", "\\gggtr"), eS(ez, "ams", "bin", "⊲", "\\lhd"), eS(ez, "ams", "bin", "⊳", "\\rhd"), eS(ez, "ams", "rel", "≂", "\\eqsim", !0), eS(ez, eA, "rel", "⋈", "\\Join"), eS(ez, "ams", "rel", "≑", "\\Doteq", !0), eS(ez, "ams", "bin", "∔", "\\dotplus", !0), eS(ez, "ams", "bin", "∖", "\\smallsetminus"), eS(ez, "ams", "bin", "⋒", "\\Cap", !0), eS(ez, "ams", "bin", "⋓", "\\Cup", !0), eS(ez, "ams", "bin", "⩞", "\\doublebarwedge", !0), eS(ez, "ams", "bin", "⊟", "\\boxminus", !0), eS(ez, "ams", "bin", "⊞", "\\boxplus", !0), eS(ez, "ams", "bin", "⋇", "\\divideontimes", !0), eS(ez, "ams", "bin", "⋉", "\\ltimes", !0), eS(ez, "ams", "bin", "⋊", "\\rtimes", !0), eS(ez, "ams", "bin", "⋋", "\\leftthreetimes", !0), eS(ez, "ams", "bin", "⋌", "\\rightthreetimes", !0), eS(ez, "ams", "bin", "⋏", "\\curlywedge", !0), eS(ez, "ams", "bin", "⋎", "\\curlyvee", !0), eS(ez, "ams", "bin", "⊝", "\\circleddash", !0), eS(ez, "ams", "bin", "⊛", "\\circledast", !0), eS(ez, "ams", "bin", "⋅", "\\centerdot"), eS(ez, "ams", "bin", "⊺", "\\intercal", !0), eS(ez, "ams", "bin", "⋒", "\\doublecap"), eS(ez, "ams", "bin", "⋓", "\\doublecup"), eS(ez, "ams", "bin", "⊠", "\\boxtimes", !0), eS(ez, "ams", "rel", "⇢", "\\dashrightarrow", !0), eS(ez, "ams", "rel", "⇠", "\\dashleftarrow", !0), eS(ez, "ams", "rel", "⇇", "\\leftleftarrows", !0), eS(ez, "ams", "rel", "⇆", "\\leftrightarrows", !0), eS(ez, "ams", "rel", "⇚", "\\Lleftarrow", !0), eS(ez, "ams", "rel", "↞", "\\twoheadleftarrow", !0), eS(ez, "ams", "rel", "↢", "\\leftarrowtail", !0), eS(ez, "ams", "rel", "↫", "\\looparrowleft", !0), eS(ez, "ams", "rel", "⇋", "\\leftrightharpoons", !0), eS(ez, "ams", "rel", "↶", "\\curvearrowleft", !0), eS(ez, "ams", "rel", "↺", "\\circlearrowleft", !0), eS(ez, "ams", "rel", "↰", "\\Lsh", !0), eS(ez, "ams", "rel", "⇈", "\\upuparrows", !0), eS(ez, "ams", "rel", "↿", "\\upharpoonleft", !0), eS(ez, "ams", "rel", "⇃", "\\downharpoonleft", !0), eS(ez, eA, "rel", "⊶", "\\origof", !0), eS(ez, eA, "rel", "⊷", "\\imageof", !0), eS(ez, "ams", "rel", "⊸", "\\multimap", !0), eS(ez, "ams", "rel", "↭", "\\leftrightsquigarrow", !0), eS(ez, "ams", "rel", "⇉", "\\rightrightarrows", !0), eS(ez, "ams", "rel", "⇄", "\\rightleftarrows", !0), eS(ez, "ams", "rel", "↠", "\\twoheadrightarrow", !0), eS(ez, "ams", "rel", "↣", "\\rightarrowtail", !0), eS(ez, "ams", "rel", "↬", "\\looparrowright", !0), eS(ez, "ams", "rel", "↷", "\\curvearrowright", !0), eS(ez, "ams", "rel", "↻", "\\circlearrowright", !0), eS(ez, "ams", "rel", "↱", "\\Rsh", !0), eS(ez, "ams", "rel", "⇊", "\\downdownarrows", !0), eS(ez, "ams", "rel", "↾", "\\upharpoonright", !0), eS(ez, "ams", "rel", "⇂", "\\downharpoonright", !0), eS(ez, "ams", "rel", "⇝", "\\rightsquigarrow", !0), eS(ez, "ams", "rel", "⇝", "\\leadsto"), eS(ez, "ams", "rel", "⇛", "\\Rrightarrow", !0), eS(ez, "ams", "rel", "↾", "\\restriction"), eS(ez, eA, eO, "‘", "`"), eS(ez, eA, eO, "$", "\\$"), eS(eM, eA, eO, "$", "\\$"), eS(eM, eA, eO, "$", "\\textdollar"), eS(ez, eA, eO, "%", "\\%"), eS(eM, eA, eO, "%", "\\%"), eS(ez, eA, eO, "_", "\\_"), eS(eM, eA, eO, "_", "\\_"), eS(eM, eA, eO, "_", "\\textunderscore"), eS(ez, eA, eO, "∠", "\\angle", !0), eS(ez, eA, eO, "∞", "\\infty", !0), eS(ez, eA, eO, "′", "\\prime"), eS(ez, eA, eO, "△", "\\triangle"), eS(ez, eA, eO, "Γ", "\\Gamma", !0), eS(ez, eA, eO, "Δ", "\\Delta", !0), eS(ez, eA, eO, "Θ", "\\Theta", !0), eS(ez, eA, eO, "Λ", "\\Lambda", !0), eS(ez, eA, eO, "Ξ", "\\Xi", !0), eS(ez, eA, eO, "Π", "\\Pi", !0), eS(ez, eA, eO, "Σ", "\\Sigma", !0), eS(ez, eA, eO, "Υ", "\\Upsilon", !0), eS(ez, eA, eO, "Φ", "\\Phi", !0), eS(ez, eA, eO, "Ψ", "\\Psi", !0), eS(ez, eA, eO, "Ω", "\\Omega", !0), eS(ez, eA, eO, "A", "Α"), eS(ez, eA, eO, "B", "Β"), eS(ez, eA, eO, "E", "Ε"), eS(ez, eA, eO, "Z", "Ζ"), eS(ez, eA, eO, "H", "Η"), eS(ez, eA, eO, "I", "Ι"), eS(ez, eA, eO, "K", "Κ"), eS(ez, eA, eO, "M", "Μ"), eS(ez, eA, eO, "N", "Ν"), eS(ez, eA, eO, "O", "Ο"), eS(ez, eA, eO, "P", "Ρ"), eS(ez, eA, eO, "T", "Τ"), eS(ez, eA, eO, "X", "Χ"), eS(ez, eA, eO, "¬", "\\neg", !0), eS(ez, eA, eO, "¬", "\\lnot"), eS(ez, eA, eO, "⊤", "\\top"), eS(ez, eA, eO, "⊥", "\\bot"), eS(ez, eA, eO, "∅", "\\emptyset"), eS(ez, "ams", eO, "∅", "\\varnothing"), eS(ez, eA, eC, "α", "\\alpha", !0), eS(ez, eA, eC, "β", "\\beta", !0), eS(ez, eA, eC, "γ", "\\gamma", !0), eS(ez, eA, eC, "δ", "\\delta", !0), eS(ez, eA, eC, "ϵ", "\\epsilon", !0), eS(ez, eA, eC, "ζ", "\\zeta", !0), eS(ez, eA, eC, "η", "\\eta", !0), eS(ez, eA, eC, "θ", "\\theta", !0), eS(ez, eA, eC, "ι", "\\iota", !0), eS(ez, eA, eC, "κ", "\\kappa", !0), eS(ez, eA, eC, "λ", "\\lambda", !0), eS(ez, eA, eC, "μ", "\\mu", !0), eS(ez, eA, eC, "ν", "\\nu", !0), eS(ez, eA, eC, "ξ", "\\xi", !0), eS(ez, eA, eC, "ο", "\\omicron", !0), eS(ez, eA, eC, "π", "\\pi", !0), eS(ez, eA, eC, "ρ", "\\rho", !0), eS(ez, eA, eC, "σ", "\\sigma", !0), eS(ez, eA, eC, "τ", "\\tau", !0), eS(ez, eA, eC, "υ", "\\upsilon", !0), eS(ez, eA, eC, "ϕ", "\\phi", !0), eS(ez, eA, eC, "χ", "\\chi", !0), eS(ez, eA, eC, "ψ", "\\psi", !0), eS(ez, eA, eC, "ω", "\\omega", !0), eS(ez, eA, eC, "ε", "\\varepsilon", !0), eS(ez, eA, eC, "ϑ", "\\vartheta", !0), eS(ez, eA, eC, "ϖ", "\\varpi", !0), eS(ez, eA, eC, "ϱ", "\\varrho", !0), eS(ez, eA, eC, "ς", "\\varsigma", !0), eS(ez, eA, eC, "φ", "\\varphi", !0), eS(ez, eA, "bin", "∗", "*", !0), eS(ez, eA, "bin", "+", "+"), eS(ez, eA, "bin", "−", "-", !0), eS(ez, eA, "bin", "⋅", "\\cdot", !0), eS(ez, eA, "bin", "∘", "\\circ", !0), eS(ez, eA, "bin", "÷", "\\div", !0), eS(ez, eA, "bin", "±", "\\pm", !0), eS(ez, eA, "bin", "×", "\\times", !0), eS(ez, eA, "bin", "∩", "\\cap", !0), eS(ez, eA, "bin", "∪", "\\cup", !0), eS(ez, eA, "bin", "∖", "\\setminus", !0), eS(ez, eA, "bin", "∧", "\\land"), eS(ez, eA, "bin", "∨", "\\lor"), eS(ez, eA, "bin", "∧", "\\wedge", !0), eS(ez, eA, "bin", "∨", "\\vee", !0), eS(ez, eA, eO, "√", "\\surd"), eS(ez, eA, eH, "⟨", "\\langle", !0), eS(ez, eA, eH, "∣", "\\lvert"), eS(ez, eA, eH, "∥", "\\lVert"), eS(ez, eA, eB, "?", "?"), eS(ez, eA, eB, "!", "!"), eS(ez, eA, eB, "⟩", "\\rangle", !0), eS(ez, eA, eB, "∣", "\\rvert"), eS(ez, eA, eB, "∥", "\\rVert"), eS(ez, eA, "rel", "=", "="), eS(ez, eA, "rel", ":", ":"), eS(ez, eA, "rel", "≈", "\\approx", !0), eS(ez, eA, "rel", "≅", "\\cong", !0), eS(ez, eA, "rel", "≥", "\\ge"), eS(ez, eA, "rel", "≥", "\\geq", !0), eS(ez, eA, "rel", "←", "\\gets"), eS(ez, eA, "rel", ">", "\\gt", !0), eS(ez, eA, "rel", "∈", "\\in", !0), eS(ez, eA, "rel", "", "\\@not"), eS(ez, eA, "rel", "⊂", "\\subset", !0), eS(ez, eA, "rel", "⊃", "\\supset", !0), eS(ez, eA, "rel", "⊆", "\\subseteq", !0), eS(ez, eA, "rel", "⊇", "\\supseteq", !0), eS(ez, "ams", "rel", "⊈", "\\nsubseteq", !0), eS(ez, "ams", "rel", "⊉", "\\nsupseteq", !0), eS(ez, eA, "rel", "⊨", "\\models"), eS(ez, eA, "rel", "←", "\\leftarrow", !0), eS(ez, eA, "rel", "≤", "\\le"), eS(ez, eA, "rel", "≤", "\\leq", !0), eS(ez, eA, "rel", "<", "\\lt", !0), eS(ez, eA, "rel", "→", "\\rightarrow", !0), eS(ez, eA, "rel", "→", "\\to"), eS(ez, "ams", "rel", "≱", "\\ngeq", !0), eS(ez, "ams", "rel", "≰", "\\nleq", !0), eS(ez, eA, eE, "\xA0", "\\ "), eS(ez, eA, eE, "\xA0", "\\space"), eS(ez, eA, eE, "\xA0", "\\nobreakspace"), eS(eM, eA, eE, "\xA0", "\\ "), eS(eM, eA, eE, "\xA0", " "), eS(eM, eA, eE, "\xA0", "\\space"), eS(eM, eA, eE, "\xA0", "\\nobreakspace"), eS(ez, eA, eE, null, "\\nobreak"), eS(ez, eA, eE, null, "\\allowbreak"), eS(ez, eA, eR, ",", ","), eS(ez, eA, eR, ";", ";"), eS(ez, "ams", "bin", "⊼", "\\barwedge", !0), eS(ez, "ams", "bin", "⊻", "\\veebar", !0), eS(ez, eA, "bin", "⊙", "\\odot", !0), eS(ez, eA, "bin", "⊕", "\\oplus", !0), eS(ez, eA, "bin", "⊗", "\\otimes", !0), eS(ez, eA, eO, "∂", "\\partial", !0), eS(ez, eA, "bin", "⊘", "\\oslash", !0), eS(ez, "ams", "bin", "⊚", "\\circledcirc", !0), eS(ez, "ams", "bin", "⊡", "\\boxdot", !0), eS(ez, eA, "bin", "△", "\\bigtriangleup"), eS(ez, eA, "bin", "▽", "\\bigtriangledown"), eS(ez, eA, "bin", "†", "\\dagger"), eS(ez, eA, "bin", "⋄", "\\diamond"), eS(ez, eA, "bin", "⋆", "\\star"), eS(ez, eA, "bin", "◃", "\\triangleleft"), eS(ez, eA, "bin", "▹", "\\triangleright"), eS(ez, eA, eH, "{", "\\{"), eS(eM, eA, eO, "{", "\\{"), eS(eM, eA, eO, "{", "\\textbraceleft"), eS(ez, eA, eB, "}", "\\}"), eS(eM, eA, eO, "}", "\\}"), eS(eM, eA, eO, "}", "\\textbraceright"), eS(ez, eA, eH, "{", "\\lbrace"), eS(ez, eA, eB, "}", "\\rbrace"), eS(ez, eA, eH, "[", "\\lbrack", !0), eS(eM, eA, eO, "[", "\\lbrack", !0), eS(ez, eA, eB, "]", "\\rbrack", !0), eS(eM, eA, eO, "]", "\\rbrack", !0), eS(ez, eA, eH, "(", "\\lparen", !0), eS(ez, eA, eB, ")", "\\rparen", !0), eS(eM, eA, eO, "<", "\\textless", !0), eS(eM, eA, eO, ">", "\\textgreater", !0), eS(ez, eA, eH, "⌊", "\\lfloor", !0), eS(ez, eA, eB, "⌋", "\\rfloor", !0), eS(ez, eA, eH, "⌈", "\\lceil", !0), eS(ez, eA, eB, "⌉", "\\rceil", !0), eS(ez, eA, eO, "\\", "\\backslash"), eS(ez, eA, eO, "∣", "|"), eS(ez, eA, eO, "∣", "\\vert"), eS(eM, eA, eO, "|", "\\textbar", !0), eS(ez, eA, eO, "∥", "\\|"), eS(ez, eA, eO, "∥", "\\Vert"), eS(eM, eA, eO, "∥", "\\textbardbl"), eS(eM, eA, eO, "~", "\\textasciitilde"), eS(eM, eA, eO, "\\", "\\textbackslash"), eS(eM, eA, eO, "^", "\\textasciicircum"), eS(ez, eA, "rel", "↑", "\\uparrow", !0), eS(ez, eA, "rel", "⇑", "\\Uparrow", !0), eS(ez, eA, "rel", "↓", "\\downarrow", !0), eS(ez, eA, "rel", "⇓", "\\Downarrow", !0), eS(ez, eA, "rel", "↕", "\\updownarrow", !0), eS(ez, eA, "rel", "⇕", "\\Updownarrow", !0), eS(ez, eA, eI, "∐", "\\coprod"), eS(ez, eA, eI, "⋁", "\\bigvee"), eS(ez, eA, eI, "⋀", "\\bigwedge"), eS(ez, eA, eI, "⨄", "\\biguplus"), eS(ez, eA, eI, "⋂", "\\bigcap"), eS(ez, eA, eI, "⋃", "\\bigcup"), eS(ez, eA, eI, "∫", "\\int"), eS(ez, eA, eI, "∫", "\\intop"), eS(ez, eA, eI, "∬", "\\iint"), eS(ez, eA, eI, "∭", "\\iiint"), eS(ez, eA, eI, "∏", "\\prod"), eS(ez, eA, eI, "∑", "\\sum"), eS(ez, eA, eI, "⨂", "\\bigotimes"), eS(ez, eA, eI, "⨁", "\\bigoplus"), eS(ez, eA, eI, "⨀", "\\bigodot"), eS(ez, eA, eI, "∮", "\\oint"), eS(ez, eA, eI, "∯", "\\oiint"), eS(ez, eA, eI, "∰", "\\oiiint"), eS(ez, eA, eI, "⨆", "\\bigsqcup"), eS(ez, eA, eI, "∫", "\\smallint"), eS(eM, eA, eq, "…", "\\textellipsis"), eS(ez, eA, eq, "…", "\\mathellipsis"), eS(eM, eA, eq, "…", "\\ldots", !0), eS(ez, eA, eq, "…", "\\ldots", !0), eS(ez, eA, eq, "⋯", "\\@cdots", !0), eS(ez, eA, eq, "⋱", "\\ddots", !0), eS(ez, eA, eO, "⋮", "\\varvdots"), eS(eM, eA, eO, "⋮", "\\varvdots"), eS(ez, eA, eT, "ˊ", "\\acute"), eS(ez, eA, eT, "ˋ", "\\grave"), eS(ez, eA, eT, "¨", "\\ddot"), eS(ez, eA, eT, "~", "\\tilde"), eS(ez, eA, eT, "ˉ", "\\bar"), eS(ez, eA, eT, "˘", "\\breve"), eS(ez, eA, eT, "ˇ", "\\check"), eS(ez, eA, eT, "^", "\\hat"), eS(ez, eA, eT, "⃗", "\\vec"), eS(ez, eA, eT, "˙", "\\dot"), eS(ez, eA, eT, "˚", "\\mathring"), eS(ez, eA, eC, "", "\\@imath"), eS(ez, eA, eC, "", "\\@jmath"), eS(ez, eA, eO, "ı", "ı"), eS(ez, eA, eO, "ȷ", "ȷ"), eS(eM, eA, eO, "ı", "\\i", !0), eS(eM, eA, eO, "ȷ", "\\j", !0), eS(eM, eA, eO, "ß", "\\ss", !0), eS(eM, eA, eO, "æ", "\\ae", !0), eS(eM, eA, eO, "œ", "\\oe", !0), eS(eM, eA, eO, "ø", "\\o", !0), eS(eM, eA, eO, "Æ", "\\AE", !0), eS(eM, eA, eO, "Œ", "\\OE", !0), eS(eM, eA, eO, "Ø", "\\O", !0), eS(eM, eA, eT, "ˊ", "\\'"), eS(eM, eA, eT, "ˋ", "\\`"), eS(eM, eA, eT, "ˆ", "\\^"), eS(eM, eA, eT, "˜", "\\~"), eS(eM, eA, eT, "ˉ", "\\="), eS(eM, eA, eT, "˘", "\\u"), eS(eM, eA, eT, "˙", "\\."), eS(eM, eA, eT, "¸", "\\c"), eS(eM, eA, eT, "˚", "\\r"), eS(eM, eA, eT, "ˇ", "\\v"), eS(eM, eA, eT, "¨", "\\\""), eS(eM, eA, eT, "˝", "\\H"), eS(eM, eA, eT, "◯", "\\textcircled");
var eN = {
	"--": !0,
	"---": !0,
	"``": !0,
	"''": !0
};
eS(eM, eA, eO, "–", "--", !0), eS(eM, eA, eO, "–", "\\textendash"), eS(eM, eA, eO, "—", "---", !0), eS(eM, eA, eO, "—", "\\textemdash"), eS(eM, eA, eO, "‘", "`", !0), eS(eM, eA, eO, "‘", "\\textquoteleft"), eS(eM, eA, eO, "’", "'", !0), eS(eM, eA, eO, "’", "\\textquoteright"), eS(eM, eA, eO, "“", "``", !0), eS(eM, eA, eO, "“", "\\textquotedblleft"), eS(eM, eA, eO, "”", "''", !0), eS(eM, eA, eO, "”", "\\textquotedblright"), eS(ez, eA, eO, "°", "\\degree", !0), eS(eM, eA, eO, "°", "\\degree"), eS(eM, eA, eO, "°", "\\textdegree", !0), eS(ez, eA, eO, "£", "\\pounds"), eS(ez, eA, eO, "£", "\\mathsterling", !0), eS(eM, eA, eO, "£", "\\pounds"), eS(eM, eA, eO, "£", "\\textsterling", !0), eS(ez, "ams", eO, "✠", "\\maltese"), eS(eM, "ams", eO, "✠", "\\maltese");
var eD = "0123456789/@.\"";
for (eP = 0; eP < eD.length; eP++) eS(ez, eA, eO, eL = eD.charAt(eP), eL);
var eL, eP, eF = "0123456789!@*()-=+\";:?/.,";
for (eG = 0; eG < eF.length; eG++) eS(eM, eA, eO, eV = eF.charAt(eG), eV);
var eV, eG, eU = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
for (eW = 0; eW < eU.length; eW++) eS(ez, eA, eC, eY = eU.charAt(eW), eY), eS(eM, eA, eO, eY, eY);
eS(ez, "ams", eO, "C", "ℂ"), eS(eM, "ams", eO, "C", "ℂ"), eS(ez, "ams", eO, "H", "ℍ"), eS(eM, "ams", eO, "H", "ℍ"), eS(ez, "ams", eO, "N", "ℕ"), eS(eM, "ams", eO, "N", "ℕ"), eS(ez, "ams", eO, "P", "ℙ"), eS(eM, "ams", eO, "P", "ℙ"), eS(ez, "ams", eO, "Q", "ℚ"), eS(eM, "ams", eO, "Q", "ℚ"), eS(ez, "ams", eO, "R", "ℝ"), eS(eM, "ams", eO, "R", "ℝ"), eS(ez, "ams", eO, "Z", "ℤ"), eS(eM, "ams", eO, "Z", "ℤ"), eS(ez, eA, eC, "h", "ℎ"), eS(eM, eA, eC, "h", "ℎ");
var e_ = "";
for (e$ = 0; e$ < eU.length; e$++) eS(ez, eA, eC, eX = eU.charAt(e$), e_ = String.fromCharCode(55349, 56320 + e$)), eS(eM, eA, eO, eX, e_), eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56372 + e$)), eS(eM, eA, eO, eX, e_), eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56424 + e$)), eS(eM, eA, eO, eX, e_), eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56580 + e$)), eS(eM, eA, eO, eX, e_), eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56684 + e$)), eS(eM, eA, eO, eX, e_), eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56736 + e$)), eS(eM, eA, eO, eX, e_), eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56788 + e$)), eS(eM, eA, eO, eX, e_), eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56840 + e$)), eS(eM, eA, eO, eX, e_), eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56944 + e$)), eS(eM, eA, eO, eX, e_), e$ < 26 && (eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56632 + e$)), eS(eM, eA, eO, eX, e_), eS(ez, eA, eC, eX, e_ = String.fromCharCode(55349, 56476 + e$)), eS(eM, eA, eO, eX, e_));
for (eS(ez, eA, eC, "k", e_ = "𝕜"), eS(eM, eA, eO, "k", e_), eZ = 0; eZ < 10; eZ++) eS(ez, eA, eC, ej = eZ.toString(), e_ = String.fromCharCode(55349, 57294 + eZ)), eS(eM, eA, eO, ej, e_), eS(ez, eA, eC, ej, e_ = String.fromCharCode(55349, 57314 + eZ)), eS(eM, eA, eO, ej, e_), eS(ez, eA, eC, ej, e_ = String.fromCharCode(55349, 57324 + eZ)), eS(eM, eA, eO, ej, e_), eS(ez, eA, eC, ej, e_ = String.fromCharCode(55349, 57334 + eZ)), eS(eM, eA, eO, ej, e_);
var eY, eW, eX, e$, ej, eZ, eK = "ÐÞþ";
for (eQ = 0; eQ < eK.length; eQ++) eS(ez, eA, eC, eJ = eK.charAt(eQ), eJ), eS(eM, eA, eO, eJ, eJ);
var eJ, eQ, e0 = [
	[
		"mathbf",
		"textbf",
		"Main-Bold"
	],
	[
		"mathbf",
		"textbf",
		"Main-Bold"
	],
	[
		"mathnormal",
		"textit",
		"Math-Italic"
	],
	[
		"mathnormal",
		"textit",
		"Math-Italic"
	],
	[
		"boldsymbol",
		"boldsymbol",
		"Main-BoldItalic"
	],
	[
		"boldsymbol",
		"boldsymbol",
		"Main-BoldItalic"
	],
	[
		"mathscr",
		"textscr",
		"Script-Regular"
	],
	[
		"",
		"",
		""
	],
	[
		"",
		"",
		""
	],
	[
		"",
		"",
		""
	],
	[
		"mathfrak",
		"textfrak",
		"Fraktur-Regular"
	],
	[
		"mathfrak",
		"textfrak",
		"Fraktur-Regular"
	],
	[
		"mathbb",
		"textbb",
		"AMS-Regular"
	],
	[
		"mathbb",
		"textbb",
		"AMS-Regular"
	],
	[
		"mathboldfrak",
		"textboldfrak",
		"Fraktur-Regular"
	],
	[
		"mathboldfrak",
		"textboldfrak",
		"Fraktur-Regular"
	],
	[
		"mathsf",
		"textsf",
		"SansSerif-Regular"
	],
	[
		"mathsf",
		"textsf",
		"SansSerif-Regular"
	],
	[
		"mathboldsf",
		"textboldsf",
		"SansSerif-Bold"
	],
	[
		"mathboldsf",
		"textboldsf",
		"SansSerif-Bold"
	],
	[
		"mathitsf",
		"textitsf",
		"SansSerif-Italic"
	],
	[
		"mathitsf",
		"textitsf",
		"SansSerif-Italic"
	],
	[
		"",
		"",
		""
	],
	[
		"",
		"",
		""
	],
	[
		"mathtt",
		"texttt",
		"Typewriter-Regular"
	],
	[
		"mathtt",
		"texttt",
		"Typewriter-Regular"
	]
], e1 = [
	[
		"mathbf",
		"textbf",
		"Main-Bold"
	],
	[
		"",
		"",
		""
	],
	[
		"mathsf",
		"textsf",
		"SansSerif-Regular"
	],
	[
		"mathboldsf",
		"textboldsf",
		"SansSerif-Bold"
	],
	[
		"mathtt",
		"texttt",
		"Typewriter-Regular"
	]
], e4 = e(function(e, t) {
	var r = (e.charCodeAt(0) - 55296) * 1024 + (e.charCodeAt(1) - 56320) + 65536, i = +("math" !== t);
	if (119808 <= r && r < 120484) {
		var n = Math.floor((r - 119808) / 26);
		return [e0[n][2], e0[n][i]];
	}
	if (120782 <= r && r <= 120831) {
		var s = Math.floor((r - 120782) / 10);
		return [e1[s][2], e1[s][i]];
	}
	if (120485 === r || 120486 === r) return [e0[0][2], e0[0][i]];
	if (120486 < r && r < 120782) return ["", ""];
	throw new a("Unsupported character: " + e);
}, "wideCharacterFont"), e5 = e(function(e, t, r) {
	return ek[r][e] && ek[r][e].replace && (e = ek[r][e].replace), {
		value: e,
		metrics: X(e, t, r)
	};
}, "lookupSymbol"), e6 = e(function(e, t, r, a, i) {
	var n, s = e5(e, t, r), o = s.metrics;
	if (e = s.value, o) {
		var l = o.italic;
		("text" === r || a && "mathit" === a.font) && (l = 0), n = new ed(e, o.height, o.depth, l, o.skew, o.width, i);
	} else "u" > typeof console && console.warn("No character metrics " + ("for '" + e + "' in style '" + t + "' and mode '") + r + "'"), n = new ed(e, 0, 0, 0, 0, 0, i);
	if (a) {
		n.maxFontSize = a.sizeMultiplier, a.style.isTight() && n.classes.push("mtight");
		var h = a.getColor();
		h && (n.style.color = h);
	}
	return n;
}, "makeSymbol"), e7 = e(function(e, t, r, a) {
	return void 0 === a && (a = []), "boldsymbol" === r.font && e5(e, "Main-Bold", t).metrics ? e6(e, "Main-Bold", t, r, a.concat(["mathbf"])) : "\\" === e || "main" === ek[t][e].font ? e6(e, "Main-Regular", t, r, a) : e6(e, "AMS-Regular", t, r, a.concat(["amsrm"]));
}, "mathsym"), e3 = e(function(e, t, r, a, i) {
	return "textord" !== i && e5(e, "Math-BoldItalic", t).metrics ? {
		fontName: "Math-BoldItalic",
		fontClass: "boldsymbol"
	} : {
		fontName: "Main-Bold",
		fontClass: "mathbf"
	};
}, "boldsymbol"), e8 = e(function(e, t, r) {
	var a, i, n = e.mode, s = e.text, o = ["mord"], l = "math" === n || "text" === n && t.font, h = l ? t.font : t.fontFamily, m = "", c = "";
	if (55349 === s.charCodeAt(0) && ([m, c] = e4(s, n)), m.length > 0) return e6(s, m, n, t, o.concat(c));
	if (h) {
		if ("boldsymbol" === h) {
			var u = e3(s, n, t, o, r);
			a = u.fontName, i = [u.fontClass];
		} else l ? (a = tc[h].fontName, i = [h]) : (a = tm(h, t.fontWeight, t.fontShape), i = [
			h,
			t.fontWeight,
			t.fontShape
		]);
		if (e5(s, a, n).metrics) return e6(s, a, n, t, o.concat(i));
		if (eN.hasOwnProperty(s) && "Typewriter" === a.slice(0, 10)) {
			for (var p = [], d = 0; d < s.length; d++) p.push(e6(s[d], a, n, t, o.concat(i)));
			return tn(p);
		}
	}
	if ("mathord" === r) return e6(s, "Math-Italic", n, t, o.concat(["mathnormal"]));
	if ("textord" === r) {
		var g = ek[n][s] && ek[n][s].font;
		if ("ams" === g) return e6(s, tm("amsrm", t.fontWeight, t.fontShape), n, t, o.concat("amsrm", t.fontWeight, t.fontShape));
		if ("main" === g || !g) return e6(s, tm("textrm", t.fontWeight, t.fontShape), n, t, o.concat(t.fontWeight, t.fontShape));
		var f = tm(g, t.fontWeight, t.fontShape);
		return e6(s, f, n, t, o.concat(f, t.fontWeight, t.fontShape));
	}
	throw Error("unexpected type: " + r + " in makeOrd");
}, "makeOrd"), e2 = e((e, t) => {
	if (en(e.classes) !== en(t.classes) || e.skew !== t.skew || e.maxFontSize !== t.maxFontSize) return !1;
	if (1 === e.classes.length) {
		var r = e.classes[0];
		if ("mbin" === r || "mord" === r) return !1;
	}
	for (var a in e.style) if (e.style.hasOwnProperty(a) && e.style[a] !== t.style[a]) return !1;
	for (var i in t.style) if (t.style.hasOwnProperty(i) && e.style[i] !== t.style[i]) return !1;
	return !0;
}, "canCombine"), e9 = e((e) => {
	for (var t = 0; t < e.length - 1; t++) {
		var r = e[t], a = e[t + 1];
		r instanceof ed && a instanceof ed && e2(r, a) && (r.text += a.text, r.height = Math.max(r.height, a.height), r.depth = Math.max(r.depth, a.depth), r.italic = a.italic, e.splice(t + 1, 1), t--);
	}
	return e;
}, "tryCombineChars"), te = e(function(e) {
	for (var t = 0, r = 0, a = 0, i = 0; i < e.children.length; i++) {
		var n = e.children[i];
		n.height > t && (t = n.height), n.depth > r && (r = n.depth), n.maxFontSize > a && (a = n.maxFontSize);
	}
	e.height = t, e.depth = r, e.maxFontSize = a;
}, "sizeElementFromChildren"), tt = e(function(e, t, r, a) {
	var i = new em(e, t, r, a);
	return te(i), i;
}, "makeSpan"), tr = e((e, t, r, a) => new em(e, t, r, a), "makeSvgSpan"), ta = e(function(e, t, r) {
	var a = tt([e], [], t);
	return a.height = Math.max(r || t.fontMetrics().defaultRuleThickness, t.minRuleThickness), a.style.borderBottomWidth = ei(a.height), a.maxFontSize = 1, a;
}, "makeLineSpan"), ti = e(function(e, t, r, a) {
	var i = new ec(e, t, r, a);
	return te(i), i;
}, "makeAnchor"), tn = e(function(e) {
	var t = new G(e);
	return te(t), t;
}, "makeFragment"), ts = e(function(e, t) {
	return e instanceof G ? tt([], [e], t) : e;
}, "wrapFragment"), to = e(function(e) {
	if ("individualShift" === e.positionType) {
		for (var t, r = e.children, a = [r[0]], i = -r[0].shift - r[0].elem.depth, n = i, s = 1; s < r.length; s++) {
			var o = -r[s].shift - n - r[s].elem.depth, l = o - (r[s - 1].elem.height + r[s - 1].elem.depth);
			n += o, a.push({
				type: "kern",
				size: l
			}), a.push(r[s]);
		}
		return {
			children: a,
			depth: i
		};
	}
	if ("top" === e.positionType) {
		for (var h = e.positionData, m = 0; m < e.children.length; m++) {
			var c = e.children[m];
			h -= "kern" === c.type ? c.size : c.elem.height + c.elem.depth;
		}
		t = h;
	} else if ("bottom" === e.positionType) t = -e.positionData;
	else {
		var u = e.children[0];
		if ("elem" !== u.type) throw Error("First child must have type \"elem\".");
		if ("shift" === e.positionType) t = -u.elem.depth - e.positionData;
		else if ("firstBaseline" === e.positionType) t = -u.elem.depth;
		else throw Error("Invalid positionType " + e.positionType + ".");
	}
	return {
		children: e.children,
		depth: t
	};
}, "getVListChildrenAndDepth"), tl = e(function(e, t) {
	for (var r, { children: a, depth: i } = to(e), n = 0, s = 0; s < a.length; s++) {
		var o = a[s];
		if ("elem" === o.type) {
			var l = o.elem;
			n = Math.max(n, l.maxFontSize, l.height);
		}
	}
	n += 2;
	var h = tt(["pstrut"], []);
	h.style.height = ei(n);
	for (var m = [], c = i, u = i, p = i, d = 0; d < a.length; d++) {
		var g = a[d];
		if ("kern" === g.type) p += g.size;
		else {
			var f = g.elem, v = tt(g.wrapperClasses || [], [h, f], void 0, g.wrapperStyle || {});
			v.style.top = ei(-n - p - f.depth), g.marginLeft && (v.style.marginLeft = g.marginLeft), g.marginRight && (v.style.marginRight = g.marginRight), m.push(v), p += f.height + f.depth;
		}
		c = Math.min(c, p), u = Math.max(u, p);
	}
	var b = tt(["vlist"], m);
	if (b.style.height = ei(u), c < 0) {
		var y = tt([], []), x = tt(["vlist"], [y]);
		x.style.height = ei(-c);
		var w = tt(["vlist-s"], [new ed("​")]);
		r = [tt(["vlist-r"], [b, w]), tt(["vlist-r"], [x])];
	} else r = [tt(["vlist-r"], [b])];
	var k = tt(["vlist-t"], r);
	return 2 === r.length && k.classes.push("vlist-t2"), k.height = u, k.depth = -c, k;
}, "makeVList"), th = e((e, t) => {
	var r = tt(["mspace"], [], t), a = ea(e, t);
	return r.style.marginRight = ei(a), r;
}, "makeGlue"), tm = e(function(e, t, r) {
	var a = "";
	switch (e) {
		case "amsrm":
			a = "AMS";
			break;
		case "textrm":
			a = "Main";
			break;
		case "textsf":
			a = "SansSerif";
			break;
		case "texttt":
			a = "Typewriter";
			break;
		default: a = e;
	}
	return a + "-" + ("textbf" === t && "textit" === r ? "BoldItalic" : "textbf" === t ? "Bold" : "textit" === t ? "Italic" : "Regular");
}, "retrieveTextFontName"), tc = {
	mathbf: {
		variant: "bold",
		fontName: "Main-Bold"
	},
	mathrm: {
		variant: "normal",
		fontName: "Main-Regular"
	},
	textit: {
		variant: "italic",
		fontName: "Main-Italic"
	},
	mathit: {
		variant: "italic",
		fontName: "Main-Italic"
	},
	mathnormal: {
		variant: "italic",
		fontName: "Math-Italic"
	},
	mathsfit: {
		variant: "sans-serif-italic",
		fontName: "SansSerif-Italic"
	},
	mathbb: {
		variant: "double-struck",
		fontName: "AMS-Regular"
	},
	mathcal: {
		variant: "script",
		fontName: "Caligraphic-Regular"
	},
	mathfrak: {
		variant: "fraktur",
		fontName: "Fraktur-Regular"
	},
	mathscr: {
		variant: "script",
		fontName: "Script-Regular"
	},
	mathsf: {
		variant: "sans-serif",
		fontName: "SansSerif-Regular"
	},
	mathtt: {
		variant: "monospace",
		fontName: "Typewriter-Regular"
	}
}, tu = {
	vec: [
		"vec",
		.471,
		.714
	],
	oiintSize1: [
		"oiintSize1",
		.957,
		.499
	],
	oiintSize2: [
		"oiintSize2",
		1.472,
		.659
	],
	oiiintSize1: [
		"oiiintSize1",
		1.304,
		.499
	],
	oiiintSize2: [
		"oiiintSize2",
		1.98,
		.659
	]
}, tp = e(function(e, t) {
	var [r, a, i] = tu[e], n = tr(["overlay"], [new eg([new ef(r)], {
		width: ei(a),
		height: ei(i),
		style: "width:" + ei(a),
		viewBox: "0 0 " + 1e3 * a + " " + 1e3 * i,
		preserveAspectRatio: "xMinYMin"
	})], t);
	return n.height = i, n.style.height = ei(i), n.style.width = ei(a), n;
}, "staticSvg"), td = {
	number: 3,
	unit: "mu"
}, tg = {
	number: 4,
	unit: "mu"
}, tf = {
	number: 5,
	unit: "mu"
}, tv = {
	mord: {
		mop: td,
		mbin: tg,
		mrel: tf,
		minner: td
	},
	mop: {
		mord: td,
		mop: td,
		mrel: tf,
		minner: td
	},
	mbin: {
		mord: tg,
		mop: tg,
		mopen: tg,
		minner: tg
	},
	mrel: {
		mord: tf,
		mop: tf,
		mopen: tf,
		minner: tf
	},
	mopen: {},
	mclose: {
		mop: td,
		mbin: tg,
		mrel: tf,
		minner: td
	},
	mpunct: {
		mord: td,
		mop: td,
		mrel: tf,
		mopen: td,
		mclose: td,
		mpunct: td,
		minner: td
	},
	minner: {
		mord: td,
		mop: td,
		mbin: tg,
		mrel: tf,
		mopen: td,
		mpunct: td,
		minner: td
	}
}, tb = {
	mord: { mop: td },
	mop: {
		mord: td,
		mop: td
	},
	mbin: {},
	mrel: {},
	mopen: {},
	mclose: { mop: td },
	mpunct: {},
	minner: { mop: td }
}, ty = {}, tx = {}, tw = {};
function tk(e) {
	for (var { type: t, names: r, props: a, handler: i, htmlBuilder: n, mathmlBuilder: s } = e, o = {
		type: t,
		numArgs: a.numArgs,
		argTypes: a.argTypes,
		allowedInArgument: !!a.allowedInArgument,
		allowedInText: !!a.allowedInText,
		allowedInMath: void 0 === a.allowedInMath || a.allowedInMath,
		numOptionalArgs: a.numOptionalArgs || 0,
		infix: !!a.infix,
		primitive: !!a.primitive,
		handler: i
	}, l = 0; l < r.length; ++l) ty[r[l]] = o;
	t && (n && (tx[t] = n), s && (tw[t] = s));
}
function tS(e) {
	var { type: t, htmlBuilder: r, mathmlBuilder: a } = e;
	tk({
		type: t,
		names: [],
		props: { numArgs: 0 },
		handler() {
			throw Error("Should never be called.");
		},
		htmlBuilder: r,
		mathmlBuilder: a
	});
}
e(tk, "defineFunction"), e(tS, "defineFunctionBuilders");
var tz = e(function(e) {
	return "ordgroup" === e.type && 1 === e.body.length ? e.body[0] : e;
}, "normalizeArgument"), tM = e(function(e) {
	return "ordgroup" === e.type ? e.body : [e];
}, "ordargument"), tA = [
	"leftmost",
	"mbin",
	"mopen",
	"mrel",
	"mop",
	"mpunct"
], tT = [
	"rightmost",
	"mrel",
	"mclose",
	"mpunct"
], tB = {
	display: A.DISPLAY,
	text: A.TEXT,
	script: A.SCRIPT,
	scriptscript: A.SCRIPTSCRIPT
}, tq = {
	mord: "mord",
	mop: "mop",
	mbin: "mbin",
	mrel: "mrel",
	mopen: "mopen",
	mclose: "mclose",
	mpunct: "mpunct",
	minner: "minner"
}, tC = e(function(e, t, r, a) {
	void 0 === a && (a = [null, null]);
	for (var n = [], s = 0; s < e.length; s++) {
		var o = tN(e[s], t);
		if (o instanceof G) {
			var l = o.children;
			n.push(...l);
		} else n.push(o);
	}
	if (e9(n), !r) return n;
	var h = t;
	if (1 === e.length) {
		var m = e[0];
		"sizing" === m.type ? h = t.havingSize(m.size) : "styling" === m.type && (h = t.havingStyle(tB[m.style]));
	}
	var c = tt([a[0] || "leftmost"], [], t), u = tt([a[1] || "rightmost"], [], t), p = "root" === r;
	return tI(n, (e, t) => {
		var r = t.classes[0], a = e.classes[0];
		"mbin" === r && i(tT, a) ? t.classes[0] = "mord" : "mbin" === a && i(tA, r) && (e.classes[0] = "mord");
	}, { node: c }, u, p), tI(n, (e, t) => {
		var r = tE(t), a = tE(e), i = r && a ? e.hasClass("mtight") ? tb[r][a] : tv[r][a] : null;
		if (i) return th(i, h);
	}, { node: c }, u, p), n;
}, "buildExpression"), tI = e(function e(t, r, a, i, n) {
	i && t.push(i);
	for (var s = 0; s < t.length; s++) {
		let i;
		var o = t[s], l = tH(o);
		if (l) {
			e(l.children, r, a, null, n);
			continue;
		}
		var h = !o.hasClass("mspace");
		if (h) {
			var m = r(o, a.node);
			m && (a.insertAfter ? a.insertAfter(m) : (t.unshift(m), s++));
		}
		h ? a.node = o : n && o.hasClass("newline") && (a.node = tt(["leftmost"])), i = s, a.insertAfter = (e) => {
			t.splice(i + 1, 0, e), s++;
		};
	}
	i && t.pop();
}, "traverseNonSpaceNodes"), tH = e(function(e) {
	return e instanceof G || e instanceof ec || e instanceof em && e.hasClass("enclosing") ? e : null;
}, "checkPartialGroup"), tR = e(function e(t, r) {
	var a = tH(t);
	if (a) {
		var i = a.children;
		if (i.length) {
			if ("right" === r) return e(i[i.length - 1], "right");
			if ("left" === r) return e(i[0], "left");
		}
	}
	return t;
}, "getOutermostNode"), tE = e(function(e, t) {
	return e ? (t && (e = tR(e, t)), tq[e.classes[0]] || null) : null;
}, "getTypeOfDomTree"), tO = e(function(e, t) {
	var r = ["nulldelimiter"].concat(e.baseSizingClasses());
	return tt(t.concat(r));
}, "makeNullDelimiter"), tN = e(function(e, t, r) {
	if (!e) return tt();
	if (tx[e.type]) {
		var i = tx[e.type](e, t);
		if (r && t.size !== r.size) {
			i = tt(t.sizingClasses(r), [i], t);
			var n = t.sizeMultiplier / r.sizeMultiplier;
			i.height *= n, i.depth *= n;
		}
		return i;
	}
	throw new a("Got group of unknown type: '" + e.type + "'");
}, "buildGroup");
function tD(e, t) {
	var r = tt(["base"], e, t), a = tt(["strut"]);
	return a.style.height = ei(r.height + r.depth), r.depth && (a.style.verticalAlign = ei(-r.depth)), r.children.unshift(a), r;
}
function tL(e, t) {
	var r, a = null;
	1 === e.length && "tag" === e[0].type && (a = e[0].tag, e = e[0].body);
	var i, n = tC(e, t, "root");
	2 === n.length && n[1].hasClass("tag") && (i = n.pop());
	for (var s = [], o = [], l = 0; l < n.length; l++) if (o.push(n[l]), n[l].hasClass("mbin") || n[l].hasClass("mrel") || n[l].hasClass("allowbreak")) {
		for (var h = !1; l < n.length - 1 && n[l + 1].hasClass("mspace") && !n[l + 1].hasClass("newline");) l++, o.push(n[l]), n[l].hasClass("nobreak") && (h = !0);
		h || (s.push(tD(o, t)), o = []);
	} else n[l].hasClass("newline") && (o.pop(), o.length > 0 && (s.push(tD(o, t)), o = []), s.push(n[l]));
	o.length > 0 && s.push(tD(o, t)), a ? ((r = tD(tC(a, t, !0))).classes = ["tag"], s.push(r)) : i && s.push(i);
	var m = tt(["katex-html"], s);
	if (m.setAttribute("aria-hidden", "true"), r) {
		var c = r.children[0];
		c.style.height = ei(m.height + m.depth), m.depth && (c.style.verticalAlign = ei(-m.depth));
	}
	return m;
}
function tP(e) {
	return new G(e);
}
e(tD, "buildHTMLUnbreakable"), e(tL, "buildHTML"), e(tP, "newDocumentFragment");
var tF = class {
	static {
		e(this, "MathNode");
	}
	constructor(e, t, r) {
		this.type = void 0, this.attributes = void 0, this.children = void 0, this.classes = void 0, this.type = e, this.attributes = {}, this.children = t || [], this.classes = r || [];
	}
	setAttribute(e, t) {
		this.attributes[e] = t;
	}
	getAttribute(e) {
		return this.attributes[e];
	}
	toNode() {
		var e = document.createElementNS("http://www.w3.org/1998/Math/MathML", this.type);
		for (var t in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, t) && e.setAttribute(t, this.attributes[t]);
		this.classes.length > 0 && (e.className = en(this.classes));
		for (var r = 0; r < this.children.length; r++) if (this.children[r] instanceof tV && this.children[r + 1] instanceof tV) {
			for (var a = this.children[r].toText() + this.children[++r].toText(); this.children[r + 1] instanceof tV;) a += this.children[++r].toText();
			e.appendChild(new tV(a).toNode());
		} else e.appendChild(this.children[r].toNode());
		return e;
	}
	toMarkup() {
		var e = "<" + this.type;
		for (var t in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, t) && (e += " " + t + "=\"", e += m(this.attributes[t]), e += "\"");
		this.classes.length > 0 && (e += " class =\"" + m(en(this.classes)) + "\""), e += ">";
		for (var r = 0; r < this.children.length; r++) e += this.children[r].toMarkup();
		return e + ("</" + this.type) + ">";
	}
	toText() {
		return this.children.map((e) => e.toText()).join("");
	}
}, tV = class {
	static {
		e(this, "TextNode");
	}
	constructor(e) {
		this.text = void 0, this.text = e;
	}
	toNode() {
		return document.createTextNode(this.text);
	}
	toMarkup() {
		return m(this.toText());
	}
	toText() {
		return this.text;
	}
}, tG = class {
	static {
		e(this, "SpaceNode");
	}
	constructor(e) {
		this.width = void 0, this.character = void 0, this.width = e, e >= .05555 && e <= .05556 ? this.character = " " : e >= .1666 && e <= .1667 ? this.character = " " : e >= .2222 && e <= .2223 ? this.character = " " : e >= .2777 && e <= .2778 ? this.character = "  " : e >= -.05556 && e <= -.05555 ? this.character = " ⁣" : e >= -.1667 && e <= -.1666 ? this.character = " ⁣" : e >= -.2223 && e <= -.2222 ? this.character = " ⁣" : e >= -.2778 && e <= -.2777 ? this.character = " ⁣" : this.character = null;
	}
	toNode() {
		if (this.character) return document.createTextNode(this.character);
		var e = document.createElementNS("http://www.w3.org/1998/Math/MathML", "mspace");
		return e.setAttribute("width", ei(this.width)), e;
	}
	toMarkup() {
		return this.character ? "<mtext>" + this.character + "</mtext>" : "<mspace width=\"" + ei(this.width) + "\"/>";
	}
	toText() {
		return this.character ? this.character : " ";
	}
}, tU = e(function(e, t, r) {
	return ek[t][e] && ek[t][e].replace && 55349 !== e.charCodeAt(0) && !(eN.hasOwnProperty(e) && r && (r.fontFamily && "tt" === r.fontFamily.slice(4, 6) || r.font && "tt" === r.font.slice(4, 6))) && (e = ek[t][e].replace), new tV(e);
}, "makeText"), t_ = e(function(e) {
	return 1 === e.length ? e[0] : new tF("mrow", e);
}, "makeRow"), tY = e(function(e, t) {
	if ("texttt" === t.fontFamily) return "monospace";
	if ("textsf" === t.fontFamily) return "textit" === t.fontShape && "textbf" === t.fontWeight ? "sans-serif-bold-italic" : "textit" === t.fontShape ? "sans-serif-italic" : "textbf" === t.fontWeight ? "bold-sans-serif" : "sans-serif";
	if ("textit" === t.fontShape && "textbf" === t.fontWeight) return "bold-italic";
	if ("textit" === t.fontShape) return "italic";
	if ("textbf" === t.fontWeight) return "bold";
	var r = t.font;
	if (!r || "mathnormal" === r) return null;
	var a = e.mode;
	if ("mathit" === r) return "italic";
	if ("boldsymbol" === r) return "textord" === e.type ? "bold" : "bold-italic";
	if ("mathbf" === r) return "bold";
	if ("mathbb" === r) return "double-struck";
	if ("mathsfit" === r) return "sans-serif-italic";
	if ("mathfrak" === r) return "fraktur";
	if ("mathscr" === r || "mathcal" === r) return "script";
	if ("mathsf" === r) return "sans-serif";
	if ("mathtt" === r) return "monospace";
	var n = e.text;
	return i(["\\imath", "\\jmath"], n) ? null : (ek[a][n] && ek[a][n].replace && (n = ek[a][n].replace), X(n, tc[r].fontName, a) ? tc[r].variant : null);
}, "getVariant");
function tW(e) {
	if (!e) return !1;
	if ("mi" === e.type && 1 === e.children.length) {
		var t = e.children[0];
		return t instanceof tV && "." === t.text;
	}
	if ("mo" !== e.type || 1 !== e.children.length || "true" !== e.getAttribute("separator") || "0em" !== e.getAttribute("lspace") || "0em" !== e.getAttribute("rspace")) return !1;
	var r = e.children[0];
	return r instanceof tV && "," === r.text;
}
e(tW, "isNumberPunctuation");
var tX = e(function(e, t, r) {
	if (1 === e.length) {
		var a = tj(e[0], t);
		return r && a instanceof tF && "mo" === a.type && (a.setAttribute("lspace", "0em"), a.setAttribute("rspace", "0em")), [a];
	}
	for (var i, n = [], s = 0; s < e.length; s++) {
		var o = tj(e[s], t);
		if (o instanceof tF && i instanceof tF) {
			if ("mtext" === o.type && "mtext" === i.type && o.getAttribute("mathvariant") === i.getAttribute("mathvariant")) {
				i.children.push(...o.children);
				continue;
			} else if ("mn" === o.type && "mn" === i.type) {
				i.children.push(...o.children);
				continue;
			} else if (tW(o) && "mn" === i.type) {
				i.children.push(...o.children);
				continue;
			} else if ("mn" === o.type && tW(i)) o.children = [...i.children, ...o.children], n.pop();
			else if (("msup" === o.type || "msub" === o.type) && o.children.length >= 1 && ("mn" === i.type || tW(i))) {
				var l = o.children[0];
				l instanceof tF && "mn" === l.type && (l.children = [...i.children, ...l.children], n.pop());
			} else if ("mi" === i.type && 1 === i.children.length) {
				var h = i.children[0];
				if (h instanceof tV && "̸" === h.text && ("mo" === o.type || "mi" === o.type || "mn" === o.type)) {
					var m = o.children[0];
					m instanceof tV && m.text.length > 0 && (m.text = m.text.slice(0, 1) + "̸" + m.text.slice(1), n.pop());
				}
			}
		}
		n.push(o), i = o;
	}
	return n;
}, "buildExpression"), t$ = e(function(e, t, r) {
	return t_(tX(e, t, r));
}, "buildExpressionRow"), tj = e(function(e, t) {
	if (!e) return new tF("mrow");
	if (tw[e.type]) return tw[e.type](e, t);
	throw new a("Got group of unknown type: '" + e.type + "'");
}, "buildGroup");
function tZ(e, t, r, a, n) {
	var s, o = tX(e, r);
	s = 1 === o.length && o[0] instanceof tF && i(["mrow", "mtable"], o[0].type) ? o[0] : new tF("mrow", o);
	var l = new tF("annotation", [new tV(t)]);
	l.setAttribute("encoding", "application/x-tex");
	var h = new tF("semantics", [s, l]), m = new tF("math", [h]);
	return m.setAttribute("xmlns", "http://www.w3.org/1998/Math/MathML"), a && m.setAttribute("display", "block"), tt([n ? "katex" : "katex-mathml"], [m]);
}
e(tZ, "buildMathML");
var tK = e(function(e) {
	return new Q({
		style: e.displayMode ? A.DISPLAY : A.TEXT,
		maxSize: e.maxSize,
		minRuleThickness: e.minRuleThickness
	});
}, "optionsFromSettings"), tJ = e(function(e, t) {
	if (t.displayMode) {
		var r = ["katex-display"];
		t.leqno && r.push("leqno"), t.fleqn && r.push("fleqn"), e = tt(r, [e]);
	}
	return e;
}, "displayWrap"), tQ = e(function(e, t, r) {
	var i = tK(r);
	return "mathml" === r.output ? tZ(e, t, i, r.displayMode, !0) : tJ("html" === r.output ? tt(["katex"], [tL(e, i)]) : tt(["katex"], [tZ(e, t, i, r.displayMode, !1), tL(e, i)]), r);
}, "buildTree"), t0 = e(function(e, t, r) {
	return tJ(tt(["katex"], [tL(e, tK(r))]), r);
}, "buildHTMLTree"), t1 = {
	widehat: "^",
	widecheck: "ˇ",
	widetilde: "~",
	utilde: "~",
	overleftarrow: "←",
	underleftarrow: "←",
	xleftarrow: "←",
	overrightarrow: "→",
	underrightarrow: "→",
	xrightarrow: "→",
	underbrace: "⏟",
	overbrace: "⏞",
	overgroup: "⏠",
	undergroup: "⏡",
	overleftrightarrow: "↔",
	underleftrightarrow: "↔",
	xleftrightarrow: "↔",
	Overrightarrow: "⇒",
	xRightarrow: "⇒",
	overleftharpoon: "↼",
	xleftharpoonup: "↼",
	overrightharpoon: "⇀",
	xrightharpoonup: "⇀",
	xLeftarrow: "⇐",
	xLeftrightarrow: "⇔",
	xhookleftarrow: "↩",
	xhookrightarrow: "↪",
	xmapsto: "↦",
	xrightharpoondown: "⇁",
	xleftharpoondown: "↽",
	xrightleftharpoons: "⇌",
	xleftrightharpoons: "⇋",
	xtwoheadleftarrow: "↞",
	xtwoheadrightarrow: "↠",
	xlongequal: "=",
	xtofrom: "⇄",
	xrightleftarrows: "⇄",
	xrightequilibrium: "⇌",
	xleftequilibrium: "⇋",
	"\\cdrightarrow": "→",
	"\\cdleftarrow": "←",
	"\\cdlongequal": "="
}, t4 = e(function(e) {
	var t = new tF("mo", [new tV(t1[e.replace(/^\\/, "")])]);
	return t.setAttribute("stretchy", "true"), t;
}, "mathMLnode"), t5 = {
	overrightarrow: [
		["rightarrow"],
		.888,
		522,
		"xMaxYMin"
	],
	overleftarrow: [
		["leftarrow"],
		.888,
		522,
		"xMinYMin"
	],
	underrightarrow: [
		["rightarrow"],
		.888,
		522,
		"xMaxYMin"
	],
	underleftarrow: [
		["leftarrow"],
		.888,
		522,
		"xMinYMin"
	],
	xrightarrow: [
		["rightarrow"],
		1.469,
		522,
		"xMaxYMin"
	],
	"\\cdrightarrow": [
		["rightarrow"],
		3,
		522,
		"xMaxYMin"
	],
	xleftarrow: [
		["leftarrow"],
		1.469,
		522,
		"xMinYMin"
	],
	"\\cdleftarrow": [
		["leftarrow"],
		3,
		522,
		"xMinYMin"
	],
	Overrightarrow: [
		["doublerightarrow"],
		.888,
		560,
		"xMaxYMin"
	],
	xRightarrow: [
		["doublerightarrow"],
		1.526,
		560,
		"xMaxYMin"
	],
	xLeftarrow: [
		["doubleleftarrow"],
		1.526,
		560,
		"xMinYMin"
	],
	overleftharpoon: [
		["leftharpoon"],
		.888,
		522,
		"xMinYMin"
	],
	xleftharpoonup: [
		["leftharpoon"],
		.888,
		522,
		"xMinYMin"
	],
	xleftharpoondown: [
		["leftharpoondown"],
		.888,
		522,
		"xMinYMin"
	],
	overrightharpoon: [
		["rightharpoon"],
		.888,
		522,
		"xMaxYMin"
	],
	xrightharpoonup: [
		["rightharpoon"],
		.888,
		522,
		"xMaxYMin"
	],
	xrightharpoondown: [
		["rightharpoondown"],
		.888,
		522,
		"xMaxYMin"
	],
	xlongequal: [
		["longequal"],
		.888,
		334,
		"xMinYMin"
	],
	"\\cdlongequal": [
		["longequal"],
		3,
		334,
		"xMinYMin"
	],
	xtwoheadleftarrow: [
		["twoheadleftarrow"],
		.888,
		334,
		"xMinYMin"
	],
	xtwoheadrightarrow: [
		["twoheadrightarrow"],
		.888,
		334,
		"xMaxYMin"
	],
	overleftrightarrow: [
		["leftarrow", "rightarrow"],
		.888,
		522
	],
	overbrace: [
		[
			"leftbrace",
			"midbrace",
			"rightbrace"
		],
		1.6,
		548
	],
	underbrace: [
		[
			"leftbraceunder",
			"midbraceunder",
			"rightbraceunder"
		],
		1.6,
		548
	],
	underleftrightarrow: [
		["leftarrow", "rightarrow"],
		.888,
		522
	],
	xleftrightarrow: [
		["leftarrow", "rightarrow"],
		1.75,
		522
	],
	xLeftrightarrow: [
		["doubleleftarrow", "doublerightarrow"],
		1.75,
		560
	],
	xrightleftharpoons: [
		["leftharpoondownplus", "rightharpoonplus"],
		1.75,
		716
	],
	xleftrightharpoons: [
		["leftharpoonplus", "rightharpoondownplus"],
		1.75,
		716
	],
	xhookleftarrow: [
		["leftarrow", "righthook"],
		1.08,
		522
	],
	xhookrightarrow: [
		["lefthook", "rightarrow"],
		1.08,
		522
	],
	overlinesegment: [
		["leftlinesegment", "rightlinesegment"],
		.888,
		522
	],
	underlinesegment: [
		["leftlinesegment", "rightlinesegment"],
		.888,
		522
	],
	overgroup: [
		["leftgroup", "rightgroup"],
		.888,
		342
	],
	undergroup: [
		["leftgroupunder", "rightgroupunder"],
		.888,
		342
	],
	xmapsto: [
		["leftmapsto", "rightarrow"],
		1.5,
		522
	],
	xtofrom: [
		["leftToFrom", "rightToFrom"],
		1.75,
		528
	],
	xrightleftarrows: [
		["baraboveleftarrow", "rightarrowabovebar"],
		1.75,
		901
	],
	xrightequilibrium: [
		["baraboveshortleftharpoon", "rightharpoonaboveshortbar"],
		1.75,
		716
	],
	xleftequilibrium: [
		["shortbaraboveleftharpoon", "shortrightharpoonabovebar"],
		1.75,
		716
	]
}, t6 = e(function(e) {
	return "ordgroup" === e.type ? e.body.length : 1;
}, "groupLength"), t7 = e(function(t, r) {
	function a() {
		var e = 4e5, a = t.label.slice(1);
		if (i([
			"widehat",
			"widecheck",
			"widetilde",
			"utilde"
		], a)) {
			var n, s, o, l = t6(t.base);
			if (l > 5) "widehat" === a || "widecheck" === a ? (n = 420, e = 2364, o = .42, s = a + "4") : (n = 312, e = 2340, o = .34, s = "tilde4");
			else {
				var h = [
					1,
					1,
					2,
					2,
					3,
					3
				][l];
				"widehat" === a || "widecheck" === a ? (e = [
					0,
					1062,
					2364,
					2364,
					2364
				][h], n = [
					0,
					239,
					300,
					360,
					420
				][h], o = [
					0,
					.24,
					.3,
					.3,
					.36,
					.42
				][h], s = a + h) : (e = [
					0,
					600,
					1033,
					2339,
					2340
				][h], n = [
					0,
					260,
					286,
					306,
					312
				][h], o = [
					0,
					.26,
					.286,
					.3,
					.306,
					.34
				][h], s = "tilde" + h);
			}
			return {
				span: tr([], [new eg([new ef(s)], {
					width: "100%",
					height: ei(o),
					viewBox: "0 0 " + e + " " + n,
					preserveAspectRatio: "none"
				})], r),
				minWidth: 0,
				height: o
			};
		}
		var m, c, u = [], p = t5[a], [d, g, f] = p, v = f / 1e3, b = d.length;
		if (1 === b) m = ["hide-tail"], c = [p[3]];
		else if (2 === b) m = ["halfarrow-left", "halfarrow-right"], c = ["xMinYMin", "xMaxYMin"];
		else if (3 === b) m = [
			"brace-left",
			"brace-center",
			"brace-right"
		], c = [
			"xMinYMin",
			"xMidYMin",
			"xMaxYMin"
		];
		else throw Error(`Correct katexImagesData or update code here to support
                    ` + b + " children.");
		for (var y = 0; y < b; y++) {
			var x = new eg([new ef(d[y])], {
				width: "400em",
				height: ei(v),
				viewBox: "0 0 " + e + " " + f,
				preserveAspectRatio: c[y] + " slice"
			}), w = tr([m[y]], [x], r);
			if (1 === b) return {
				span: w,
				minWidth: g,
				height: v
			};
			w.style.height = ei(v), u.push(w);
		}
		return {
			span: tt(["stretchy"], u, r),
			minWidth: g,
			height: v
		};
	}
	e(a, "buildSvgSpan_");
	var { span: n, minWidth: s, height: o } = a();
	return n.height = o, n.style.height = ei(o), s > 0 && (n.style.minWidth = ei(s)), n;
}, "svgSpan"), t3 = {
	encloseSpan: e(function(e, t, r, a, i) {
		var n, s = e.height + e.depth + r + a;
		if (/fbox|color|angl/.test(t)) {
			if (n = tt(["stretchy", t], [], i), "fbox" === t) {
				var o = i.color && i.getColor();
				o && (n.style.borderColor = o);
			}
		} else {
			var l = [];
			/^[bx]cancel$/.test(t) && l.push(new ev({
				x1: "0",
				y1: "0",
				x2: "100%",
				y2: "100%",
				"stroke-width": "0.046em"
			})), /^x?cancel$/.test(t) && l.push(new ev({
				x1: "0",
				y1: "100%",
				x2: "100%",
				y2: "0",
				"stroke-width": "0.046em"
			})), n = tr([], [new eg(l, {
				width: "100%",
				height: ei(s)
			})], i);
		}
		return n.height = s, n.style.height = ei(s), n;
	}, "encloseSpan"),
	mathMLnode: t4,
	svgSpan: t7
};
function t8(e, t) {
	if (!e || e.type !== t) throw Error("Expected node of type " + t + ", but got " + (e ? "node of type " + e.type : String(e)));
	return e;
}
function t2(e) {
	var t = t9(e);
	if (!t) throw Error("Expected node of symbol group type, but got " + (e ? "node of type " + e.type : String(e)));
	return t;
}
function t9(e) {
	return e && ("atom" === e.type || ew.hasOwnProperty(e.type)) ? e : null;
}
e(t8, "assertNodeType"), e(t2, "assertSymbolNodeType"), e(t9, "checkSymbolNodeType");
var re = e((e, t) => {
	e && "supsub" === e.type ? (n = (s = t8(e.base, "accent")).base, e.base = n, o = ey(tN(e, t)), e.base = s) : n = (s = t8(e, "accent")).base;
	var r = tN(n, t.havingCrampedStyle()), a = s.isShifty && u(n), i = 0;
	a && (i = eb(tN(c(n), t.havingCrampedStyle())).skew);
	var n, s, o, l, h = "\\c" === s.label, m = h ? r.height + r.depth : Math.min(r.height, t.fontMetrics().xHeight);
	if (s.isStretchy) l = tl({
		positionType: "firstBaseline",
		children: [{
			type: "elem",
			elem: r
		}, {
			type: "elem",
			elem: l = t3.svgSpan(s, t),
			wrapperClasses: ["svg-align"],
			wrapperStyle: i > 0 ? {
				width: "calc(100% - " + ei(2 * i) + ")",
				marginLeft: ei(2 * i)
			} : void 0
		}]
	}, t);
	else {
		"\\vec" === s.label ? (p = tp("vec", t), d = tu.vec[1]) : ((p = eb(p = e8({
			mode: s.mode,
			text: s.label
		}, t, "textord"))).italic = 0, d = p.width, h && (m += p.depth)), l = tt(["accent-body"], [p]);
		var p, d, g = "\\textcircled" === s.label;
		g && (l.classes.push("accent-full"), m = r.height);
		var f = i;
		g || (f -= d / 2), l.style.left = ei(f), "\\textcircled" === s.label && (l.style.top = ".2em"), l = tl({
			positionType: "firstBaseline",
			children: [
				{
					type: "elem",
					elem: r
				},
				{
					type: "kern",
					size: -m
				},
				{
					type: "elem",
					elem: l
				}
			]
		}, t);
	}
	var v = tt(["mord", "accent"], [l], t);
	return o ? (o.children[0] = v, o.height = Math.max(v.height, o.height), o.classes[0] = "mord", o) : v;
}, "htmlBuilder$a"), rt = e((e, t) => {
	var r = e.isStretchy ? t3.mathMLnode(e.label) : new tF("mo", [tU(e.label, e.mode)]), a = new tF("mover", [tj(e.base, t), r]);
	return a.setAttribute("accent", "true"), a;
}, "mathmlBuilder$9"), rr = new RegExp([
	"\\acute",
	"\\grave",
	"\\ddot",
	"\\tilde",
	"\\bar",
	"\\breve",
	"\\check",
	"\\hat",
	"\\vec",
	"\\dot",
	"\\mathring"
].map((e) => "\\" + e).join("|"));
tk({
	type: "accent",
	names: [
		"\\acute",
		"\\grave",
		"\\ddot",
		"\\tilde",
		"\\bar",
		"\\breve",
		"\\check",
		"\\hat",
		"\\vec",
		"\\dot",
		"\\mathring",
		"\\widecheck",
		"\\widehat",
		"\\widetilde",
		"\\overrightarrow",
		"\\overleftarrow",
		"\\Overrightarrow",
		"\\overleftrightarrow",
		"\\overgroup",
		"\\overlinesegment",
		"\\overleftharpoon",
		"\\overrightharpoon"
	],
	props: { numArgs: 1 },
	handler: e((e, t) => {
		var r = tz(t[0]), a = !rr.test(e.funcName), i = !a || "\\widehat" === e.funcName || "\\widetilde" === e.funcName || "\\widecheck" === e.funcName;
		return {
			type: "accent",
			mode: e.parser.mode,
			label: e.funcName,
			isStretchy: a,
			isShifty: i,
			base: r
		};
	}, "handler"),
	htmlBuilder: re,
	mathmlBuilder: rt
}), tk({
	type: "accent",
	names: [
		"\\'",
		"\\`",
		"\\^",
		"\\~",
		"\\=",
		"\\u",
		"\\.",
		"\\\"",
		"\\c",
		"\\r",
		"\\H",
		"\\v",
		"\\textcircled"
	],
	props: {
		numArgs: 1,
		allowedInText: !0,
		allowedInMath: !0,
		argTypes: ["primitive"]
	},
	handler: e((e, t) => {
		var r = t[0], a = e.parser.mode;
		return "math" === a && (e.parser.settings.reportNonstrict("mathVsTextAccents", "LaTeX's accent " + e.funcName + " works only in text mode"), a = "text"), {
			type: "accent",
			mode: a,
			label: e.funcName,
			isStretchy: !1,
			isShifty: !0,
			base: r
		};
	}, "handler"),
	htmlBuilder: re,
	mathmlBuilder: rt
}), tk({
	type: "accentUnder",
	names: [
		"\\underleftarrow",
		"\\underrightarrow",
		"\\underleftrightarrow",
		"\\undergroup",
		"\\underlinesegment",
		"\\utilde"
	],
	props: { numArgs: 1 },
	handler: e((e, t) => {
		var { parser: r, funcName: a } = e, i = t[0];
		return {
			type: "accentUnder",
			mode: r.mode,
			label: a,
			base: i
		};
	}, "handler"),
	htmlBuilder: e((e, t) => {
		var r = tN(e.base, t), a = t3.svgSpan(e, t), i = .12 * ("\\utilde" === e.label);
		return tt(["mord", "accentunder"], [tl({
			positionType: "top",
			positionData: r.height,
			children: [
				{
					type: "elem",
					elem: a,
					wrapperClasses: ["svg-align"]
				},
				{
					type: "kern",
					size: i
				},
				{
					type: "elem",
					elem: r
				}
			]
		}, t)], t);
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => {
		var r = t3.mathMLnode(e.label), a = new tF("munder", [tj(e.base, t), r]);
		return a.setAttribute("accentunder", "true"), a;
	}, "mathmlBuilder")
});
var ra = e((e) => {
	var t = new tF("mpadded", e ? [e] : []);
	return t.setAttribute("width", "+0.6em"), t.setAttribute("lspace", "0.3em"), t;
}, "paddedNode");
function ri(e, t) {
	var r = tC(e.body, t, !0);
	return tt([e.mclass], r, t);
}
function rn(e, t) {
	var r, a = tX(e.body, t);
	return "minner" === e.mclass ? r = new tF("mpadded", a) : "mord" === e.mclass ? e.isCharacterBox ? (r = a[0]).type = "mi" : r = new tF("mi", a) : (e.isCharacterBox ? (r = a[0]).type = "mo" : r = new tF("mo", a), "mbin" === e.mclass ? (r.attributes.lspace = "0.22em", r.attributes.rspace = "0.22em") : "mpunct" === e.mclass ? (r.attributes.lspace = "0em", r.attributes.rspace = "0.17em") : "mopen" === e.mclass || "mclose" === e.mclass ? (r.attributes.lspace = "0em", r.attributes.rspace = "0em") : "minner" === e.mclass && (r.attributes.lspace = "0.0556em", r.attributes.width = "+0.1111em")), r;
}
tk({
	type: "xArrow",
	names: [
		"\\xleftarrow",
		"\\xrightarrow",
		"\\xLeftarrow",
		"\\xRightarrow",
		"\\xleftrightarrow",
		"\\xLeftrightarrow",
		"\\xhookleftarrow",
		"\\xhookrightarrow",
		"\\xmapsto",
		"\\xrightharpoondown",
		"\\xrightharpoonup",
		"\\xleftharpoondown",
		"\\xleftharpoonup",
		"\\xrightleftharpoons",
		"\\xleftrightharpoons",
		"\\xlongequal",
		"\\xtwoheadrightarrow",
		"\\xtwoheadleftarrow",
		"\\xtofrom",
		"\\xrightleftarrows",
		"\\xrightequilibrium",
		"\\xleftequilibrium",
		"\\\\cdrightarrow",
		"\\\\cdleftarrow",
		"\\\\cdlongequal"
	],
	props: {
		numArgs: 1,
		numOptionalArgs: 1
	},
	handler(e, t, r) {
		var { parser: a, funcName: i } = e;
		return {
			type: "xArrow",
			mode: a.mode,
			label: i,
			body: t[0],
			below: r[0]
		};
	},
	htmlBuilder(e, t) {
		var r, a, i = t.style, n = t.havingStyle(i.sup()), s = ts(tN(e.body, n, t), t), o = "\\x" === e.label.slice(0, 2) ? "x" : "cd";
		s.classes.push(o + "-arrow-pad"), e.below && (n = t.havingStyle(i.sub()), (r = ts(tN(e.below, n, t), t)).classes.push(o + "-arrow-pad"));
		var l = t3.svgSpan(e, t), h = -t.fontMetrics().axisHeight + .5 * l.height, m = -t.fontMetrics().axisHeight - .5 * l.height - .111;
		if ((s.depth > .25 || "\\xleftequilibrium" === e.label) && (m -= s.depth), r) {
			var c = -t.fontMetrics().axisHeight + r.height + .5 * l.height + .111;
			a = tl({
				positionType: "individualShift",
				children: [
					{
						type: "elem",
						elem: s,
						shift: m
					},
					{
						type: "elem",
						elem: l,
						shift: h
					},
					{
						type: "elem",
						elem: r,
						shift: c
					}
				]
			}, t);
		} else a = tl({
			positionType: "individualShift",
			children: [{
				type: "elem",
				elem: s,
				shift: m
			}, {
				type: "elem",
				elem: l,
				shift: h
			}]
		}, t);
		return a.children[0].children[0].children[1].classes.push("svg-align"), tt(["mrel", "x-arrow"], [a], t);
	},
	mathmlBuilder(e, t) {
		var r, a = t3.mathMLnode(e.label);
		if (a.setAttribute("minsize", "x" === e.label.charAt(0) ? "1.75em" : "3.0em"), e.body) {
			var i = ra(tj(e.body, t));
			r = e.below ? new tF("munderover", [
				a,
				ra(tj(e.below, t)),
				i
			]) : new tF("mover", [a, i]);
		} else r = e.below ? new tF("munder", [a, ra(tj(e.below, t))]) : new tF("mover", [a, r = ra()]);
		return r;
	}
}), e(ri, "htmlBuilder$9"), e(rn, "mathmlBuilder$8"), tk({
	type: "mclass",
	names: [
		"\\mathord",
		"\\mathbin",
		"\\mathrel",
		"\\mathopen",
		"\\mathclose",
		"\\mathpunct",
		"\\mathinner"
	],
	props: {
		numArgs: 1,
		primitive: !0
	},
	handler(e, t) {
		var { parser: r, funcName: a } = e, i = t[0];
		return {
			type: "mclass",
			mode: r.mode,
			mclass: "m" + a.slice(5),
			body: tM(i),
			isCharacterBox: u(i)
		};
	},
	htmlBuilder: ri,
	mathmlBuilder: rn
});
var rs = e((e) => {
	var t = "ordgroup" === e.type && e.body.length ? e.body[0] : e;
	return "atom" === t.type && ("bin" === t.family || "rel" === t.family) ? "m" + t.family : "mord";
}, "binrelClass");
tk({
	type: "mclass",
	names: ["\\@binrel"],
	props: { numArgs: 2 },
	handler(e, t) {
		var { parser: r } = e;
		return {
			type: "mclass",
			mode: r.mode,
			mclass: rs(t[0]),
			body: tM(t[1]),
			isCharacterBox: u(t[1])
		};
	}
}), tk({
	type: "mclass",
	names: [
		"\\stackrel",
		"\\overset",
		"\\underset"
	],
	props: { numArgs: 2 },
	handler(e, t) {
		var r, { parser: a, funcName: i } = e, n = t[1], s = t[0];
		r = "\\stackrel" !== i ? rs(n) : "mrel";
		var o = {
			type: "op",
			mode: n.mode,
			limits: !0,
			alwaysHandleSupSub: !0,
			parentIsSupSub: !1,
			symbol: !1,
			suppressBaseShift: "\\stackrel" !== i,
			body: tM(n)
		}, l = {
			type: "supsub",
			mode: s.mode,
			base: o,
			sup: "\\underset" === i ? null : s,
			sub: "\\underset" === i ? s : null
		};
		return {
			type: "mclass",
			mode: a.mode,
			mclass: r,
			body: [l],
			isCharacterBox: u(l)
		};
	},
	htmlBuilder: ri,
	mathmlBuilder: rn
}), tk({
	type: "pmb",
	names: ["\\pmb"],
	props: {
		numArgs: 1,
		allowedInText: !0
	},
	handler(e, t) {
		var { parser: r } = e;
		return {
			type: "pmb",
			mode: r.mode,
			mclass: rs(t[0]),
			body: tM(t[0])
		};
	},
	htmlBuilder(e, t) {
		var r = tC(e.body, t, !0), a = tt([e.mclass], r, t);
		return a.style.textShadow = "0.02em 0.01em 0.04px", a;
	},
	mathmlBuilder(e, t) {
		var r = new tF("mstyle", tX(e.body, t));
		return r.setAttribute("style", "text-shadow: 0.02em 0.01em 0.04px"), r;
	}
});
var ro = {
	">": "\\\\cdrightarrow",
	"<": "\\\\cdleftarrow",
	"=": "\\\\cdlongequal",
	A: "\\uparrow",
	V: "\\downarrow",
	"|": "\\Vert",
	".": "no arrow"
}, rl = e(() => ({
	type: "styling",
	body: [],
	mode: "math",
	style: "display"
}), "newCell"), rh = e((e) => "textord" === e.type && "@" === e.text, "isStartOfArrow"), rm = e((e, t) => ("mathord" === e.type || "atom" === e.type) && e.text === t, "isLabelEnd");
function rc(e, t, r) {
	var a = ro[e];
	switch (a) {
		case "\\\\cdrightarrow":
		case "\\\\cdleftarrow": return r.callFunction(a, [t[0]], [t[1]]);
		case "\\uparrow":
		case "\\downarrow":
			var i = r.callFunction("\\\\cdleft", [t[0]], []), n = r.callFunction("\\Big", [{
				type: "atom",
				text: a,
				mode: "math",
				family: "rel"
			}], []), s = r.callFunction("\\\\cdright", [t[1]], []);
			return r.callFunction("\\\\cdparent", [{
				type: "ordgroup",
				mode: "math",
				body: [
					i,
					n,
					s
				]
			}], []);
		case "\\\\cdlongequal": return r.callFunction("\\\\cdlongequal", [], []);
		case "\\Vert": return r.callFunction("\\Big", [{
			type: "textord",
			text: "\\Vert",
			mode: "math"
		}], []);
		default: return {
			type: "textord",
			text: " ",
			mode: "math"
		};
	}
}
function ru(e) {
	var t = [];
	for (e.gullet.beginGroup(), e.gullet.macros.set("\\cr", "\\\\\\relax"), e.gullet.beginGroup();;) {
		t.push(e.parseExpression(!1, "\\\\")), e.gullet.endGroup(), e.gullet.beginGroup();
		var r = e.fetch().text;
		if ("&" === r || "\\\\" === r) e.consume();
		else if ("\\end" === r) {
			0 === t[t.length - 1].length && t.pop();
			break;
		} else throw new a("Expected \\\\ or \\cr or \\end", e.nextToken);
	}
	for (var i = [], n = [i], s = 0; s < t.length; s++) {
		for (var o = t[s], l = rl(), h = 0; h < o.length; h++) if (rh(o[h])) {
			i.push(l);
			var m = t2(o[h += 1]).text, c = [, ,];
			if (c[0] = {
				type: "ordgroup",
				mode: "math",
				body: []
			}, c[1] = {
				type: "ordgroup",
				mode: "math",
				body: []
			}, !("=|.".indexOf(m) > -1)) if ("<>AV".indexOf(m) > -1) for (var u = 0; u < 2; u++) {
				for (var p = !0, d = h + 1; d < o.length; d++) {
					if (rm(o[d], m)) {
						p = !1, h = d;
						break;
					}
					if (rh(o[d])) throw new a("Missing a " + m + " character to complete a CD arrow.", o[d]);
					c[u].body.push(o[d]);
				}
				if (p) throw new a("Missing a " + m + " character to complete a CD arrow.", o[h]);
			}
			else throw new a("Expected one of \"<>AV=|.\" after @", o[h]);
			var g = {
				type: "styling",
				body: [rc(m, c, e)],
				mode: "math",
				style: "display"
			};
			i.push(g), l = rl();
		} else l.body.push(o[h]);
		s % 2 == 0 ? i.push(l) : i.shift(), i = [], n.push(i);
	}
	e.gullet.endGroup(), e.gullet.endGroup();
	var f = Array(n[0].length).fill({
		type: "align",
		align: "c",
		pregap: .25,
		postgap: .25
	});
	return {
		type: "array",
		mode: "math",
		body: n,
		arraystretch: 1,
		addJot: !0,
		rowGaps: [null],
		cols: f,
		colSeparationType: "CD",
		hLinesBeforeRow: Array(n.length + 1).fill([])
	};
}
e(rc, "cdArrow"), e(ru, "parseCD"), tk({
	type: "cdlabel",
	names: ["\\\\cdleft", "\\\\cdright"],
	props: { numArgs: 1 },
	handler(e, t) {
		var { parser: r, funcName: a } = e;
		return {
			type: "cdlabel",
			mode: r.mode,
			side: a.slice(4),
			label: t[0]
		};
	},
	htmlBuilder(e, t) {
		var r = t.havingStyle(t.style.sup()), a = ts(tN(e.label, r, t), t);
		return a.classes.push("cd-label-" + e.side), a.style.bottom = ei(.8 - a.depth), a.height = 0, a.depth = 0, a;
	},
	mathmlBuilder(e, t) {
		var r = new tF("mrow", [tj(e.label, t)]);
		return (r = new tF("mpadded", [r])).setAttribute("width", "0"), "left" === e.side && r.setAttribute("lspace", "-1width"), r.setAttribute("voffset", "0.7em"), (r = new tF("mstyle", [r])).setAttribute("displaystyle", "false"), r.setAttribute("scriptlevel", "1"), r;
	}
}), tk({
	type: "cdlabelparent",
	names: ["\\\\cdparent"],
	props: { numArgs: 1 },
	handler(e, t) {
		var { parser: r } = e;
		return {
			type: "cdlabelparent",
			mode: r.mode,
			fragment: t[0]
		};
	},
	htmlBuilder(e, t) {
		var r = ts(tN(e.fragment, t), t);
		return r.classes.push("cd-vert-arrow"), r;
	},
	mathmlBuilder: (e, t) => new tF("mrow", [tj(e.fragment, t)])
}), tk({
	type: "textord",
	names: ["\\@char"],
	props: {
		numArgs: 1,
		allowedInText: !0
	},
	handler(e, t) {
		for (var { parser: r } = e, i = t8(t[0], "ordgroup").body, n = "", s = 0; s < i.length; s++) n += t8(i[s], "textord").text;
		var o, l = parseInt(n);
		if (isNaN(l)) throw new a("\\@char has non-numeric argument " + n);
		if (l < 0 || l >= 1114111) throw new a("\\@char with invalid code point " + n);
		return l <= 65535 ? o = String.fromCharCode(l) : (l -= 65536, o = String.fromCharCode((l >> 10) + 55296, (1023 & l) + 56320)), {
			type: "textord",
			mode: r.mode,
			text: o
		};
	}
});
var rp = e((e, t) => tn(tC(e.body, t.withColor(e.color), !1)), "htmlBuilder$8"), rd = e((e, t) => {
	var r = new tF("mstyle", tX(e.body, t.withColor(e.color)));
	return r.setAttribute("mathcolor", e.color), r;
}, "mathmlBuilder$7");
tk({
	type: "color",
	names: ["\\textcolor"],
	props: {
		numArgs: 2,
		allowedInText: !0,
		argTypes: ["color", "original"]
	},
	handler(e, t) {
		var { parser: r } = e, a = t8(t[0], "color-token").color, i = t[1];
		return {
			type: "color",
			mode: r.mode,
			color: a,
			body: tM(i)
		};
	},
	htmlBuilder: rp,
	mathmlBuilder: rd
}), tk({
	type: "color",
	names: ["\\color"],
	props: {
		numArgs: 1,
		allowedInText: !0,
		argTypes: ["color"]
	},
	handler(e, t) {
		var { parser: r, breakOnTokenText: a } = e, i = t8(t[0], "color-token").color;
		r.gullet.macros.set("\\current@color", i);
		var n = r.parseExpression(!0, a);
		return {
			type: "color",
			mode: r.mode,
			color: i,
			body: n
		};
	},
	htmlBuilder: rp,
	mathmlBuilder: rd
}), tk({
	type: "cr",
	names: ["\\\\"],
	props: {
		numArgs: 0,
		numOptionalArgs: 0,
		allowedInText: !0
	},
	handler(e, t, r) {
		var { parser: a } = e, i = "[" === a.gullet.future().text ? a.parseSizeGroup(!0) : null, n = !a.settings.displayMode || !a.settings.useStrictBehavior("newLineInDisplayMode", "In LaTeX, \\\\ or \\newline does nothing in display mode");
		return {
			type: "cr",
			mode: a.mode,
			newLine: n,
			size: i && t8(i, "size").value
		};
	},
	htmlBuilder(e, t) {
		var r = tt(["mspace"], [], t);
		return e.newLine && (r.classes.push("newline"), e.size && (r.style.marginTop = ei(ea(e.size, t)))), r;
	},
	mathmlBuilder(e, t) {
		var r = new tF("mspace");
		return e.newLine && (r.setAttribute("linebreak", "newline"), e.size && r.setAttribute("height", ei(ea(e.size, t)))), r;
	}
});
var rg = {
	"\\global": "\\global",
	"\\long": "\\\\globallong",
	"\\\\globallong": "\\\\globallong",
	"\\def": "\\gdef",
	"\\gdef": "\\gdef",
	"\\edef": "\\xdef",
	"\\xdef": "\\xdef",
	"\\let": "\\\\globallet",
	"\\futurelet": "\\\\globalfuture"
}, rf = e((e) => {
	var t = e.text;
	if (/^(?:[\\{}$&#^_]|EOF)$/.test(t)) throw new a("Expected a control sequence", e);
	return t;
}, "checkControlSequence"), rv = e((e) => {
	var t = e.gullet.popToken();
	return "=" === t.text && " " === (t = e.gullet.popToken()).text && (t = e.gullet.popToken()), t;
}, "getRHS"), rb = e((e, t, r, a) => {
	var i = e.gullet.macros.get(r.text);
	i ?? (r.noexpand = !0, i = {
		tokens: [r],
		numArgs: 0,
		unexpandable: !e.gullet.isExpandable(r.text)
	}), e.gullet.macros.set(t, i, a);
}, "letCommand");
tk({
	type: "internal",
	names: [
		"\\global",
		"\\long",
		"\\\\globallong"
	],
	props: {
		numArgs: 0,
		allowedInText: !0
	},
	handler(e) {
		var { parser: t, funcName: r } = e;
		t.consumeSpaces();
		var i = t.fetch();
		if (rg[i.text]) return ("\\global" === r || "\\\\globallong" === r) && (i.text = rg[i.text]), t8(t.parseFunction(), "internal");
		throw new a("Invalid token after macro prefix", i);
	}
}), tk({
	type: "internal",
	names: [
		"\\def",
		"\\gdef",
		"\\edef",
		"\\xdef"
	],
	props: {
		numArgs: 0,
		allowedInText: !0,
		primitive: !0
	},
	handler(e) {
		var { parser: t, funcName: r } = e, i = t.gullet.popToken(), n = i.text;
		if (/^(?:[\\{}$&#^_]|EOF)$/.test(n)) throw new a("Expected a control sequence", i);
		for (var s, o = 0, l = [[]]; "{" !== t.gullet.future().text;) if ("#" === (i = t.gullet.popToken()).text) {
			if ("{" === t.gullet.future().text) {
				s = t.gullet.future(), l[o].push("{");
				break;
			}
			if (i = t.gullet.popToken(), !/^[1-9]$/.test(i.text)) throw new a("Invalid argument number \"" + i.text + "\"");
			if (parseInt(i.text) !== o + 1) throw new a("Argument number \"" + i.text + "\" out of order");
			o++, l.push([]);
		} else {
			if ("EOF" === i.text) throw new a("Expected a macro definition");
			l[o].push(i.text);
		}
		var { tokens: h } = t.gullet.consumeArg();
		return s && h.unshift(s), ("\\edef" === r || "\\xdef" === r) && (h = t.gullet.expandTokens(h)).reverse(), t.gullet.macros.set(n, {
			tokens: h,
			numArgs: o,
			delimiters: l
		}, r === rg[r]), {
			type: "internal",
			mode: t.mode
		};
	}
}), tk({
	type: "internal",
	names: ["\\let", "\\\\globallet"],
	props: {
		numArgs: 0,
		allowedInText: !0,
		primitive: !0
	},
	handler(e) {
		var { parser: t, funcName: r } = e, a = rf(t.gullet.popToken());
		t.gullet.consumeSpaces();
		var i = rv(t);
		return rb(t, a, i, "\\\\globallet" === r), {
			type: "internal",
			mode: t.mode
		};
	}
}), tk({
	type: "internal",
	names: ["\\futurelet", "\\\\globalfuture"],
	props: {
		numArgs: 0,
		allowedInText: !0,
		primitive: !0
	},
	handler(e) {
		var { parser: t, funcName: r } = e, a = rf(t.gullet.popToken()), i = t.gullet.popToken(), n = t.gullet.popToken();
		return rb(t, a, n, "\\\\globalfuture" === r), t.gullet.pushToken(n), t.gullet.pushToken(i), {
			type: "internal",
			mode: t.mode
		};
	}
});
var ry = e(function(e, t, r) {
	var a = X(ek.math[e] && ek.math[e].replace || e, t, r);
	if (!a) throw Error("Unsupported symbol " + e + " and font size " + t + ".");
	return a;
}, "getMetrics"), rx = e(function(e, t, r, a) {
	var i = r.havingBaseStyle(t), n = tt(a.concat(i.sizingClasses(r)), [e], r), s = i.sizeMultiplier / r.sizeMultiplier;
	return n.height *= s, n.depth *= s, n.maxFontSize = i.sizeMultiplier, n;
}, "styleWrap"), rw = e(function(e, t, r) {
	var a = t.havingBaseStyle(r), i = (1 - t.sizeMultiplier / a.sizeMultiplier) * t.fontMetrics().axisHeight;
	e.classes.push("delimcenter"), e.style.top = ei(i), e.height -= i, e.depth += i;
}, "centerSpan"), rk = e(function(e, t, r, a, i, n) {
	var s = rx(e6(e, "Main-Regular", i, a), t, a, n);
	return r && rw(s, a, t), s;
}, "makeSmallDelim"), rS = e(function(e, t, r, a) {
	return e6(e, "Size" + t + "-Regular", r, a);
}, "mathrmSize"), rz = e(function(e, t, r, a, i, n) {
	var s = rS(e, t, i, a), o = rx(tt(["delimsizing", "size" + t], [s], a), A.TEXT, a, n);
	return r && rw(o, a, A.TEXT), o;
}, "makeLargeDelim"), rM = e(function(e, t, r) {
	return {
		type: "elem",
		elem: tt(["delimsizinginner", "Size1-Regular" === t ? "delim-size1" : "delim-size4"], [tt([], [e6(e, t, r)])])
	};
}, "makeGlyphSpan"), rA = e(function(e, t, r) {
	var a = U["Size4-Regular"][e.charCodeAt(0)] ? U["Size4-Regular"][e.charCodeAt(0)][4] : U["Size1-Regular"][e.charCodeAt(0)][4], i = tr([], [new eg([new ef("inner", P(e, Math.round(1e3 * t)))], {
		width: ei(a),
		height: ei(t),
		style: "width:" + ei(a),
		viewBox: "0 0 " + 1e3 * a + " " + Math.round(1e3 * t),
		preserveAspectRatio: "xMinYMin"
	})], r);
	return i.height = t, i.style.height = ei(t), i.style.width = ei(a), {
		type: "elem",
		elem: i
	};
}, "makeInner"), rT = {
	type: "kern",
	size: -.008
}, rB = [
	"|",
	"\\lvert",
	"\\rvert",
	"\\vert"
], rq = [
	"\\|",
	"\\lVert",
	"\\rVert",
	"\\Vert"
], rC = e(function(e, t, r, a, n, s) {
	var o, l, h, m, c = "", u = 0;
	o = h = m = e, l = null;
	var p = "Size1-Regular";
	"\\uparrow" === e ? h = m = "⏐" : "\\Uparrow" === e ? h = m = "‖" : "\\downarrow" === e ? o = h = "⏐" : "\\Downarrow" === e ? o = h = "‖" : "\\updownarrow" === e ? (o = "\\uparrow", h = "⏐", m = "\\downarrow") : "\\Updownarrow" === e ? (o = "\\Uparrow", h = "‖", m = "\\Downarrow") : i(rB, e) ? (h = "∣", c = "vert", u = 333) : i(rq, e) ? (h = "∥", c = "doublevert", u = 556) : "[" === e || "\\lbrack" === e ? (o = "⎡", h = "⎢", m = "⎣", p = "Size4-Regular", c = "lbrack", u = 667) : "]" === e || "\\rbrack" === e ? (o = "⎤", h = "⎥", m = "⎦", p = "Size4-Regular", c = "rbrack", u = 667) : "\\lfloor" === e || "⌊" === e ? (h = o = "⎢", m = "⎣", p = "Size4-Regular", c = "lfloor", u = 667) : "\\lceil" === e || "⌈" === e ? (o = "⎡", h = m = "⎢", p = "Size4-Regular", c = "lceil", u = 667) : "\\rfloor" === e || "⌋" === e ? (h = o = "⎥", m = "⎦", p = "Size4-Regular", c = "rfloor", u = 667) : "\\rceil" === e || "⌉" === e ? (o = "⎤", h = m = "⎥", p = "Size4-Regular", c = "rceil", u = 667) : "(" === e || "\\lparen" === e ? (o = "⎛", h = "⎜", m = "⎝", p = "Size4-Regular", c = "lparen", u = 875) : ")" === e || "\\rparen" === e ? (o = "⎞", h = "⎟", m = "⎠", p = "Size4-Regular", c = "rparen", u = 875) : "\\{" === e || "\\lbrace" === e ? (o = "⎧", l = "⎨", m = "⎩", h = "⎪", p = "Size4-Regular") : "\\}" === e || "\\rbrace" === e ? (o = "⎫", l = "⎬", m = "⎭", h = "⎪", p = "Size4-Regular") : "\\lgroup" === e || "⟮" === e ? (o = "⎧", m = "⎩", h = "⎪", p = "Size4-Regular") : "\\rgroup" === e || "⟯" === e ? (o = "⎫", m = "⎭", h = "⎪", p = "Size4-Regular") : "\\lmoustache" === e || "⎰" === e ? (o = "⎧", m = "⎭", h = "⎪", p = "Size4-Regular") : ("\\rmoustache" === e || "⎱" === e) && (o = "⎫", m = "⎩", h = "⎪", p = "Size4-Regular");
	var d = ry(o, p, n), g = d.height + d.depth, f = ry(h, p, n), v = f.height + f.depth, b = ry(m, p, n), y = b.height + b.depth, x = 0, w = 1;
	if (null !== l) {
		var k = ry(l, p, n);
		x = k.height + k.depth, w = 2;
	}
	var S = g + y + x, z = Math.max(0, Math.ceil((t - S) / (w * v))), M = S + z * w * v, T = a.fontMetrics().axisHeight;
	r && (T *= a.sizeMultiplier);
	var B = M / 2 - T, q = [];
	if (c.length > 0) {
		var C = Math.round(1e3 * M), I = V(c, Math.round(1e3 * (M - g - y))), H = new ef(c, I), R = (u / 1e3).toFixed(3) + "em", E = (C / 1e3).toFixed(3) + "em", O = tr([], [new eg([H], {
			width: R,
			height: E,
			viewBox: "0 0 " + u + " " + C
		})], a);
		O.height = C / 1e3, O.style.width = R, O.style.height = E, q.push({
			type: "elem",
			elem: O
		});
	} else {
		if (q.push(rM(m, p, n)), q.push(rT), null === l) q.push(rA(h, M - g - y + .016, a));
		else {
			var N = (M - g - y - x) / 2 + .016;
			q.push(rA(h, N, a)), q.push(rT), q.push(rM(l, p, n)), q.push(rT), q.push(rA(h, N, a));
		}
		q.push(rT), q.push(rM(o, p, n));
	}
	var D = a.havingBaseStyle(A.TEXT);
	return rx(tt(["delimsizing", "mult"], [tl({
		positionType: "bottom",
		positionData: B,
		children: q
	}, D)], D), A.TEXT, a, s);
}, "makeStackedDelim"), rI = e(function(e, t, r, a, i) {
	var n = L(e, a, r);
	return tr(["hide-tail"], [new eg([new ef(e, n)], {
		width: "400em",
		height: ei(t),
		viewBox: "0 0 400000 " + r,
		preserveAspectRatio: "xMinYMin slice"
	})], i);
}, "sqrtSvg"), rH = e(function(e, t) {
	var r, a, i = t.havingBaseSizing(), n = rG("\\surd", e * i.sizeMultiplier, rF, i), s = i.sizeMultiplier, o = Math.max(0, t.minRuleThickness - t.fontMetrics().sqrtRuleThickness), l = 0, h = 0, m = 0;
	return "small" === n.type ? (m = 1e3 + 1e3 * o + 80, e < 1 ? s = 1 : e < 1.4 && (s = .7), l = (1 + o + .08) / s, h = (1 + o) / s, (r = rI("sqrtMain", l, m, o, t)).style.minWidth = "0.853em", a = .833 / s) : "large" === n.type ? (m = 1080 * rN[n.size], h = (rN[n.size] + o) / s, l = (rN[n.size] + o + .08) / s, (r = rI("sqrtSize" + n.size, l, m, o, t)).style.minWidth = "1.02em", a = 1 / s) : (l = e + o + .08, h = e + o, (r = rI("sqrtTall", l, m = Math.floor(1e3 * e + o) + 80, o, t)).style.minWidth = "0.742em", a = 1.056), r.height = h, r.style.height = ei(l), {
		span: r,
		advanceWidth: a,
		ruleWidth: (t.fontMetrics().sqrtRuleThickness + o) * s
	};
}, "makeSqrtImage"), rR = [
	"(",
	"\\lparen",
	")",
	"\\rparen",
	"[",
	"\\lbrack",
	"]",
	"\\rbrack",
	"\\{",
	"\\lbrace",
	"\\}",
	"\\rbrace",
	"\\lfloor",
	"\\rfloor",
	"⌊",
	"⌋",
	"\\lceil",
	"\\rceil",
	"⌈",
	"⌉",
	"\\surd"
], rE = [
	"\\uparrow",
	"\\downarrow",
	"\\updownarrow",
	"\\Uparrow",
	"\\Downarrow",
	"\\Updownarrow",
	"|",
	"\\|",
	"\\vert",
	"\\Vert",
	"\\lvert",
	"\\rvert",
	"\\lVert",
	"\\rVert",
	"\\lgroup",
	"\\rgroup",
	"⟮",
	"⟯",
	"\\lmoustache",
	"\\rmoustache",
	"⎰",
	"⎱"
], rO = [
	"<",
	">",
	"\\langle",
	"\\rangle",
	"/",
	"\\backslash",
	"\\lt",
	"\\gt"
], rN = [
	0,
	1.2,
	1.8,
	2.4,
	3
], rD = e(function(e, t, r, n, s) {
	if ("<" === e || "\\lt" === e || "⟨" === e ? e = "\\langle" : (">" === e || "\\gt" === e || "⟩" === e) && (e = "\\rangle"), i(rR, e) || i(rO, e)) return rz(e, t, !1, r, n, s);
	if (i(rE, e)) return rC(e, rN[t], !1, r, n, s);
	throw new a("Illegal delimiter: '" + e + "'");
}, "makeSizedDelim"), rL = [
	{
		type: "small",
		style: A.SCRIPTSCRIPT
	},
	{
		type: "small",
		style: A.SCRIPT
	},
	{
		type: "small",
		style: A.TEXT
	},
	{
		type: "large",
		size: 1
	},
	{
		type: "large",
		size: 2
	},
	{
		type: "large",
		size: 3
	},
	{
		type: "large",
		size: 4
	}
], rP = [
	{
		type: "small",
		style: A.SCRIPTSCRIPT
	},
	{
		type: "small",
		style: A.SCRIPT
	},
	{
		type: "small",
		style: A.TEXT
	},
	{ type: "stack" }
], rF = [
	{
		type: "small",
		style: A.SCRIPTSCRIPT
	},
	{
		type: "small",
		style: A.SCRIPT
	},
	{
		type: "small",
		style: A.TEXT
	},
	{
		type: "large",
		size: 1
	},
	{
		type: "large",
		size: 2
	},
	{
		type: "large",
		size: 3
	},
	{
		type: "large",
		size: 4
	},
	{ type: "stack" }
], rV = e(function(e) {
	if ("small" === e.type) return "Main-Regular";
	if ("large" === e.type) return "Size" + e.size + "-Regular";
	if ("stack" === e.type) return "Size4-Regular";
	throw Error("Add support for delim type '" + e.type + "' here.");
}, "delimTypeToFont"), rG = e(function(e, t, r, a) {
	for (var i = Math.min(2, 3 - a.style.size); i < r.length && "stack" !== r[i].type; i++) {
		var n = ry(e, rV(r[i]), "math"), s = n.height + n.depth;
		if ("small" === r[i].type && (s *= a.havingBaseStyle(r[i].style).sizeMultiplier), s > t) return r[i];
	}
	return r[r.length - 1];
}, "traverseSequence"), rU = e(function(e, t, r, a, n, s) {
	"<" === e || "\\lt" === e || "⟨" === e ? e = "\\langle" : (">" === e || "\\gt" === e || "⟩" === e) && (e = "\\rangle");
	var o = i(rO, e) ? rL : i(rR, e) ? rF : rP, l = rG(e, t, o, a);
	return "small" === l.type ? rk(e, l.style, r, a, n, s) : "large" === l.type ? rz(e, l.size, r, a, n, s) : rC(e, t, r, a, n, s);
}, "makeCustomSizedDelim"), r_ = e(function(e, t, r, a, i, n) {
	var s = a.fontMetrics().axisHeight * a.sizeMultiplier, o = 5 / a.fontMetrics().ptPerEm, l = Math.max(t - s, r + s);
	return rU(e, Math.max(l / 500 * 901, 2 * l - o), !0, a, i, n);
}, "makeLeftRightDelim"), rY = {
	"\\bigl": {
		mclass: "mopen",
		size: 1
	},
	"\\Bigl": {
		mclass: "mopen",
		size: 2
	},
	"\\biggl": {
		mclass: "mopen",
		size: 3
	},
	"\\Biggl": {
		mclass: "mopen",
		size: 4
	},
	"\\bigr": {
		mclass: "mclose",
		size: 1
	},
	"\\Bigr": {
		mclass: "mclose",
		size: 2
	},
	"\\biggr": {
		mclass: "mclose",
		size: 3
	},
	"\\Biggr": {
		mclass: "mclose",
		size: 4
	},
	"\\bigm": {
		mclass: "mrel",
		size: 1
	},
	"\\Bigm": {
		mclass: "mrel",
		size: 2
	},
	"\\biggm": {
		mclass: "mrel",
		size: 3
	},
	"\\Biggm": {
		mclass: "mrel",
		size: 4
	},
	"\\big": {
		mclass: "mord",
		size: 1
	},
	"\\Big": {
		mclass: "mord",
		size: 2
	},
	"\\bigg": {
		mclass: "mord",
		size: 3
	},
	"\\Bigg": {
		mclass: "mord",
		size: 4
	}
}, rW = [
	"(",
	"\\lparen",
	")",
	"\\rparen",
	"[",
	"\\lbrack",
	"]",
	"\\rbrack",
	"\\{",
	"\\lbrace",
	"\\}",
	"\\rbrace",
	"\\lfloor",
	"\\rfloor",
	"⌊",
	"⌋",
	"\\lceil",
	"\\rceil",
	"⌈",
	"⌉",
	"<",
	">",
	"\\langle",
	"⟨",
	"\\rangle",
	"⟩",
	"\\lt",
	"\\gt",
	"\\lvert",
	"\\rvert",
	"\\lVert",
	"\\rVert",
	"\\lgroup",
	"\\rgroup",
	"⟮",
	"⟯",
	"\\lmoustache",
	"\\rmoustache",
	"⎰",
	"⎱",
	"/",
	"\\backslash",
	"|",
	"\\vert",
	"\\|",
	"\\Vert",
	"\\uparrow",
	"\\Uparrow",
	"\\downarrow",
	"\\Downarrow",
	"\\updownarrow",
	"\\Updownarrow",
	"."
];
function rX(e, t) {
	var r = t9(e);
	if (r && i(rW, r.text)) return r;
	throw r ? new a("Invalid delimiter '" + r.text + "' after '" + t.funcName + "'", e) : new a("Invalid delimiter type '" + e.type + "'", e);
}
function r$(e) {
	if (!e.body) throw Error("Bug: The leftright ParseNode wasn't fully parsed.");
}
e(rX, "checkDelimiter"), tk({
	type: "delimsizing",
	names: [
		"\\bigl",
		"\\Bigl",
		"\\biggl",
		"\\Biggl",
		"\\bigr",
		"\\Bigr",
		"\\biggr",
		"\\Biggr",
		"\\bigm",
		"\\Bigm",
		"\\biggm",
		"\\Biggm",
		"\\big",
		"\\Big",
		"\\bigg",
		"\\Bigg"
	],
	props: {
		numArgs: 1,
		argTypes: ["primitive"]
	},
	handler: e((e, t) => {
		var r = rX(t[0], e);
		return {
			type: "delimsizing",
			mode: e.parser.mode,
			size: rY[e.funcName].size,
			mclass: rY[e.funcName].mclass,
			delim: r.text
		};
	}, "handler"),
	htmlBuilder: e((e, t) => "." === e.delim ? tt([e.mclass]) : rD(e.delim, e.size, t, e.mode, [e.mclass]), "htmlBuilder"),
	mathmlBuilder: e((e) => {
		var t = [];
		"." !== e.delim && t.push(tU(e.delim, e.mode));
		var r = new tF("mo", t);
		"mopen" === e.mclass || "mclose" === e.mclass ? r.setAttribute("fence", "true") : r.setAttribute("fence", "false"), r.setAttribute("stretchy", "true");
		var a = ei(rN[e.size]);
		return r.setAttribute("minsize", a), r.setAttribute("maxsize", a), r;
	}, "mathmlBuilder")
}), e(r$, "assertParsed"), tk({
	type: "leftright-right",
	names: ["\\right"],
	props: {
		numArgs: 1,
		primitive: !0
	},
	handler: e((e, t) => {
		var r = e.parser.gullet.macros.get("\\current@color");
		if (r && "string" != typeof r) throw new a("\\current@color set to non-string in \\right");
		return {
			type: "leftright-right",
			mode: e.parser.mode,
			delim: rX(t[0], e).text,
			color: r
		};
	}, "handler")
}), tk({
	type: "leftright",
	names: ["\\left"],
	props: {
		numArgs: 1,
		primitive: !0
	},
	handler: e((e, t) => {
		var r = rX(t[0], e), a = e.parser;
		++a.leftrightDepth;
		var i = a.parseExpression(!1);
		--a.leftrightDepth, a.expect("\\right", !1);
		var n = t8(a.parseFunction(), "leftright-right");
		return {
			type: "leftright",
			mode: a.mode,
			body: i,
			left: r.text,
			right: n.delim,
			rightColor: n.color
		};
	}, "handler"),
	htmlBuilder: e((e, t) => {
		r$(e);
		for (var r, a, i = tC(e.body, t, !0, ["mopen", "mclose"]), n = 0, s = 0, o = !1, l = 0; l < i.length; l++) i[l].isMiddle ? o = !0 : (n = Math.max(i[l].height, n), s = Math.max(i[l].depth, s));
		if (n *= t.sizeMultiplier, s *= t.sizeMultiplier, r = "." === e.left ? tO(t, ["mopen"]) : r_(e.left, n, s, t, e.mode, ["mopen"]), i.unshift(r), o) for (var h = 1; h < i.length; h++) {
			var m = i[h].isMiddle;
			m && (i[h] = r_(m.delim, n, s, m.options, e.mode, []));
		}
		if ("." === e.right) a = tO(t, ["mclose"]);
		else {
			var c = e.rightColor ? t.withColor(e.rightColor) : t;
			a = r_(e.right, n, s, c, e.mode, ["mclose"]);
		}
		return i.push(a), tt(["minner"], i, t);
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => {
		r$(e);
		var r = tX(e.body, t);
		if ("." !== e.left) {
			var a = new tF("mo", [tU(e.left, e.mode)]);
			a.setAttribute("fence", "true"), r.unshift(a);
		}
		if ("." !== e.right) {
			var i = new tF("mo", [tU(e.right, e.mode)]);
			i.setAttribute("fence", "true"), e.rightColor && i.setAttribute("mathcolor", e.rightColor), r.push(i);
		}
		return t_(r);
	}, "mathmlBuilder")
}), tk({
	type: "middle",
	names: ["\\middle"],
	props: {
		numArgs: 1,
		primitive: !0
	},
	handler: e((e, t) => {
		var r = rX(t[0], e);
		if (!e.parser.leftrightDepth) throw new a("\\middle without preceding \\left", r);
		return {
			type: "middle",
			mode: e.parser.mode,
			delim: r.text
		};
	}, "handler"),
	htmlBuilder: e((e, t) => {
		var r;
		return "." === e.delim ? r = tO(t, []) : (r = rD(e.delim, 1, t, e.mode, [])).isMiddle = {
			delim: e.delim,
			options: t
		}, r;
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => {
		var r = new tF("mo", ["\\vert" === e.delim || "|" === e.delim ? tU("|", "text") : tU(e.delim, e.mode)]);
		return r.setAttribute("fence", "true"), r.setAttribute("lspace", "0.05em"), r.setAttribute("rspace", "0.05em"), r;
	}, "mathmlBuilder")
});
var rj = e((e, t) => {
	var r, a, i = ts(tN(e.body, t), t), n = e.label.slice(1), s = t.sizeMultiplier, o = 0, l = u(e.body);
	if ("sout" === n) (a = tt(["stretchy", "sout"])).height = t.fontMetrics().defaultRuleThickness / s, o = -.5 * t.fontMetrics().xHeight;
	else if ("phase" === n) {
		var h = ea({
			number: .6,
			unit: "pt"
		}, t), m = ea({
			number: .35,
			unit: "ex"
		}, t);
		s /= t.havingBaseSizing().sizeMultiplier;
		var c = i.height + i.depth + h + m;
		i.style.paddingLeft = ei(c / 2 + h);
		var p = Math.floor(1e3 * c * s);
		(a = tr(["hide-tail"], [new eg([new ef("phase", N(p))], {
			width: "400em",
			height: ei(p / 1e3),
			viewBox: "0 0 400000 " + p,
			preserveAspectRatio: "xMinYMin slice"
		})], t)).style.height = ei(c), o = i.depth + h + m;
	} else {
		/cancel/.test(n) ? l || i.classes.push("cancel-pad") : "angl" === n ? i.classes.push("anglpad") : i.classes.push("boxpad");
		var d = 0, g = 0, f = 0;
		/box/.test(n) ? (f = Math.max(t.fontMetrics().fboxrule, t.minRuleThickness), g = d = t.fontMetrics().fboxsep + ("colorbox" === n ? 0 : f)) : "angl" === n ? (d = 4 * (f = Math.max(t.fontMetrics().defaultRuleThickness, t.minRuleThickness)), g = Math.max(0, .25 - i.depth)) : g = d = .2 * !!l, a = t3.encloseSpan(i, n, d, g, t), /fbox|boxed|fcolorbox/.test(n) ? (a.style.borderStyle = "solid", a.style.borderWidth = ei(f)) : "angl" === n && .049 !== f && (a.style.borderTopWidth = ei(f), a.style.borderRightWidth = ei(f)), o = i.depth + g, e.backgroundColor && (a.style.backgroundColor = e.backgroundColor, e.borderColor && (a.style.borderColor = e.borderColor));
	}
	return r = e.backgroundColor ? tl({
		positionType: "individualShift",
		children: [{
			type: "elem",
			elem: a,
			shift: o
		}, {
			type: "elem",
			elem: i,
			shift: 0
		}]
	}, t) : tl({
		positionType: "individualShift",
		children: [{
			type: "elem",
			elem: i,
			shift: 0
		}, {
			type: "elem",
			elem: a,
			shift: o,
			wrapperClasses: /cancel|phase/.test(n) ? ["svg-align"] : []
		}]
	}, t), /cancel/.test(n) && (r.height = i.height, r.depth = i.depth), /cancel/.test(n) && !l ? tt(["mord", "cancel-lap"], [r], t) : tt(["mord"], [r], t);
}, "htmlBuilder$7"), rZ = e((e, t) => {
	var r = 0, a = new tF(e.label.indexOf("colorbox") > -1 ? "mpadded" : "menclose", [tj(e.body, t)]);
	switch (e.label) {
		case "\\cancel":
			a.setAttribute("notation", "updiagonalstrike");
			break;
		case "\\bcancel":
			a.setAttribute("notation", "downdiagonalstrike");
			break;
		case "\\phase":
			a.setAttribute("notation", "phasorangle");
			break;
		case "\\sout":
			a.setAttribute("notation", "horizontalstrike");
			break;
		case "\\fbox":
			a.setAttribute("notation", "box");
			break;
		case "\\angl":
			a.setAttribute("notation", "actuarial");
			break;
		case "\\fcolorbox":
		case "\\colorbox":
			if (r = t.fontMetrics().fboxsep * t.fontMetrics().ptPerEm, a.setAttribute("width", "+" + 2 * r + "pt"), a.setAttribute("height", "+" + 2 * r + "pt"), a.setAttribute("lspace", r + "pt"), a.setAttribute("voffset", r + "pt"), "\\fcolorbox" === e.label) {
				var i = Math.max(t.fontMetrics().fboxrule, t.minRuleThickness);
				a.setAttribute("style", "border: " + i + "em solid " + String(e.borderColor));
			}
			break;
		case "\\xcancel": a.setAttribute("notation", "updiagonalstrike downdiagonalstrike");
	}
	return e.backgroundColor && a.setAttribute("mathbackground", e.backgroundColor), a;
}, "mathmlBuilder$6");
tk({
	type: "enclose",
	names: ["\\colorbox"],
	props: {
		numArgs: 2,
		allowedInText: !0,
		argTypes: ["color", "text"]
	},
	handler(e, t, r) {
		var { parser: a, funcName: i } = e, n = t8(t[0], "color-token").color, s = t[1];
		return {
			type: "enclose",
			mode: a.mode,
			label: i,
			backgroundColor: n,
			body: s
		};
	},
	htmlBuilder: rj,
	mathmlBuilder: rZ
}), tk({
	type: "enclose",
	names: ["\\fcolorbox"],
	props: {
		numArgs: 3,
		allowedInText: !0,
		argTypes: [
			"color",
			"color",
			"text"
		]
	},
	handler(e, t, r) {
		var { parser: a, funcName: i } = e, n = t8(t[0], "color-token").color, s = t8(t[1], "color-token").color, o = t[2];
		return {
			type: "enclose",
			mode: a.mode,
			label: i,
			backgroundColor: s,
			borderColor: n,
			body: o
		};
	},
	htmlBuilder: rj,
	mathmlBuilder: rZ
}), tk({
	type: "enclose",
	names: ["\\fbox"],
	props: {
		numArgs: 1,
		argTypes: ["hbox"],
		allowedInText: !0
	},
	handler(e, t) {
		var { parser: r } = e;
		return {
			type: "enclose",
			mode: r.mode,
			label: "\\fbox",
			body: t[0]
		};
	}
}), tk({
	type: "enclose",
	names: [
		"\\cancel",
		"\\bcancel",
		"\\xcancel",
		"\\sout",
		"\\phase"
	],
	props: { numArgs: 1 },
	handler(e, t) {
		var { parser: r, funcName: a } = e, i = t[0];
		return {
			type: "enclose",
			mode: r.mode,
			label: a,
			body: i
		};
	},
	htmlBuilder: rj,
	mathmlBuilder: rZ
}), tk({
	type: "enclose",
	names: ["\\angl"],
	props: {
		numArgs: 1,
		argTypes: ["hbox"],
		allowedInText: !1
	},
	handler(e, t) {
		var { parser: r } = e;
		return {
			type: "enclose",
			mode: r.mode,
			label: "\\angl",
			body: t[0]
		};
	}
});
var rK = {};
function rJ(e) {
	for (var { type: t, names: r, props: a, handler: i, htmlBuilder: n, mathmlBuilder: s } = e, o = {
		type: t,
		numArgs: a.numArgs || 0,
		allowedInText: !1,
		numOptionalArgs: 0,
		handler: i
	}, l = 0; l < r.length; ++l) rK[r[l]] = o;
	n && (tx[t] = n), s && (tw[t] = s);
}
e(rJ, "defineEnvironment");
var rQ = {};
function r0(e, t) {
	rQ[e] = t;
}
function r1(e) {
	var t = [];
	e.consumeSpaces();
	var r = e.fetch().text;
	for ("\\relax" === r && (e.consume(), e.consumeSpaces(), r = e.fetch().text); "\\hline" === r || "\\hdashline" === r;) e.consume(), t.push("\\hdashline" === r), e.consumeSpaces(), r = e.fetch().text;
	return t;
}
e(r0, "defineMacro"), e(r1, "getHLines");
var r4 = e((e) => {
	if (!e.parser.settings.displayMode) throw new a("{" + e.envName + "} can be used only in display mode.");
}, "validateAmsEnvironmentContext");
function r5(e) {
	if (-1 === e.indexOf("ed")) return -1 === e.indexOf("*");
}
function r6(t, i, n) {
	var { hskipBeforeAndAfter: s, addJot: o, cols: l, arraystretch: h, colSeparationType: m, autoTag: c, singleRow: u, emptySingleRow: p, maxNumCols: d, leqno: g } = i;
	if (t.gullet.beginGroup(), u || t.gullet.macros.set("\\cr", "\\\\\\relax"), !h) {
		var f = t.gullet.expandMacroAsText("\\arraystretch");
		if (null == f) h = 1;
		else if (!(h = parseFloat(f)) || h < 0) throw new a("Invalid \\arraystretch: " + f);
	}
	t.gullet.beginGroup();
	var v = [], b = [v], y = [], x = [], w = null != c ? [] : void 0;
	function k() {
		c && t.gullet.macros.set("\\@eqnsw", "1", !0);
	}
	function S() {
		w && (t.gullet.macros.get("\\df@tag") ? (w.push(t.subparse([new r("\\df@tag")])), t.gullet.macros.set("\\df@tag", void 0, !0)) : w.push(!!c && "1" === t.gullet.macros.get("\\@eqnsw")));
	}
	for (e(k, "beginRow"), e(S, "endRow"), k(), x.push(r1(t));;) {
		var z = t.parseExpression(!1, u ? "\\end" : "\\\\");
		t.gullet.endGroup(), t.gullet.beginGroup(), z = {
			type: "ordgroup",
			mode: t.mode,
			body: z
		}, n && (z = {
			type: "styling",
			mode: t.mode,
			style: n,
			body: [z]
		}), v.push(z);
		var M = t.fetch().text;
		if ("&" === M) {
			if (d && v.length === d) {
				if (u || m) throw new a("Too many tab characters: &", t.nextToken);
				t.settings.reportNonstrict("textEnv", "Too few columns specified in the {array} column argument.");
			}
			t.consume();
		} else if ("\\end" === M) {
			S(), 1 === v.length && "styling" === z.type && 0 === z.body[0].body.length && (b.length > 1 || !p) && b.pop(), x.length < b.length + 1 && x.push([]);
			break;
		} else if ("\\\\" === M) {
			t.consume();
			var A = void 0;
			" " !== t.gullet.future().text && (A = t.parseSizeGroup(!0)), y.push(A ? A.value : null), S(), x.push(r1(t)), v = [], b.push(v), k();
		} else throw new a("Expected & or \\\\ or \\cr or \\end", t.nextToken);
	}
	return t.gullet.endGroup(), t.gullet.endGroup(), {
		type: "array",
		mode: t.mode,
		addJot: o,
		arraystretch: h,
		body: b,
		cols: l,
		rowGaps: y,
		hskipBeforeAndAfter: s,
		hLinesBeforeRow: x,
		colSeparationType: m,
		tags: w,
		leqno: g
	};
}
function r7(e) {
	return "d" === e.slice(0, 1) ? "display" : "text";
}
e(r5, "getAutoTag"), e(r6, "parseArray"), e(r7, "dCellStyle");
var r3 = e(function(t, r) {
	var i, s, o = t.body.length, l = t.hLinesBeforeRow, h = 0, m = Array(o), c = [], u = Math.max(r.fontMetrics().arrayRuleWidth, r.minRuleThickness), p = 1 / r.fontMetrics().ptPerEm, d = 5 * p;
	t.colSeparationType && "small" === t.colSeparationType && (d = .2778 * (r.havingStyle(A.SCRIPT).sizeMultiplier / r.sizeMultiplier));
	var g = "CD" === t.colSeparationType ? ea({
		number: 3,
		unit: "ex"
	}, r) : 12 * p, f = 3 * p, v = t.arraystretch * g, b = .7 * v, y = .3 * v, x = 0;
	function w(e) {
		for (var t = 0; t < e.length; ++t) t > 0 && (x += .25), c.push({
			pos: x,
			isDashed: e[t]
		});
	}
	for (e(w, "setHLinePos"), w(l[0]), i = 0; i < t.body.length; ++i) {
		var k = t.body[i], S = b, z = y;
		h < k.length && (h = k.length);
		var M = Array(k.length);
		for (s = 0; s < k.length; ++s) {
			var T = tN(k[s], r);
			z < T.depth && (z = T.depth), S < T.height && (S = T.height), M[s] = T;
		}
		var B = t.rowGaps[i], q = 0;
		B && (q = ea(B, r)) > 0 && (z < (q += y) && (z = q), q = 0), t.addJot && (z += f), M.height = S, M.depth = z, M.pos = x += S, x += z + q, m[i] = M, w(l[i + 1]);
	}
	var C, I, H = x / 2 + r.fontMetrics().axisHeight, R = t.cols || [], E = [], O = [];
	if (t.tags && t.tags.some((e) => e)) for (i = 0; i < o; ++i) {
		var N = m[i], D = N.pos - H, L = t.tags[i], P = void 0;
		(P = !0 === L ? tt(["eqn-num"], [], r) : !1 === L ? tt([], [], r) : tt([], tC(L, r, !0), r)).depth = N.depth, P.height = N.height, O.push({
			type: "elem",
			elem: P,
			shift: D
		});
	}
	for (s = 0, I = 0; s < h || I < R.length; ++s, ++I) {
		for (var F = R[I] || {}, V = !0; "separator" === F.type;) {
			if (V || ((C = tt(["arraycolsep"], [])).style.width = ei(r.fontMetrics().doubleRuleSep), E.push(C)), "|" === F.separator || ":" === F.separator) {
				var G = "|" === F.separator ? "solid" : "dashed", U = tt(["vertical-separator"], [], r);
				U.style.height = ei(x), U.style.borderRightWidth = ei(u), U.style.borderRightStyle = G, U.style.margin = "0 " + ei(-u / 2);
				var _ = x - H;
				_ && (U.style.verticalAlign = ei(-_)), E.push(U);
			} else throw new a("Invalid separator type: " + F.separator);
			F = R[++I] || {}, V = !1;
		}
		if (!(s >= h)) {
			var Y = void 0;
			(s > 0 || t.hskipBeforeAndAfter) && 0 !== (Y = n(F.pregap, d)) && ((C = tt(["arraycolsep"], [])).style.width = ei(Y), E.push(C));
			var W = [];
			for (i = 0; i < o; ++i) {
				var X = m[i], $ = X[s];
				if ($) {
					var j = X.pos - H;
					$.depth = X.depth, $.height = X.height, W.push({
						type: "elem",
						elem: $,
						shift: j
					});
				}
			}
			W = tl({
				positionType: "individualShift",
				children: W
			}, r), W = tt(["col-align-" + (F.align || "c")], [W]), E.push(W), (s < h - 1 || t.hskipBeforeAndAfter) && 0 !== (Y = n(F.postgap, d)) && ((C = tt(["arraycolsep"], [])).style.width = ei(Y), E.push(C));
		}
	}
	if (m = tt(["mtable"], E), c.length > 0) {
		for (var Z = ta("hline", r, u), K = ta("hdashline", r, u), J = [{
			type: "elem",
			elem: m,
			shift: 0
		}]; c.length > 0;) {
			var Q = c.pop(), ee = Q.pos - H;
			Q.isDashed ? J.push({
				type: "elem",
				elem: K,
				shift: ee
			}) : J.push({
				type: "elem",
				elem: Z,
				shift: ee
			});
		}
		m = tl({
			positionType: "individualShift",
			children: J
		}, r);
	}
	if (0 === O.length) return tt(["mord"], [m], r);
	var et = tl({
		positionType: "individualShift",
		children: O
	}, r);
	return tn([m, et = tt(["tag"], [et], r)]);
}, "htmlBuilder"), r8 = {
	c: "center ",
	l: "left ",
	r: "right "
}, r2 = e(function(e, t) {
	for (var r = [], a = new tF("mtd", [], ["mtr-glue"]), i = new tF("mtd", [], ["mml-eqn-num"]), n = 0; n < e.body.length; n++) {
		for (var s = e.body[n], o = [], l = 0; l < s.length; l++) o.push(new tF("mtd", [tj(s[l], t)]));
		e.tags && e.tags[n] && (o.unshift(a), o.push(a), e.leqno ? o.unshift(i) : o.push(i)), r.push(new tF("mtr", o));
	}
	var h = new tF("mtable", r), m = .5 === e.arraystretch ? .1 : .16 + e.arraystretch - 1 + .09 * !!e.addJot;
	h.setAttribute("rowspacing", ei(m));
	var c = "", u = "";
	if (e.cols && e.cols.length > 0) {
		var p = e.cols, d = "", g = !1, f = 0, v = p.length;
		"separator" === p[0].type && (c += "top ", f = 1), "separator" === p[p.length - 1].type && (c += "bottom ", v -= 1);
		for (var b = f; b < v; b++) "align" === p[b].type ? (u += r8[p[b].align], g && (d += "none "), g = !0) : "separator" === p[b].type && g && (d += "|" === p[b].separator ? "solid " : "dashed ", g = !1);
		h.setAttribute("columnalign", u.trim()), /[sd]/.test(d) && h.setAttribute("columnlines", d.trim());
	}
	if ("align" === e.colSeparationType) {
		for (var y = e.cols || [], x = "", w = 1; w < y.length; w++) x += w % 2 ? "0em " : "1em ";
		h.setAttribute("columnspacing", x.trim());
	} else "alignat" === e.colSeparationType || "gather" === e.colSeparationType ? h.setAttribute("columnspacing", "0em") : "small" === e.colSeparationType ? h.setAttribute("columnspacing", "0.2778em") : "CD" === e.colSeparationType ? h.setAttribute("columnspacing", "0.5em") : h.setAttribute("columnspacing", "1em");
	var k = "", S = e.hLinesBeforeRow;
	c += (S[0].length > 0 ? "left " : "") + (S[S.length - 1].length > 0 ? "right " : "");
	for (var z = 1; z < S.length - 1; z++) k += 0 === S[z].length ? "none " : S[z][0] ? "dashed " : "solid ";
	return /[sd]/.test(k) && h.setAttribute("rowlines", k.trim()), "" !== c && (h = new tF("menclose", [h])).setAttribute("notation", c.trim()), e.arraystretch && e.arraystretch < 1 && (h = new tF("mstyle", [h])).setAttribute("scriptlevel", "1"), h;
}, "mathmlBuilder"), r9 = e(function(e, t) {
	-1 === e.envName.indexOf("ed") && r4(e);
	var r, i = [], n = e.envName.indexOf("at") > -1 ? "alignat" : "align", s = "split" === e.envName, o = r6(e.parser, {
		cols: i,
		addJot: !0,
		autoTag: s ? void 0 : r5(e.envName),
		emptySingleRow: !0,
		colSeparationType: n,
		maxNumCols: s ? 2 : void 0,
		leqno: e.parser.settings.leqno
	}, "display"), l = 0, h = {
		type: "ordgroup",
		mode: e.mode,
		body: []
	};
	if (t[0] && "ordgroup" === t[0].type) {
		for (var m = "", c = 0; c < t[0].body.length; c++) m += t8(t[0].body[c], "textord").text;
		l = 2 * (r = Number(m));
	}
	var u = !l;
	o.body.forEach(function(e) {
		for (var t = 1; t < e.length; t += 2) {
			var i = t8(e[t], "styling");
			t8(i.body[0], "ordgroup").body.unshift(h);
		}
		if (u) l < e.length && (l = e.length);
		else {
			var n = e.length / 2;
			if (r < n) throw new a("Too many math in a row: expected " + r + ", but got " + n, e[0]);
		}
	});
	for (var p = 0; p < l; ++p) {
		var d = "r", g = 0;
		p % 2 == 1 ? d = "l" : p > 0 && u && (g = 1), i[p] = {
			type: "align",
			align: d,
			pregap: g,
			postgap: 0
		};
	}
	return o.colSeparationType = u ? "align" : "alignat", o;
}, "alignedHandler");
rJ({
	type: "array",
	names: ["array", "darray"],
	props: { numArgs: 1 },
	handler(e, t) {
		var r = (t9(t[0]) ? [t[0]] : t8(t[0], "ordgroup").body).map(function(e) {
			var t = t2(e).text;
			if (-1 !== "lcr".indexOf(t)) return {
				type: "align",
				align: t
			};
			if ("|" === t) return {
				type: "separator",
				separator: "|"
			};
			if (":" === t) return {
				type: "separator",
				separator: ":"
			};
			throw new a("Unknown column alignment: " + t, e);
		}), i = {
			cols: r,
			hskipBeforeAndAfter: !0,
			maxNumCols: r.length
		};
		return r6(e.parser, i, r7(e.envName));
	},
	htmlBuilder: r3,
	mathmlBuilder: r2
}), rJ({
	type: "array",
	names: [
		"matrix",
		"pmatrix",
		"bmatrix",
		"Bmatrix",
		"vmatrix",
		"Vmatrix",
		"matrix*",
		"pmatrix*",
		"bmatrix*",
		"Bmatrix*",
		"vmatrix*",
		"Vmatrix*"
	],
	props: { numArgs: 0 },
	handler(e) {
		var t = {
			matrix: null,
			pmatrix: ["(", ")"],
			bmatrix: ["[", "]"],
			Bmatrix: ["\\{", "\\}"],
			vmatrix: ["|", "|"],
			Vmatrix: ["\\Vert", "\\Vert"]
		}[e.envName.replace("*", "")], r = "c", i = {
			hskipBeforeAndAfter: !1,
			cols: [{
				type: "align",
				align: r
			}]
		};
		if ("*" === e.envName.charAt(e.envName.length - 1)) {
			var n = e.parser;
			if (n.consumeSpaces(), "[" === n.fetch().text) {
				if (n.consume(), n.consumeSpaces(), r = n.fetch().text, -1 === "lcr".indexOf(r)) throw new a("Expected l or c or r", n.nextToken);
				n.consume(), n.consumeSpaces(), n.expect("]"), n.consume(), i.cols = [{
					type: "align",
					align: r
				}];
			}
		}
		var s = r6(e.parser, i, r7(e.envName)), o = Math.max(0, ...s.body.map((e) => e.length));
		return s.cols = Array(o).fill({
			type: "align",
			align: r
		}), t ? {
			type: "leftright",
			mode: e.mode,
			body: [s],
			left: t[0],
			right: t[1],
			rightColor: void 0
		} : s;
	},
	htmlBuilder: r3,
	mathmlBuilder: r2
}), rJ({
	type: "array",
	names: ["smallmatrix"],
	props: { numArgs: 0 },
	handler(e) {
		var t = r6(e.parser, { arraystretch: .5 }, "script");
		return t.colSeparationType = "small", t;
	},
	htmlBuilder: r3,
	mathmlBuilder: r2
}), rJ({
	type: "array",
	names: ["subarray"],
	props: { numArgs: 1 },
	handler(e, t) {
		var r = (t9(t[0]) ? [t[0]] : t8(t[0], "ordgroup").body).map(function(e) {
			var t = t2(e).text;
			if (-1 !== "lc".indexOf(t)) return {
				type: "align",
				align: t
			};
			throw new a("Unknown column alignment: " + t, e);
		});
		if (r.length > 1) throw new a("{subarray} can contain only one column");
		var i = {
			cols: r,
			hskipBeforeAndAfter: !1,
			arraystretch: .5
		};
		if ((i = r6(e.parser, i, "script")).body.length > 0 && i.body[0].length > 1) throw new a("{subarray} can contain only one column");
		return i;
	},
	htmlBuilder: r3,
	mathmlBuilder: r2
}), rJ({
	type: "array",
	names: [
		"cases",
		"dcases",
		"rcases",
		"drcases"
	],
	props: { numArgs: 0 },
	handler(e) {
		var t = r6(e.parser, {
			arraystretch: 1.2,
			cols: [{
				type: "align",
				align: "l",
				pregap: 0,
				postgap: 1
			}, {
				type: "align",
				align: "l",
				pregap: 0,
				postgap: 0
			}]
		}, r7(e.envName));
		return {
			type: "leftright",
			mode: e.mode,
			body: [t],
			left: e.envName.indexOf("r") > -1 ? "." : "\\{",
			right: e.envName.indexOf("r") > -1 ? "\\}" : ".",
			rightColor: void 0
		};
	},
	htmlBuilder: r3,
	mathmlBuilder: r2
}), rJ({
	type: "array",
	names: [
		"align",
		"align*",
		"aligned",
		"split"
	],
	props: { numArgs: 0 },
	handler: r9,
	htmlBuilder: r3,
	mathmlBuilder: r2
}), rJ({
	type: "array",
	names: [
		"gathered",
		"gather",
		"gather*"
	],
	props: { numArgs: 0 },
	handler(e) {
		i(["gather", "gather*"], e.envName) && r4(e);
		var t = {
			cols: [{
				type: "align",
				align: "c"
			}],
			addJot: !0,
			colSeparationType: "gather",
			autoTag: r5(e.envName),
			emptySingleRow: !0,
			leqno: e.parser.settings.leqno
		};
		return r6(e.parser, t, "display");
	},
	htmlBuilder: r3,
	mathmlBuilder: r2
}), rJ({
	type: "array",
	names: [
		"alignat",
		"alignat*",
		"alignedat"
	],
	props: { numArgs: 1 },
	handler: r9,
	htmlBuilder: r3,
	mathmlBuilder: r2
}), rJ({
	type: "array",
	names: ["equation", "equation*"],
	props: { numArgs: 0 },
	handler(e) {
		r4(e);
		var t = {
			autoTag: r5(e.envName),
			emptySingleRow: !0,
			singleRow: !0,
			maxNumCols: 1,
			leqno: e.parser.settings.leqno
		};
		return r6(e.parser, t, "display");
	},
	htmlBuilder: r3,
	mathmlBuilder: r2
}), rJ({
	type: "array",
	names: ["CD"],
	props: { numArgs: 0 },
	handler: (e) => (r4(e), ru(e.parser)),
	htmlBuilder: r3,
	mathmlBuilder: r2
}), r0("\\nonumber", "\\gdef\\@eqnsw{0}"), r0("\\notag", "\\nonumber"), tk({
	type: "text",
	names: ["\\hline", "\\hdashline"],
	props: {
		numArgs: 0,
		allowedInText: !0,
		allowedInMath: !0
	},
	handler(e, t) {
		throw new a(e.funcName + " valid only within array environment");
	}
}), tk({
	type: "environment",
	names: ["\\begin", "\\end"],
	props: {
		numArgs: 1,
		argTypes: ["text"]
	},
	handler(e, t) {
		var { parser: r, funcName: i } = e, n = t[0];
		if ("ordgroup" !== n.type) throw new a("Invalid environment name", n);
		for (var s = "", o = 0; o < n.body.length; ++o) s += t8(n.body[o], "textord").text;
		if ("\\begin" === i) {
			if (!rK.hasOwnProperty(s)) throw new a("No such environment: " + s, n);
			var l = rK[s], { args: h, optArgs: m } = r.parseArguments("\\begin{" + s + "}", l), c = {
				mode: r.mode,
				envName: s,
				parser: r
			}, u = l.handler(c, h, m);
			r.expect("\\end", !1);
			var p = r.nextToken, d = t8(r.parseFunction(), "environment");
			if (d.name !== s) throw new a("Mismatch: \\begin{" + s + "} matched by \\end{" + d.name + "}", p);
			return u;
		}
		return {
			type: "environment",
			mode: r.mode,
			name: s,
			nameGroup: n
		};
	}
});
var ae = e((e, t) => {
	var r = e.font, a = t.withFont(r);
	return tN(e.body, a);
}, "htmlBuilder$5"), at = e((e, t) => {
	var r = e.font, a = t.withFont(r);
	return tj(e.body, a);
}, "mathmlBuilder$4"), ar = {
	"\\Bbb": "\\mathbb",
	"\\bold": "\\mathbf",
	"\\frak": "\\mathfrak",
	"\\bm": "\\boldsymbol"
};
tk({
	type: "font",
	names: [
		"\\mathrm",
		"\\mathit",
		"\\mathbf",
		"\\mathnormal",
		"\\mathsfit",
		"\\mathbb",
		"\\mathcal",
		"\\mathfrak",
		"\\mathscr",
		"\\mathsf",
		"\\mathtt",
		"\\Bbb",
		"\\bold",
		"\\frak"
	],
	props: {
		numArgs: 1,
		allowedInArgument: !0
	},
	handler: e((e, t) => {
		var { parser: r, funcName: a } = e, i = tz(t[0]), n = a;
		return n in ar && (n = ar[n]), {
			type: "font",
			mode: r.mode,
			font: n.slice(1),
			body: i
		};
	}, "handler"),
	htmlBuilder: ae,
	mathmlBuilder: at
}), tk({
	type: "mclass",
	names: ["\\boldsymbol", "\\bm"],
	props: { numArgs: 1 },
	handler: e((e, t) => {
		var { parser: r } = e, a = t[0], i = u(a);
		return {
			type: "mclass",
			mode: r.mode,
			mclass: rs(a),
			body: [{
				type: "font",
				mode: r.mode,
				font: "boldsymbol",
				body: a
			}],
			isCharacterBox: i
		};
	}, "handler")
}), tk({
	type: "font",
	names: [
		"\\rm",
		"\\sf",
		"\\tt",
		"\\bf",
		"\\it",
		"\\cal"
	],
	props: {
		numArgs: 0,
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { parser: r, funcName: a, breakOnTokenText: i } = e, { mode: n } = r, s = r.parseExpression(!0, i);
		return {
			type: "font",
			mode: n,
			font: "math" + a.slice(1),
			body: {
				type: "ordgroup",
				mode: r.mode,
				body: s
			}
		};
	}, "handler"),
	htmlBuilder: ae,
	mathmlBuilder: at
});
var aa = e((e, t) => {
	var r = t;
	return "display" === e ? r = r.id >= A.SCRIPT.id ? r.text() : A.DISPLAY : "text" === e && r.size === A.DISPLAY.size ? r = A.TEXT : "script" === e ? r = A.SCRIPT : "scriptscript" === e && (r = A.SCRIPTSCRIPT), r;
}, "adjustStyle"), ai = e((e, t) => {
	var r, a, i, n, s, o, l, h = aa(e.size, t.style), m = h.fracNum(), c = h.fracDen(), u = t.havingStyle(m), p = tN(e.numer, u, t);
	if (e.continued) {
		var d = 8.5 / t.fontMetrics().ptPerEm, g = 3.5 / t.fontMetrics().ptPerEm;
		p.height = p.height < d ? d : p.height, p.depth = p.depth < g ? g : p.depth;
	}
	u = t.havingStyle(c);
	var f, v, b, y = tN(e.denom, u, t);
	if (e.hasBarLine ? (e.barSize ? (v = ea(e.barSize, t), f = ta("frac-line", t, v)) : f = ta("frac-line", t), v = f.height, b = f.height) : (f = null, v = 0, b = t.fontMetrics().defaultRuleThickness), h.size === A.DISPLAY.size || "display" === e.size ? (r = t.fontMetrics().num1, a = v > 0 ? 3 * b : 7 * b, i = t.fontMetrics().denom1) : (v > 0 ? (r = t.fontMetrics().num2, a = b) : (r = t.fontMetrics().num3, a = 3 * b), i = t.fontMetrics().denom2), f) {
		var x = t.fontMetrics().axisHeight;
		r - p.depth - (x + .5 * v) < a && (r += a - (r - p.depth - (x + .5 * v))), x - .5 * v - (y.height - i) < a && (i += a - (x - .5 * v - (y.height - i))), n = tl({
			positionType: "individualShift",
			children: [
				{
					type: "elem",
					elem: y,
					shift: i
				},
				{
					type: "elem",
					elem: f,
					shift: -(x - .5 * v)
				},
				{
					type: "elem",
					elem: p,
					shift: -r
				}
			]
		}, t);
	} else {
		var w = r - p.depth - (y.height - i);
		w < a && (r += .5 * (a - w), i += .5 * (a - w)), n = tl({
			positionType: "individualShift",
			children: [{
				type: "elem",
				elem: y,
				shift: i
			}, {
				type: "elem",
				elem: p,
				shift: -r
			}]
		}, t);
	}
	return u = t.havingStyle(h), n.height *= u.sizeMultiplier / t.sizeMultiplier, n.depth *= u.sizeMultiplier / t.sizeMultiplier, s = h.size === A.DISPLAY.size ? t.fontMetrics().delim1 : h.size === A.SCRIPTSCRIPT.size ? t.havingStyle(A.SCRIPT).fontMetrics().delim2 : t.fontMetrics().delim2, o = null == e.leftDelim ? tO(t, ["mopen"]) : rU(e.leftDelim, s, !0, t.havingStyle(h), e.mode, ["mopen"]), l = e.continued ? tt([]) : null == e.rightDelim ? tO(t, ["mclose"]) : rU(e.rightDelim, s, !0, t.havingStyle(h), e.mode, ["mclose"]), tt(["mord"].concat(u.sizingClasses(t)), [
		o,
		tt(["mfrac"], [n]),
		l
	], t);
}, "htmlBuilder$4"), an = e((e, t) => {
	var r = new tF("mfrac", [tj(e.numer, t), tj(e.denom, t)]);
	if (e.hasBarLine) {
		if (e.barSize) {
			var a = ea(e.barSize, t);
			r.setAttribute("linethickness", ei(a));
		}
	} else r.setAttribute("linethickness", "0px");
	var i = aa(e.size, t.style);
	if (i.size !== t.style.size) {
		r = new tF("mstyle", [r]);
		var n = i.size === A.DISPLAY.size ? "true" : "false";
		r.setAttribute("displaystyle", n), r.setAttribute("scriptlevel", "0");
	}
	if (null != e.leftDelim || null != e.rightDelim) {
		var s = [];
		if (null != e.leftDelim) {
			var o = new tF("mo", [new tV(e.leftDelim.replace("\\", ""))]);
			o.setAttribute("fence", "true"), s.push(o);
		}
		if (s.push(r), null != e.rightDelim) {
			var l = new tF("mo", [new tV(e.rightDelim.replace("\\", ""))]);
			l.setAttribute("fence", "true"), s.push(l);
		}
		return t_(s);
	}
	return r;
}, "mathmlBuilder$3");
tk({
	type: "genfrac",
	names: [
		"\\dfrac",
		"\\frac",
		"\\tfrac",
		"\\dbinom",
		"\\binom",
		"\\tbinom",
		"\\\\atopfrac",
		"\\\\bracefrac",
		"\\\\brackfrac"
	],
	props: {
		numArgs: 2,
		allowedInArgument: !0
	},
	handler: e((e, t) => {
		var r, { parser: a, funcName: i } = e, n = t[0], s = t[1], o = null, l = null, h = "auto";
		switch (i) {
			case "\\dfrac":
			case "\\frac":
			case "\\tfrac":
				r = !0;
				break;
			case "\\\\atopfrac":
				r = !1;
				break;
			case "\\dbinom":
			case "\\binom":
			case "\\tbinom":
				r = !1, o = "(", l = ")";
				break;
			case "\\\\bracefrac":
				r = !1, o = "\\{", l = "\\}";
				break;
			case "\\\\brackfrac":
				r = !1, o = "[", l = "]";
				break;
			default: throw Error("Unrecognized genfrac command");
		}
		switch (i) {
			case "\\dfrac":
			case "\\dbinom":
				h = "display";
				break;
			case "\\tfrac":
			case "\\tbinom": h = "text";
		}
		return {
			type: "genfrac",
			mode: a.mode,
			continued: !1,
			numer: n,
			denom: s,
			hasBarLine: r,
			leftDelim: o,
			rightDelim: l,
			size: h,
			barSize: null
		};
	}, "handler"),
	htmlBuilder: ai,
	mathmlBuilder: an
}), tk({
	type: "genfrac",
	names: ["\\cfrac"],
	props: { numArgs: 2 },
	handler: e((e, t) => {
		var { parser: r, funcName: a } = e, i = t[0], n = t[1];
		return {
			type: "genfrac",
			mode: r.mode,
			continued: !0,
			numer: i,
			denom: n,
			hasBarLine: !0,
			leftDelim: null,
			rightDelim: null,
			size: "display",
			barSize: null
		};
	}, "handler")
}), tk({
	type: "infix",
	names: [
		"\\over",
		"\\choose",
		"\\atop",
		"\\brace",
		"\\brack"
	],
	props: {
		numArgs: 0,
		infix: !0
	},
	handler(e) {
		var t, { parser: r, funcName: a, token: i } = e;
		switch (a) {
			case "\\over":
				t = "\\frac";
				break;
			case "\\choose":
				t = "\\binom";
				break;
			case "\\atop":
				t = "\\\\atopfrac";
				break;
			case "\\brace":
				t = "\\\\bracefrac";
				break;
			case "\\brack":
				t = "\\\\brackfrac";
				break;
			default: throw Error("Unrecognized infix genfrac command");
		}
		return {
			type: "infix",
			mode: r.mode,
			replaceWith: t,
			token: i
		};
	}
});
var as = [
	"display",
	"text",
	"script",
	"scriptscript"
], ao = e(function(e) {
	var t = null;
	return e.length > 0 && (t = "." === (t = e) ? null : t), t;
}, "delimFromValue");
tk({
	type: "genfrac",
	names: ["\\genfrac"],
	props: {
		numArgs: 6,
		allowedInArgument: !0,
		argTypes: [
			"math",
			"math",
			"size",
			"text",
			"math",
			"math"
		]
	},
	handler(e, t) {
		var r, { parser: a } = e, i = t[4], n = t[5], s = tz(t[0]), o = "atom" === s.type && "open" === s.family ? ao(s.text) : null, l = tz(t[1]), h = "atom" === l.type && "close" === l.family ? ao(l.text) : null, m = t8(t[2], "size"), c = null;
		r = !!m.isBlank || (c = m.value).number > 0;
		var u = "auto", p = t[3];
		return "ordgroup" === p.type ? p.body.length > 0 && (u = as[Number(t8(p.body[0], "textord").text)]) : u = as[Number((p = t8(p, "textord")).text)], {
			type: "genfrac",
			mode: a.mode,
			numer: i,
			denom: n,
			continued: !1,
			hasBarLine: r,
			barSize: c,
			leftDelim: o,
			rightDelim: h,
			size: u
		};
	},
	htmlBuilder: ai,
	mathmlBuilder: an
}), tk({
	type: "infix",
	names: ["\\above"],
	props: {
		numArgs: 1,
		argTypes: ["size"],
		infix: !0
	},
	handler(e, t) {
		var { parser: r, funcName: a, token: i } = e;
		return {
			type: "infix",
			mode: r.mode,
			replaceWith: "\\\\abovefrac",
			size: t8(t[0], "size").value,
			token: i
		};
	}
}), tk({
	type: "genfrac",
	names: ["\\\\abovefrac"],
	props: {
		numArgs: 3,
		argTypes: [
			"math",
			"size",
			"math"
		]
	},
	handler: e((e, t) => {
		var { parser: r, funcName: a } = e, i = t[0], n = p(t8(t[1], "infix").size), s = t[2], o = n.number > 0;
		return {
			type: "genfrac",
			mode: r.mode,
			numer: i,
			denom: s,
			continued: !1,
			hasBarLine: o,
			barSize: n,
			leftDelim: null,
			rightDelim: null,
			size: "auto"
		};
	}, "handler"),
	htmlBuilder: ai,
	mathmlBuilder: an
});
var al = e((e, t) => {
	var r, a, i = t.style;
	"supsub" === e.type ? (r = e.sup ? tN(e.sup, t.havingStyle(i.sup()), t) : tN(e.sub, t.havingStyle(i.sub()), t), a = t8(e.base, "horizBrace")) : a = t8(e, "horizBrace");
	var n, s = tN(a.base, t.havingBaseStyle(A.DISPLAY)), o = t3.svgSpan(a, t);
	if (a.isOver ? (n = tl({
		positionType: "firstBaseline",
		children: [
			{
				type: "elem",
				elem: s
			},
			{
				type: "kern",
				size: .1
			},
			{
				type: "elem",
				elem: o
			}
		]
	}, t)).children[0].children[0].children[1].classes.push("svg-align") : (n = tl({
		positionType: "bottom",
		positionData: s.depth + .1 + o.height,
		children: [
			{
				type: "elem",
				elem: o
			},
			{
				type: "kern",
				size: .1
			},
			{
				type: "elem",
				elem: s
			}
		]
	}, t)).children[0].children[0].children[0].classes.push("svg-align"), r) {
		var l = tt(["mord", a.isOver ? "mover" : "munder"], [n], t);
		n = a.isOver ? tl({
			positionType: "firstBaseline",
			children: [
				{
					type: "elem",
					elem: l
				},
				{
					type: "kern",
					size: .2
				},
				{
					type: "elem",
					elem: r
				}
			]
		}, t) : tl({
			positionType: "bottom",
			positionData: l.depth + .2 + r.height + r.depth,
			children: [
				{
					type: "elem",
					elem: r
				},
				{
					type: "kern",
					size: .2
				},
				{
					type: "elem",
					elem: l
				}
			]
		}, t);
	}
	return tt(["mord", a.isOver ? "mover" : "munder"], [n], t);
}, "htmlBuilder$3");
tk({
	type: "horizBrace",
	names: ["\\overbrace", "\\underbrace"],
	props: { numArgs: 1 },
	handler(e, t) {
		var { parser: r, funcName: a } = e;
		return {
			type: "horizBrace",
			mode: r.mode,
			label: a,
			isOver: /^\\over/.test(a),
			base: t[0]
		};
	},
	htmlBuilder: al,
	mathmlBuilder: e((e, t) => {
		var r = t3.mathMLnode(e.label);
		return new tF(e.isOver ? "mover" : "munder", [tj(e.base, t), r]);
	}, "mathmlBuilder$2")
}), tk({
	type: "href",
	names: ["\\href"],
	props: {
		numArgs: 2,
		argTypes: ["url", "original"],
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { parser: r } = e, a = t[1], i = t8(t[0], "url").url;
		return r.settings.isTrusted({
			command: "\\href",
			url: i
		}) ? {
			type: "href",
			mode: r.mode,
			href: i,
			body: tM(a)
		} : r.formatUnsupportedCmd("\\href");
	}, "handler"),
	htmlBuilder: e((e, t) => {
		var r = tC(e.body, t, !1);
		return ti(e.href, [], r, t);
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => {
		var r = t$(e.body, t);
		return r instanceof tF || (r = new tF("mrow", [r])), r.setAttribute("href", e.href), r;
	}, "mathmlBuilder")
}), tk({
	type: "href",
	names: ["\\url"],
	props: {
		numArgs: 1,
		argTypes: ["url"],
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { parser: r } = e, a = t8(t[0], "url").url;
		if (!r.settings.isTrusted({
			command: "\\url",
			url: a
		})) return r.formatUnsupportedCmd("\\url");
		for (var i = [], n = 0; n < a.length; n++) {
			var s = a[n];
			"~" === s && (s = "\\textasciitilde"), i.push({
				type: "textord",
				mode: "text",
				text: s
			});
		}
		var o = {
			type: "text",
			mode: r.mode,
			font: "\\texttt",
			body: i
		};
		return {
			type: "href",
			mode: r.mode,
			href: a,
			body: tM(o)
		};
	}, "handler")
}), tk({
	type: "hbox",
	names: ["\\hbox"],
	props: {
		numArgs: 1,
		argTypes: ["text"],
		allowedInText: !0,
		primitive: !0
	},
	handler(e, t) {
		var { parser: r } = e;
		return {
			type: "hbox",
			mode: r.mode,
			body: tM(t[0])
		};
	},
	htmlBuilder: (e, t) => tn(tC(e.body, t, !1)),
	mathmlBuilder: (e, t) => new tF("mrow", tX(e.body, t))
}), tk({
	type: "html",
	names: [
		"\\htmlClass",
		"\\htmlId",
		"\\htmlStyle",
		"\\htmlData"
	],
	props: {
		numArgs: 2,
		argTypes: ["raw", "original"],
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { parser: r, funcName: i, token: n } = e, s = t8(t[0], "raw").string, o = t[1];
		r.settings.strict && r.settings.reportNonstrict("htmlExtension", "HTML extension is disabled on strict mode");
		var l, h = {};
		switch (i) {
			case "\\htmlClass":
				h.class = s, l = {
					command: "\\htmlClass",
					class: s
				};
				break;
			case "\\htmlId":
				h.id = s, l = {
					command: "\\htmlId",
					id: s
				};
				break;
			case "\\htmlStyle":
				h.style = s, l = {
					command: "\\htmlStyle",
					style: s
				};
				break;
			case "\\htmlData":
				for (var m = s.split(","), c = 0; c < m.length; c++) {
					var u = m[c].split("=");
					if (2 !== u.length) throw new a("Error parsing key-value for \\htmlData");
					h["data-" + u[0].trim()] = u[1].trim();
				}
				l = {
					command: "\\htmlData",
					attributes: h
				};
				break;
			default: throw Error("Unrecognized html command");
		}
		return r.settings.isTrusted(l) ? {
			type: "html",
			mode: r.mode,
			attributes: h,
			body: tM(o)
		} : r.formatUnsupportedCmd(i);
	}, "handler"),
	htmlBuilder: e((e, t) => {
		var r = tC(e.body, t, !1), a = ["enclosing"];
		e.attributes.class && a.push(...e.attributes.class.trim().split(/\s+/));
		var i = tt(a, r, t);
		for (var n in e.attributes) "class" !== n && e.attributes.hasOwnProperty(n) && i.setAttribute(n, e.attributes[n]);
		return i;
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => t$(e.body, t), "mathmlBuilder")
}), tk({
	type: "htmlmathml",
	names: ["\\html@mathml"],
	props: {
		numArgs: 2,
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { parser: r } = e;
		return {
			type: "htmlmathml",
			mode: r.mode,
			html: tM(t[0]),
			mathml: tM(t[1])
		};
	}, "handler"),
	htmlBuilder: e((e, t) => tn(tC(e.html, t, !1)), "htmlBuilder"),
	mathmlBuilder: e((e, t) => t$(e.mathml, t), "mathmlBuilder")
});
var ah = e(function(e) {
	if (/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(e)) return {
		number: +e,
		unit: "bp"
	};
	var t = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(e);
	if (!t) throw new a("Invalid size: '" + e + "' in \\includegraphics");
	var r = {
		number: +(t[1] + t[2]),
		unit: t[3]
	};
	if (!er(r)) throw new a("Invalid unit: '" + r.unit + "' in \\includegraphics.");
	return r;
}, "sizeData");
tk({
	type: "includegraphics",
	names: ["\\includegraphics"],
	props: {
		numArgs: 1,
		numOptionalArgs: 1,
		argTypes: ["raw", "url"],
		allowedInText: !1
	},
	handler: e((e, t, r) => {
		var { parser: i } = e, n = {
			number: 0,
			unit: "em"
		}, s = {
			number: .9,
			unit: "em"
		}, o = {
			number: 0,
			unit: "em"
		}, l = "";
		if (r[0]) for (var h = t8(r[0], "raw").string, m = h.split(","), c = 0; c < m.length; c++) {
			var u = m[c].split("=");
			if (2 === u.length) {
				var p = u[1].trim();
				switch (u[0].trim()) {
					case "alt":
						l = p;
						break;
					case "width":
						n = ah(p);
						break;
					case "height":
						s = ah(p);
						break;
					case "totalheight":
						o = ah(p);
						break;
					default: throw new a("Invalid key: '" + u[0] + "' in \\includegraphics.");
				}
			}
		}
		var d = t8(t[0], "url").url;
		return "" === l && (l = (l = (l = d).replace(/^.*[\\/]/, "")).substring(0, l.lastIndexOf("."))), i.settings.isTrusted({
			command: "\\includegraphics",
			url: d
		}) ? {
			type: "includegraphics",
			mode: i.mode,
			alt: l,
			width: n,
			height: s,
			totalheight: o,
			src: d
		} : i.formatUnsupportedCmd("\\includegraphics");
	}, "handler"),
	htmlBuilder: e((e, t) => {
		var r = ea(e.height, t), a = 0;
		e.totalheight.number > 0 && (a = ea(e.totalheight, t) - r);
		var i = 0;
		e.width.number > 0 && (i = ea(e.width, t));
		var n = { height: ei(r + a) };
		i > 0 && (n.width = ei(i)), a > 0 && (n.verticalAlign = ei(-a));
		var s = new eu(e.src, e.alt, n);
		return s.height = r, s.depth = a, s;
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => {
		var r = new tF("mglyph", []);
		r.setAttribute("alt", e.alt);
		var a = ea(e.height, t), i = 0;
		if (e.totalheight.number > 0 && (i = ea(e.totalheight, t) - a, r.setAttribute("valign", ei(-i))), r.setAttribute("height", ei(a + i)), e.width.number > 0) {
			var n = ea(e.width, t);
			r.setAttribute("width", ei(n));
		}
		return r.setAttribute("src", e.src), r;
	}, "mathmlBuilder")
}), tk({
	type: "kern",
	names: [
		"\\kern",
		"\\mkern",
		"\\hskip",
		"\\mskip"
	],
	props: {
		numArgs: 1,
		argTypes: ["size"],
		primitive: !0,
		allowedInText: !0
	},
	handler(e, t) {
		var { parser: r, funcName: a } = e, i = t8(t[0], "size");
		if (r.settings.strict) {
			var n = "m" === a[1], s = "mu" === i.value.unit;
			n ? (s || r.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + a + " supports only mu units, not " + i.value.unit + " units"), "math" !== r.mode && r.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + a + " works only in math mode")) : s && r.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + a + " doesn't support mu units");
		}
		return {
			type: "kern",
			mode: r.mode,
			dimension: i.value
		};
	},
	htmlBuilder: (e, t) => th(e.dimension, t),
	mathmlBuilder: (e, t) => new tG(ea(e.dimension, t))
}), tk({
	type: "lap",
	names: [
		"\\mathllap",
		"\\mathrlap",
		"\\mathclap"
	],
	props: {
		numArgs: 1,
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { parser: r, funcName: a } = e, i = t[0];
		return {
			type: "lap",
			mode: r.mode,
			alignment: a.slice(5),
			body: i
		};
	}, "handler"),
	htmlBuilder: e((e, t) => {
		"clap" === e.alignment ? (r = tt([], [tN(e.body, t)]), r = tt(["inner"], [r], t)) : r = tt(["inner"], [tN(e.body, t)]);
		var r, a = tt(["fix"], []), i = tt([e.alignment], [r, a], t), n = tt(["strut"]);
		return n.style.height = ei(i.height + i.depth), i.depth && (n.style.verticalAlign = ei(-i.depth)), i.children.unshift(n), i = tt(["thinbox"], [i], t), tt(["mord", "vbox"], [i], t);
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => {
		var r = new tF("mpadded", [tj(e.body, t)]);
		if ("rlap" !== e.alignment) {
			var a = "llap" === e.alignment ? "-1" : "-0.5";
			r.setAttribute("lspace", a + "width");
		}
		return r.setAttribute("width", "0px"), r;
	}, "mathmlBuilder")
}), tk({
	type: "styling",
	names: ["\\(", "$"],
	props: {
		numArgs: 0,
		allowedInText: !0,
		allowedInMath: !1
	},
	handler(e, t) {
		var { funcName: r, parser: a } = e, i = a.mode;
		a.switchMode("math");
		var n = "\\(" === r ? "\\)" : "$", s = a.parseExpression(!1, n);
		return a.expect(n), a.switchMode(i), {
			type: "styling",
			mode: a.mode,
			style: "text",
			body: s
		};
	}
}), tk({
	type: "text",
	names: ["\\)", "\\]"],
	props: {
		numArgs: 0,
		allowedInText: !0,
		allowedInMath: !1
	},
	handler(e, t) {
		throw new a("Mismatched " + e.funcName);
	}
});
var am = e((e, t) => {
	switch (t.style.size) {
		case A.DISPLAY.size: return e.display;
		case A.TEXT.size: return e.text;
		case A.SCRIPT.size: return e.script;
		case A.SCRIPTSCRIPT.size: return e.scriptscript;
		default: return e.text;
	}
}, "chooseMathStyle");
tk({
	type: "mathchoice",
	names: ["\\mathchoice"],
	props: {
		numArgs: 4,
		primitive: !0
	},
	handler: e((e, t) => {
		var { parser: r } = e;
		return {
			type: "mathchoice",
			mode: r.mode,
			display: tM(t[0]),
			text: tM(t[1]),
			script: tM(t[2]),
			scriptscript: tM(t[3])
		};
	}, "handler"),
	htmlBuilder: e((e, t) => tn(tC(am(e, t), t, !1)), "htmlBuilder"),
	mathmlBuilder: e((e, t) => t$(am(e, t), t), "mathmlBuilder")
});
var ac = e((e, t, r, a, i, n, s) => {
	e = tt([], [e]);
	var o, l, h, m = r && u(r);
	if (t) {
		var c = tN(t, a.havingStyle(i.sup()), a);
		h = {
			elem: c,
			kern: Math.max(a.fontMetrics().bigOpSpacing1, a.fontMetrics().bigOpSpacing3 - c.depth)
		};
	}
	if (r) {
		var p = tN(r, a.havingStyle(i.sub()), a);
		l = {
			elem: p,
			kern: Math.max(a.fontMetrics().bigOpSpacing2, a.fontMetrics().bigOpSpacing4 - p.height)
		};
	}
	if (h && l) o = tl({
		positionType: "bottom",
		positionData: a.fontMetrics().bigOpSpacing5 + l.elem.height + l.elem.depth + l.kern + e.depth + s,
		children: [
			{
				type: "kern",
				size: a.fontMetrics().bigOpSpacing5
			},
			{
				type: "elem",
				elem: l.elem,
				marginLeft: ei(-n)
			},
			{
				type: "kern",
				size: l.kern
			},
			{
				type: "elem",
				elem: e
			},
			{
				type: "kern",
				size: h.kern
			},
			{
				type: "elem",
				elem: h.elem,
				marginLeft: ei(n)
			},
			{
				type: "kern",
				size: a.fontMetrics().bigOpSpacing5
			}
		]
	}, a);
	else if (l) o = tl({
		positionType: "top",
		positionData: e.height - s,
		children: [
			{
				type: "kern",
				size: a.fontMetrics().bigOpSpacing5
			},
			{
				type: "elem",
				elem: l.elem,
				marginLeft: ei(-n)
			},
			{
				type: "kern",
				size: l.kern
			},
			{
				type: "elem",
				elem: e
			}
		]
	}, a);
	else {
		if (!h) return e;
		o = tl({
			positionType: "bottom",
			positionData: e.depth + s,
			children: [
				{
					type: "elem",
					elem: e
				},
				{
					type: "kern",
					size: h.kern
				},
				{
					type: "elem",
					elem: h.elem,
					marginLeft: ei(n)
				},
				{
					type: "kern",
					size: a.fontMetrics().bigOpSpacing5
				}
			]
		}, a);
	}
	var d = [o];
	if (l && 0 !== n && !m) {
		var g = tt(["mspace"], [], a);
		g.style.marginRight = ei(n), d.unshift(g);
	}
	return tt(["mop", "op-limits"], d, a);
}, "assembleSupSub"), au = ["\\smallint"], ap = e((e, t) => {
	var r, a, n, s, o = !1;
	"supsub" === e.type ? (a = e.sup, n = e.sub, s = t8(e.base, "op"), o = !0) : s = t8(e, "op");
	var l = t.style, h = !1;
	if (l.size === A.DISPLAY.size && s.symbol && !i(au, s.name) && (h = !0), s.symbol) {
		var m = h ? "Size2-Regular" : "Size1-Regular", c = "";
		if (("\\oiint" === s.name || "\\oiiint" === s.name) && (c = s.name.slice(1), s.name = "oiint" === c ? "\\iint" : "\\iiint"), r = e6(s.name, m, "math", t, [
			"mop",
			"op-symbol",
			h ? "large-op" : "small-op"
		]), c.length > 0) {
			var u = r.italic;
			r = tl({
				positionType: "individualShift",
				children: [{
					type: "elem",
					elem: r,
					shift: 0
				}, {
					type: "elem",
					elem: tp(c + "Size" + (h ? "2" : "1"), t),
					shift: .08 * !!h
				}]
			}, t), s.name = "\\" + c, r.classes.unshift("mop"), r.italic = u;
		}
	} else if (s.body) {
		var p = tC(s.body, t, !0);
		1 === p.length && p[0] instanceof ed ? (r = p[0]).classes[0] = "mop" : r = tt(["mop"], p, t);
	} else {
		for (var d = [], g = 1; g < s.name.length; g++) d.push(e7(s.name[g], s.mode, t));
		r = tt(["mop"], d, t);
	}
	var f = 0, v = 0;
	return (r instanceof ed || "\\oiint" === s.name || "\\oiiint" === s.name) && !s.suppressBaseShift && (f = (r.height - r.depth) / 2 - t.fontMetrics().axisHeight, v = r.italic), o ? ac(r, a, n, t, l, v, f) : (f && (r.style.position = "relative", r.style.top = ei(f)), r);
}, "htmlBuilder$2"), ad = e((e, t) => {
	var r;
	if (e.symbol) r = new tF("mo", [tU(e.name, e.mode)]), i(au, e.name) && r.setAttribute("largeop", "false");
	else if (e.body) r = new tF("mo", tX(e.body, t));
	else {
		r = new tF("mi", [new tV(e.name.slice(1))]);
		var a = new tF("mo", [tU("⁡", "text")]);
		r = e.parentIsSupSub ? new tF("mrow", [r, a]) : tP([r, a]);
	}
	return r;
}, "mathmlBuilder$1"), ag = {
	"∏": "\\prod",
	"∐": "\\coprod",
	"∑": "\\sum",
	"⋀": "\\bigwedge",
	"⋁": "\\bigvee",
	"⋂": "\\bigcap",
	"⋃": "\\bigcup",
	"⨀": "\\bigodot",
	"⨁": "\\bigoplus",
	"⨂": "\\bigotimes",
	"⨄": "\\biguplus",
	"⨆": "\\bigsqcup"
};
tk({
	type: "op",
	names: [
		"\\coprod",
		"\\bigvee",
		"\\bigwedge",
		"\\biguplus",
		"\\bigcap",
		"\\bigcup",
		"\\intop",
		"\\prod",
		"\\sum",
		"\\bigotimes",
		"\\bigoplus",
		"\\bigodot",
		"\\bigsqcup",
		"\\smallint",
		"∏",
		"∐",
		"∑",
		"⋀",
		"⋁",
		"⋂",
		"⋃",
		"⨀",
		"⨁",
		"⨂",
		"⨄",
		"⨆"
	],
	props: { numArgs: 0 },
	handler: e((e, t) => {
		var { parser: r, funcName: a } = e, i = a;
		return 1 === i.length && (i = ag[i]), {
			type: "op",
			mode: r.mode,
			limits: !0,
			parentIsSupSub: !1,
			symbol: !0,
			name: i
		};
	}, "handler"),
	htmlBuilder: ap,
	mathmlBuilder: ad
}), tk({
	type: "op",
	names: ["\\mathop"],
	props: {
		numArgs: 1,
		primitive: !0
	},
	handler: e((e, t) => {
		var { parser: r } = e, a = t[0];
		return {
			type: "op",
			mode: r.mode,
			limits: !1,
			parentIsSupSub: !1,
			symbol: !1,
			body: tM(a)
		};
	}, "handler"),
	htmlBuilder: ap,
	mathmlBuilder: ad
});
var af = {
	"∫": "\\int",
	"∬": "\\iint",
	"∭": "\\iiint",
	"∮": "\\oint",
	"∯": "\\oiint",
	"∰": "\\oiiint"
};
tk({
	type: "op",
	names: [
		"\\arcsin",
		"\\arccos",
		"\\arctan",
		"\\arctg",
		"\\arcctg",
		"\\arg",
		"\\ch",
		"\\cos",
		"\\cosec",
		"\\cosh",
		"\\cot",
		"\\cotg",
		"\\coth",
		"\\csc",
		"\\ctg",
		"\\cth",
		"\\deg",
		"\\dim",
		"\\exp",
		"\\hom",
		"\\ker",
		"\\lg",
		"\\ln",
		"\\log",
		"\\sec",
		"\\sin",
		"\\sinh",
		"\\sh",
		"\\tan",
		"\\tanh",
		"\\tg",
		"\\th"
	],
	props: { numArgs: 0 },
	handler(e) {
		var { parser: t, funcName: r } = e;
		return {
			type: "op",
			mode: t.mode,
			limits: !1,
			parentIsSupSub: !1,
			symbol: !1,
			name: r
		};
	},
	htmlBuilder: ap,
	mathmlBuilder: ad
}), tk({
	type: "op",
	names: [
		"\\det",
		"\\gcd",
		"\\inf",
		"\\lim",
		"\\max",
		"\\min",
		"\\Pr",
		"\\sup"
	],
	props: { numArgs: 0 },
	handler(e) {
		var { parser: t, funcName: r } = e;
		return {
			type: "op",
			mode: t.mode,
			limits: !0,
			parentIsSupSub: !1,
			symbol: !1,
			name: r
		};
	},
	htmlBuilder: ap,
	mathmlBuilder: ad
}), tk({
	type: "op",
	names: [
		"\\int",
		"\\iint",
		"\\iiint",
		"\\oint",
		"\\oiint",
		"\\oiiint",
		"∫",
		"∬",
		"∭",
		"∮",
		"∯",
		"∰"
	],
	props: { numArgs: 0 },
	handler(e) {
		var { parser: t, funcName: r } = e, a = r;
		return 1 === a.length && (a = af[a]), {
			type: "op",
			mode: t.mode,
			limits: !1,
			parentIsSupSub: !1,
			symbol: !0,
			name: a
		};
	},
	htmlBuilder: ap,
	mathmlBuilder: ad
});
var av = e((e, t) => {
	var r, a, i, n, s = !1;
	if ("supsub" === e.type ? (a = e.sup, i = e.sub, n = t8(e.base, "operatorname"), s = !0) : n = t8(e, "operatorname"), n.body.length > 0) {
		for (var o = n.body.map((e) => {
			var t = e.text;
			return "string" == typeof t ? {
				type: "textord",
				mode: e.mode,
				text: t
			} : e;
		}), l = tC(o, t.withFont("mathrm"), !0), h = 0; h < l.length; h++) {
			var m = l[h];
			m instanceof ed && (m.text = m.text.replace(/\u2212/, "-").replace(/\u2217/, "*"));
		}
		r = tt(["mop"], l, t);
	} else r = tt(["mop"], [], t);
	return s ? ac(r, a, i, t, t.style, 0, 0) : r;
}, "htmlBuilder$1"), ab = e((e, t) => {
	for (var r = tX(e.body, t.withFont("mathrm")), a = !0, i = 0; i < r.length; i++) {
		var n = r[i];
		if (!(n instanceof tG)) if (n instanceof tF) switch (n.type) {
			case "mi":
			case "mn":
			case "ms":
			case "mspace":
			case "mtext": break;
			case "mo":
				var s = n.children[0];
				1 === n.children.length && s instanceof tV ? s.text = s.text.replace(/\u2212/, "-").replace(/\u2217/, "*") : a = !1;
				break;
			default: a = !1;
		}
		else a = !1;
	}
	a && (r = [new tV(r.map((e) => e.toText()).join(""))]);
	var o = new tF("mi", r);
	o.setAttribute("mathvariant", "normal");
	var l = new tF("mo", [tU("⁡", "text")]);
	return e.parentIsSupSub ? new tF("mrow", [o, l]) : tP([o, l]);
}, "mathmlBuilder");
function ay(e, t, r) {
	for (var a = tC(e, t, !1), i = t.sizeMultiplier / r.sizeMultiplier, n = 0; n < a.length; n++) {
		var s = a[n].classes.indexOf("sizing");
		s < 0 ? Array.prototype.push.apply(a[n].classes, t.sizingClasses(r)) : a[n].classes[s + 1] === "reset-size" + t.size && (a[n].classes[s + 1] = "reset-size" + r.size), a[n].height *= i, a[n].depth *= i;
	}
	return tn(a);
}
tk({
	type: "operatorname",
	names: ["\\operatorname@", "\\operatornamewithlimits"],
	props: { numArgs: 1 },
	handler: e((e, t) => {
		var { parser: r, funcName: a } = e, i = t[0];
		return {
			type: "operatorname",
			mode: r.mode,
			body: tM(i),
			alwaysHandleSupSub: "\\operatornamewithlimits" === a,
			limits: !1,
			parentIsSupSub: !1
		};
	}, "handler"),
	htmlBuilder: av,
	mathmlBuilder: ab
}), r0("\\operatorname", "\\@ifstar\\operatornamewithlimits\\operatorname@"), tS({
	type: "ordgroup",
	htmlBuilder: (e, t) => e.semisimple ? tn(tC(e.body, t, !1)) : tt(["mord"], tC(e.body, t, !0), t),
	mathmlBuilder: (e, t) => t$(e.body, t, !0)
}), tk({
	type: "overline",
	names: ["\\overline"],
	props: { numArgs: 1 },
	handler(e, t) {
		var { parser: r } = e, a = t[0];
		return {
			type: "overline",
			mode: r.mode,
			body: a
		};
	},
	htmlBuilder(e, t) {
		var r = tN(e.body, t.havingCrampedStyle()), a = ta("overline-line", t), i = t.fontMetrics().defaultRuleThickness;
		return tt(["mord", "overline"], [tl({
			positionType: "firstBaseline",
			children: [
				{
					type: "elem",
					elem: r
				},
				{
					type: "kern",
					size: 3 * i
				},
				{
					type: "elem",
					elem: a
				},
				{
					type: "kern",
					size: i
				}
			]
		}, t)], t);
	},
	mathmlBuilder(e, t) {
		var r = new tF("mo", [new tV("‾")]);
		r.setAttribute("stretchy", "true");
		var a = new tF("mover", [tj(e.body, t), r]);
		return a.setAttribute("accent", "true"), a;
	}
}), tk({
	type: "phantom",
	names: ["\\phantom"],
	props: {
		numArgs: 1,
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { parser: r } = e, a = t[0];
		return {
			type: "phantom",
			mode: r.mode,
			body: tM(a)
		};
	}, "handler"),
	htmlBuilder: e((e, t) => tn(tC(e.body, t.withPhantom(), !1)), "htmlBuilder"),
	mathmlBuilder: e((e, t) => new tF("mphantom", tX(e.body, t)), "mathmlBuilder")
}), tk({
	type: "hphantom",
	names: ["\\hphantom"],
	props: {
		numArgs: 1,
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { parser: r } = e, a = t[0];
		return {
			type: "hphantom",
			mode: r.mode,
			body: a
		};
	}, "handler"),
	htmlBuilder: e((e, t) => {
		var r = tt([], [tN(e.body, t.withPhantom())]);
		if (r.height = 0, r.depth = 0, r.children) for (var a = 0; a < r.children.length; a++) r.children[a].height = 0, r.children[a].depth = 0;
		return tt(["mord"], [r = tl({
			positionType: "firstBaseline",
			children: [{
				type: "elem",
				elem: r
			}]
		}, t)], t);
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => {
		var r = new tF("mphantom", tX(tM(e.body), t)), a = new tF("mpadded", [r]);
		return a.setAttribute("height", "0px"), a.setAttribute("depth", "0px"), a;
	}, "mathmlBuilder")
}), tk({
	type: "vphantom",
	names: ["\\vphantom"],
	props: {
		numArgs: 1,
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { parser: r } = e, a = t[0];
		return {
			type: "vphantom",
			mode: r.mode,
			body: a
		};
	}, "handler"),
	htmlBuilder: e((e, t) => {
		var r = tt(["inner"], [tN(e.body, t.withPhantom())]), a = tt(["fix"], []);
		return tt(["mord", "rlap"], [r, a], t);
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => {
		var r = new tF("mphantom", tX(tM(e.body), t)), a = new tF("mpadded", [r]);
		return a.setAttribute("width", "0px"), a;
	}, "mathmlBuilder")
}), tk({
	type: "raisebox",
	names: ["\\raisebox"],
	props: {
		numArgs: 2,
		argTypes: ["size", "hbox"],
		allowedInText: !0
	},
	handler(e, t) {
		var { parser: r } = e, a = t8(t[0], "size").value, i = t[1];
		return {
			type: "raisebox",
			mode: r.mode,
			dy: a,
			body: i
		};
	},
	htmlBuilder(e, t) {
		var r = tN(e.body, t);
		return tl({
			positionType: "shift",
			positionData: -ea(e.dy, t),
			children: [{
				type: "elem",
				elem: r
			}]
		}, t);
	},
	mathmlBuilder(e, t) {
		var r = new tF("mpadded", [tj(e.body, t)]), a = e.dy.number + e.dy.unit;
		return r.setAttribute("voffset", a), r;
	}
}), tk({
	type: "internal",
	names: ["\\relax"],
	props: {
		numArgs: 0,
		allowedInText: !0,
		allowedInArgument: !0
	},
	handler(e) {
		var { parser: t } = e;
		return {
			type: "internal",
			mode: t.mode
		};
	}
}), tk({
	type: "rule",
	names: ["\\rule"],
	props: {
		numArgs: 2,
		numOptionalArgs: 1,
		allowedInText: !0,
		allowedInMath: !0,
		argTypes: [
			"size",
			"size",
			"size"
		]
	},
	handler(e, t, r) {
		var { parser: a } = e, i = r[0], n = t8(t[0], "size"), s = t8(t[1], "size");
		return {
			type: "rule",
			mode: a.mode,
			shift: i && t8(i, "size").value,
			width: n.value,
			height: s.value
		};
	},
	htmlBuilder(e, t) {
		var r = tt(["mord", "rule"], [], t), a = ea(e.width, t), i = ea(e.height, t), n = e.shift ? ea(e.shift, t) : 0;
		return r.style.borderRightWidth = ei(a), r.style.borderTopWidth = ei(i), r.style.bottom = ei(n), r.width = a, r.height = i + n, r.depth = -n, r.maxFontSize = 1.125 * i * t.sizeMultiplier, r;
	},
	mathmlBuilder(e, t) {
		var r = ea(e.width, t), a = ea(e.height, t), i = e.shift ? ea(e.shift, t) : 0, n = t.color && t.getColor() || "black", s = new tF("mspace");
		s.setAttribute("mathbackground", n), s.setAttribute("width", ei(r)), s.setAttribute("height", ei(a));
		var o = new tF("mpadded", [s]);
		return i >= 0 ? o.setAttribute("height", ei(i)) : (o.setAttribute("height", ei(i)), o.setAttribute("depth", ei(-i))), o.setAttribute("voffset", ei(i)), o;
	}
}), e(ay, "sizingGroup");
var ax = [
	"\\tiny",
	"\\sixptsize",
	"\\scriptsize",
	"\\footnotesize",
	"\\small",
	"\\normalsize",
	"\\large",
	"\\Large",
	"\\LARGE",
	"\\huge",
	"\\Huge"
], aw = e((e, t) => {
	var r = t.havingSize(e.size);
	return ay(e.body, r, t);
}, "htmlBuilder");
tk({
	type: "sizing",
	names: ax,
	props: {
		numArgs: 0,
		allowedInText: !0
	},
	handler: e((e, t) => {
		var { breakOnTokenText: r, funcName: a, parser: i } = e, n = i.parseExpression(!1, r);
		return {
			type: "sizing",
			mode: i.mode,
			size: ax.indexOf(a) + 1,
			body: n
		};
	}, "handler"),
	htmlBuilder: aw,
	mathmlBuilder: e((e, t) => {
		var r = t.havingSize(e.size), a = new tF("mstyle", tX(e.body, r));
		return a.setAttribute("mathsize", ei(r.sizeMultiplier)), a;
	}, "mathmlBuilder")
}), tk({
	type: "smash",
	names: ["\\smash"],
	props: {
		numArgs: 1,
		numOptionalArgs: 1,
		allowedInText: !0
	},
	handler: e((e, t, r) => {
		var { parser: a } = e, i = !1, n = !1, s = r[0] && t8(r[0], "ordgroup");
		if (s) for (var o = "", l = 0; l < s.body.length; ++l) if ("t" === (o = s.body[l].text)) i = !0;
		else if ("b" === o) n = !0;
		else {
			i = !1, n = !1;
			break;
		}
		else i = !0, n = !0;
		var h = t[0];
		return {
			type: "smash",
			mode: a.mode,
			body: h,
			smashHeight: i,
			smashDepth: n
		};
	}, "handler"),
	htmlBuilder: e((e, t) => {
		var r = tt([], [tN(e.body, t)]);
		if (!e.smashHeight && !e.smashDepth) return r;
		if (e.smashHeight && (r.height = 0, r.children)) for (var a = 0; a < r.children.length; a++) r.children[a].height = 0;
		if (e.smashDepth && (r.depth = 0, r.children)) for (var i = 0; i < r.children.length; i++) r.children[i].depth = 0;
		return tt(["mord"], [tl({
			positionType: "firstBaseline",
			children: [{
				type: "elem",
				elem: r
			}]
		}, t)], t);
	}, "htmlBuilder"),
	mathmlBuilder: e((e, t) => {
		var r = new tF("mpadded", [tj(e.body, t)]);
		return e.smashHeight && r.setAttribute("height", "0px"), e.smashDepth && r.setAttribute("depth", "0px"), r;
	}, "mathmlBuilder")
}), tk({
	type: "sqrt",
	names: ["\\sqrt"],
	props: {
		numArgs: 1,
		numOptionalArgs: 1
	},
	handler(e, t, r) {
		var { parser: a } = e, i = r[0], n = t[0];
		return {
			type: "sqrt",
			mode: a.mode,
			body: n,
			index: i
		};
	},
	htmlBuilder(e, t) {
		var r = tN(e.body, t.havingCrampedStyle());
		0 === r.height && (r.height = t.fontMetrics().xHeight), r = ts(r, t);
		var a = t.fontMetrics().defaultRuleThickness, i = a;
		t.style.id < A.TEXT.id && (i = t.fontMetrics().xHeight);
		var n = a + i / 4, { span: s, ruleWidth: o, advanceWidth: l } = rH(r.height + r.depth + n + a, t), h = s.height - o;
		h > r.height + r.depth + n && (n = (n + h - r.height - r.depth) / 2);
		var m = s.height - r.height - n - o;
		r.style.paddingLeft = ei(l);
		var c = tl({
			positionType: "firstBaseline",
			children: [
				{
					type: "elem",
					elem: r,
					wrapperClasses: ["svg-align"]
				},
				{
					type: "kern",
					size: -(r.height + m)
				},
				{
					type: "elem",
					elem: s
				},
				{
					type: "kern",
					size: o
				}
			]
		}, t);
		if (!e.index) return tt(["mord", "sqrt"], [c], t);
		var u = t.havingStyle(A.SCRIPTSCRIPT), p = tN(e.index, u, t), d = tt(["root"], [tl({
			positionType: "shift",
			positionData: -(.6 * (c.height - c.depth)),
			children: [{
				type: "elem",
				elem: p
			}]
		}, t)]);
		return tt(["mord", "sqrt"], [d, c], t);
	},
	mathmlBuilder(e, t) {
		var { body: r, index: a } = e;
		return a ? new tF("mroot", [tj(r, t), tj(a, t)]) : new tF("msqrt", [tj(r, t)]);
	}
});
var ak = {
	display: A.DISPLAY,
	text: A.TEXT,
	script: A.SCRIPT,
	scriptscript: A.SCRIPTSCRIPT
};
tk({
	type: "styling",
	names: [
		"\\displaystyle",
		"\\textstyle",
		"\\scriptstyle",
		"\\scriptscriptstyle"
	],
	props: {
		numArgs: 0,
		allowedInText: !0,
		primitive: !0
	},
	handler(e, t) {
		var { breakOnTokenText: r, funcName: a, parser: i } = e, n = i.parseExpression(!0, r), s = a.slice(1, a.length - 5);
		return {
			type: "styling",
			mode: i.mode,
			style: s,
			body: n
		};
	},
	htmlBuilder(e, t) {
		var r = ak[e.style], a = t.havingStyle(r).withFont("");
		return ay(e.body, a, t);
	},
	mathmlBuilder(e, t) {
		var r = ak[e.style], a = t.havingStyle(r), i = new tF("mstyle", tX(e.body, a)), n = {
			display: ["0", "true"],
			text: ["0", "false"],
			script: ["1", "false"],
			scriptscript: ["2", "false"]
		}[e.style];
		return i.setAttribute("scriptlevel", n[0]), i.setAttribute("displaystyle", n[1]), i;
	}
});
var aS = e(function(e, t) {
	var r = e.base;
	return r ? "op" === r.type ? r.limits && (t.style.size === A.DISPLAY.size || r.alwaysHandleSupSub) ? ap : null : "operatorname" === r.type ? r.alwaysHandleSupSub && (t.style.size === A.DISPLAY.size || r.limits) ? av : null : "accent" === r.type ? u(r.base) ? re : null : "horizBrace" === r.type && !e.sub === r.isOver ? al : null : null;
}, "htmlBuilderDelegate");
tS({
	type: "supsub",
	htmlBuilder(e, t) {
		var r, a, i = aS(e, t);
		if (i) return i(e, t);
		var n, s, { base: o, sup: l, sub: h } = e, m = tN(o, t), c = t.fontMetrics(), p = 0, d = 0, g = o && u(o);
		if (l) {
			var f = t.havingStyle(t.style.sup());
			n = tN(l, f, t), g || (p = m.height - f.fontMetrics().supDrop * f.sizeMultiplier / t.sizeMultiplier);
		}
		if (h) {
			var v = t.havingStyle(t.style.sub());
			s = tN(h, v, t), g || (d = m.depth + v.fontMetrics().subDrop * v.sizeMultiplier / t.sizeMultiplier);
		}
		r = t.style === A.DISPLAY ? c.sup1 : t.style.cramped ? c.sup3 : c.sup2;
		var b = t.sizeMultiplier, y = ei(.5 / c.ptPerEm / b), x = null;
		if (s) {
			var w = e.base && "op" === e.base.type && e.base.name && ("\\oiint" === e.base.name || "\\oiiint" === e.base.name);
			(m instanceof ed || w) && (x = ei(-m.italic));
		}
		if (n && s) {
			p = Math.max(p, r, n.depth + .25 * c.xHeight), d = Math.max(d, c.sub2);
			var k = 4 * c.defaultRuleThickness;
			if (p - n.depth - (s.height - d) < k) {
				d = k - (p - n.depth) + s.height;
				var S = .8 * c.xHeight - (p - n.depth);
				S > 0 && (p += S, d -= S);
			}
			a = tl({
				positionType: "individualShift",
				children: [{
					type: "elem",
					elem: s,
					shift: d,
					marginRight: y,
					marginLeft: x
				}, {
					type: "elem",
					elem: n,
					shift: -p,
					marginRight: y
				}]
			}, t);
		} else if (s) a = tl({
			positionType: "shift",
			positionData: d = Math.max(d, c.sub1, s.height - .8 * c.xHeight),
			children: [{
				type: "elem",
				elem: s,
				marginLeft: x,
				marginRight: y
			}]
		}, t);
		else if (n) a = tl({
			positionType: "shift",
			positionData: -(p = Math.max(p, r, n.depth + .25 * c.xHeight)),
			children: [{
				type: "elem",
				elem: n,
				marginRight: y
			}]
		}, t);
		else throw Error("supsub must have either sup or sub.");
		return tt([tE(m, "right") || "mord"], [m, tt(["msupsub"], [a])], t);
	},
	mathmlBuilder(e, t) {
		var r, a, i = !1;
		e.base && "horizBrace" === e.base.type && !!e.sup === e.base.isOver && (i = !0, a = e.base.isOver), e.base && ("op" === e.base.type || "operatorname" === e.base.type) && (e.base.parentIsSupSub = !0);
		var n = [tj(e.base, t)];
		if (e.sub && n.push(tj(e.sub, t)), e.sup && n.push(tj(e.sup, t)), i) r = a ? "mover" : "munder";
		else if (e.sub) if (e.sup) {
			var s = e.base;
			r = s && "op" === s.type && s.limits && t.style === A.DISPLAY || s && "operatorname" === s.type && s.alwaysHandleSupSub && (t.style === A.DISPLAY || s.limits) ? "munderover" : "msubsup";
		} else {
			var o = e.base;
			r = o && "op" === o.type && o.limits && (t.style === A.DISPLAY || o.alwaysHandleSupSub) || o && "operatorname" === o.type && o.alwaysHandleSupSub && (o.limits || t.style === A.DISPLAY) ? "munder" : "msub";
		}
		else {
			var l = e.base;
			r = l && "op" === l.type && l.limits && (t.style === A.DISPLAY || l.alwaysHandleSupSub) || l && "operatorname" === l.type && l.alwaysHandleSupSub && (l.limits || t.style === A.DISPLAY) ? "mover" : "msup";
		}
		return new tF(r, n);
	}
}), tS({
	type: "atom",
	htmlBuilder: (e, t) => e7(e.text, e.mode, t, ["m" + e.family]),
	mathmlBuilder(e, t) {
		var r = new tF("mo", [tU(e.text, e.mode)]);
		if ("bin" === e.family) {
			var a = tY(e, t);
			"bold-italic" === a && r.setAttribute("mathvariant", a);
		} else "punct" === e.family ? r.setAttribute("separator", "true") : ("open" === e.family || "close" === e.family) && r.setAttribute("stretchy", "false");
		return r;
	}
});
var az = {
	mi: "italic",
	mn: "normal",
	mtext: "normal"
};
tS({
	type: "mathord",
	htmlBuilder: (e, t) => e8(e, t, "mathord"),
	mathmlBuilder(e, t) {
		var r = new tF("mi", [tU(e.text, e.mode, t)]), a = tY(e, t) || "italic";
		return a !== az[r.type] && r.setAttribute("mathvariant", a), r;
	}
}), tS({
	type: "textord",
	htmlBuilder: (e, t) => e8(e, t, "textord"),
	mathmlBuilder(e, t) {
		var r, a = tU(e.text, e.mode, t), i = tY(e, t) || "normal";
		return i !== az[(r = "text" === e.mode ? new tF("mtext", [a]) : /[0-9]/.test(e.text) ? new tF("mn", [a]) : "\\prime" === e.text ? new tF("mo", [a]) : new tF("mi", [a])).type] && r.setAttribute("mathvariant", i), r;
	}
});
var aM = {
	"\\nobreak": "nobreak",
	"\\allowbreak": "allowbreak"
}, aA = {
	" ": {},
	"\\ ": {},
	"~": { className: "nobreak" },
	"\\space": {},
	"\\nobreakspace": { className: "nobreak" }
};
tS({
	type: "spacing",
	htmlBuilder(e, t) {
		if (aA.hasOwnProperty(e.text)) {
			var r = aA[e.text].className || "";
			if ("text" !== e.mode) return tt(["mspace", r], [e7(e.text, e.mode, t)], t);
			var i = e8(e, t, "textord");
			return i.classes.push(r), i;
		}
		if (aM.hasOwnProperty(e.text)) return tt(["mspace", aM[e.text]], [], t);
		throw new a("Unknown type of space \"" + e.text + "\"");
	},
	mathmlBuilder(e, t) {
		var r;
		if (aA.hasOwnProperty(e.text)) r = new tF("mtext", [new tV("\xA0")]);
		else {
			if (aM.hasOwnProperty(e.text)) return new tF("mspace");
			throw new a("Unknown type of space \"" + e.text + "\"");
		}
		return r;
	}
});
var aT = e(() => {
	var e = new tF("mtd", []);
	return e.setAttribute("width", "50%"), e;
}, "pad");
tS({
	type: "tag",
	mathmlBuilder(e, t) {
		var r = new tF("mtable", [new tF("mtr", [
			aT(),
			new tF("mtd", [t$(e.body, t)]),
			aT(),
			new tF("mtd", [t$(e.tag, t)])
		])]);
		return r.setAttribute("width", "100%"), r;
	}
});
var aB = {
	"\\text": void 0,
	"\\textrm": "textrm",
	"\\textsf": "textsf",
	"\\texttt": "texttt",
	"\\textnormal": "textrm"
}, aq = {
	"\\textbf": "textbf",
	"\\textmd": "textmd"
}, aC = {
	"\\textit": "textit",
	"\\textup": "textup"
}, aI = e((e, t) => {
	var r = e.font;
	return r ? aB[r] ? t.withTextFontFamily(aB[r]) : aq[r] ? t.withTextFontWeight(aq[r]) : "\\emph" === r ? "textit" === t.fontShape ? t.withTextFontShape("textup") : t.withTextFontShape("textit") : t.withTextFontShape(aC[r]) : t;
}, "optionsWithFont");
tk({
	type: "text",
	names: [
		"\\text",
		"\\textrm",
		"\\textsf",
		"\\texttt",
		"\\textnormal",
		"\\textbf",
		"\\textmd",
		"\\textit",
		"\\textup",
		"\\emph"
	],
	props: {
		numArgs: 1,
		argTypes: ["text"],
		allowedInArgument: !0,
		allowedInText: !0
	},
	handler(e, t) {
		var { parser: r, funcName: a } = e, i = t[0];
		return {
			type: "text",
			mode: r.mode,
			body: tM(i),
			font: a
		};
	},
	htmlBuilder(e, t) {
		var r = aI(e, t);
		return tt(["mord", "text"], tC(e.body, r, !0), r);
	},
	mathmlBuilder(e, t) {
		var r = aI(e, t);
		return t$(e.body, r);
	}
}), tk({
	type: "underline",
	names: ["\\underline"],
	props: {
		numArgs: 1,
		allowedInText: !0
	},
	handler(e, t) {
		var { parser: r } = e;
		return {
			type: "underline",
			mode: r.mode,
			body: t[0]
		};
	},
	htmlBuilder(e, t) {
		var r = tN(e.body, t), a = ta("underline-line", t), i = t.fontMetrics().defaultRuleThickness;
		return tt(["mord", "underline"], [tl({
			positionType: "top",
			positionData: r.height,
			children: [
				{
					type: "kern",
					size: i
				},
				{
					type: "elem",
					elem: a
				},
				{
					type: "kern",
					size: 3 * i
				},
				{
					type: "elem",
					elem: r
				}
			]
		}, t)], t);
	},
	mathmlBuilder(e, t) {
		var r = new tF("mo", [new tV("‾")]);
		r.setAttribute("stretchy", "true");
		var a = new tF("munder", [tj(e.body, t), r]);
		return a.setAttribute("accentunder", "true"), a;
	}
}), tk({
	type: "vcenter",
	names: ["\\vcenter"],
	props: {
		numArgs: 1,
		argTypes: ["original"],
		allowedInText: !1
	},
	handler(e, t) {
		var { parser: r } = e;
		return {
			type: "vcenter",
			mode: r.mode,
			body: t[0]
		};
	},
	htmlBuilder(e, t) {
		var r = tN(e.body, t), a = t.fontMetrics().axisHeight;
		return tl({
			positionType: "shift",
			positionData: .5 * (r.height - a - (r.depth + a)),
			children: [{
				type: "elem",
				elem: r
			}]
		}, t);
	},
	mathmlBuilder: (e, t) => new tF("mpadded", [tj(e.body, t)], ["vcenter"])
}), tk({
	type: "verb",
	names: ["\\verb"],
	props: {
		numArgs: 0,
		allowedInText: !0
	},
	handler(e, t, r) {
		throw new a("\\verb ended by end of line instead of matching delimiter");
	},
	htmlBuilder(e, t) {
		for (var r = aH(e), a = [], i = t.havingStyle(t.style.text()), n = 0; n < r.length; n++) {
			var s = r[n];
			"~" === s && (s = "\\textasciitilde"), a.push(e6(s, "Typewriter-Regular", e.mode, i, ["mord", "texttt"]));
		}
		return tt(["mord", "text"].concat(i.sizingClasses(t)), e9(a), i);
	},
	mathmlBuilder(e, t) {
		var r = new tF("mtext", [new tV(aH(e))]);
		return r.setAttribute("mathvariant", "monospace"), r;
	}
});
var aH = e((e) => e.body.replace(/ /g, e.star ? "␣" : "\xA0"), "makeVerb"), aR = `[ \r
	]`, aE = `\\\\(
|[ \r	]+
?)[ \r	]*`, aO = "[̀-ͯ]", aN = RegExp(aO + "+$"), aD = "(" + aR + "+)|" + aE + "|([!-\\[\\]-‧‪-퟿豈-￿]" + aO + "*|[\ud800-\udbff][\udc00-\udfff]" + aO + "*|\\\\verb\\*([^]).*?\\4|\\\\verb([^*a-zA-Z]).*?\\5|(\\\\[a-zA-Z@]+)" + aR + "*|\\\\[^\ud800-\udfff])", aL = class {
	static {
		e(this, "Lexer");
	}
	constructor(e, t) {
		this.input = void 0, this.settings = void 0, this.tokenRegex = void 0, this.catcodes = void 0, this.input = e, this.settings = t, this.tokenRegex = RegExp(aD, "g"), this.catcodes = {
			"%": 14,
			"~": 13
		};
	}
	setCatcode(e, t) {
		this.catcodes[e] = t;
	}
	lex() {
		var e = this.input, i = this.tokenRegex.lastIndex;
		if (i === e.length) return new r("EOF", new t(this, i, i));
		var n = this.tokenRegex.exec(e);
		if (null === n || n.index !== i) throw new a("Unexpected character: '" + e[i] + "'", new r(e[i], new t(this, i, i + 1)));
		var s = n[6] || n[3] || (n[2] ? "\\ " : " ");
		if (14 === this.catcodes[s]) {
			var o = e.indexOf(`
`, this.tokenRegex.lastIndex);
			return -1 === o ? (this.tokenRegex.lastIndex = e.length, this.settings.reportNonstrict("commentAtEnd", "% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)")) : this.tokenRegex.lastIndex = o + 1, this.lex();
		}
		return new r(s, new t(this, i, this.tokenRegex.lastIndex));
	}
}, aP = class {
	static {
		e(this, "Namespace");
	}
	constructor(e, t) {
		void 0 === e && (e = {}), void 0 === t && (t = {}), this.current = void 0, this.builtins = void 0, this.undefStack = void 0, this.current = t, this.builtins = e, this.undefStack = [];
	}
	beginGroup() {
		this.undefStack.push({});
	}
	endGroup() {
		if (0 === this.undefStack.length) throw new a("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug");
		var e = this.undefStack.pop();
		for (var t in e) e.hasOwnProperty(t) && (null == e[t] ? delete this.current[t] : this.current[t] = e[t]);
	}
	endGroups() {
		for (; this.undefStack.length > 0;) this.endGroup();
	}
	has(e) {
		return this.current.hasOwnProperty(e) || this.builtins.hasOwnProperty(e);
	}
	get(e) {
		return this.current.hasOwnProperty(e) ? this.current[e] : this.builtins[e];
	}
	set(e, t, r) {
		if (void 0 === r && (r = !1), r) {
			for (var a = 0; a < this.undefStack.length; a++) delete this.undefStack[a][e];
			this.undefStack.length > 0 && (this.undefStack[this.undefStack.length - 1][e] = t);
		} else {
			var i = this.undefStack[this.undefStack.length - 1];
			i && !i.hasOwnProperty(e) && (i[e] = this.current[e]);
		}
		null == t ? delete this.current[e] : this.current[e] = t;
	}
};
r0("\\noexpand", function(e) {
	var t = e.popToken();
	return e.isExpandable(t.text) && (t.noexpand = !0, t.treatAsRelax = !0), {
		tokens: [t],
		numArgs: 0
	};
}), r0("\\expandafter", function(e) {
	var t = e.popToken();
	return e.expandOnce(!0), {
		tokens: [t],
		numArgs: 0
	};
}), r0("\\@firstoftwo", function(e) {
	return {
		tokens: e.consumeArgs(2)[0],
		numArgs: 0
	};
}), r0("\\@secondoftwo", function(e) {
	return {
		tokens: e.consumeArgs(2)[1],
		numArgs: 0
	};
}), r0("\\@ifnextchar", function(e) {
	var t = e.consumeArgs(3);
	e.consumeSpaces();
	var r = e.future();
	return 1 === t[0].length && t[0][0].text === r.text ? {
		tokens: t[1],
		numArgs: 0
	} : {
		tokens: t[2],
		numArgs: 0
	};
}), r0("\\@ifstar", "\\@ifnextchar *{\\@firstoftwo{#1}}"), r0("\\TextOrMath", function(e) {
	var t = e.consumeArgs(2);
	return "text" === e.mode ? {
		tokens: t[0],
		numArgs: 0
	} : {
		tokens: t[1],
		numArgs: 0
	};
});
var aF = {
	0: 0,
	1: 1,
	2: 2,
	3: 3,
	4: 4,
	5: 5,
	6: 6,
	7: 7,
	8: 8,
	9: 9,
	a: 10,
	A: 10,
	b: 11,
	B: 11,
	c: 12,
	C: 12,
	d: 13,
	D: 13,
	e: 14,
	E: 14,
	f: 15,
	F: 15
};
r0("\\char", function(e) {
	var t, r, i = e.popToken(), n = "";
	if ("'" === i.text) r = 8, i = e.popToken();
	else if ("\"" === i.text) r = 16, i = e.popToken();
	else if ("`" === i.text) if ("\\" === (i = e.popToken()).text[0]) n = i.text.charCodeAt(1);
	else {
		if ("EOF" === i.text) throw new a("\\char` missing argument");
		n = i.text.charCodeAt(0);
	}
	else r = 10;
	if (r) {
		if (null == (n = aF[i.text]) || n >= r) throw new a("Invalid base-" + r + " digit " + i.text);
		for (; null != (t = aF[e.future().text]) && t < r;) n *= r, n += t, e.popToken();
	}
	return "\\@char{" + n + "}";
});
var aV = e((e, t, r, i) => {
	var n = e.consumeArg().tokens;
	if (1 !== n.length) throw new a("\\newcommand's first argument must be a macro name");
	var s = n[0].text, o = e.isDefined(s);
	if (o && !t) throw new a("\\newcommand{" + s + "} attempting to redefine " + s + "; use \\renewcommand");
	if (!o && !r) throw new a("\\renewcommand{" + s + "} when command " + s + " does not yet exist; use \\newcommand");
	var l = 0;
	if (1 === (n = e.consumeArg().tokens).length && "[" === n[0].text) {
		for (var h = "", m = e.expandNextToken(); "]" !== m.text && "EOF" !== m.text;) h += m.text, m = e.expandNextToken();
		if (!h.match(/^\s*[0-9]+\s*$/)) throw new a("Invalid number of arguments: " + h);
		l = parseInt(h), n = e.consumeArg().tokens;
	}
	return o && i || e.macros.set(s, {
		tokens: n,
		numArgs: l
	}), "";
}, "newcommand");
r0("\\newcommand", (e) => aV(e, !1, !0, !1)), r0("\\renewcommand", (e) => aV(e, !0, !1, !1)), r0("\\providecommand", (e) => aV(e, !0, !0, !0)), r0("\\message", (e) => (console.log(e.consumeArgs(1)[0].reverse().map((e) => e.text).join("")), "")), r0("\\errmessage", (e) => (console.error(e.consumeArgs(1)[0].reverse().map((e) => e.text).join("")), "")), r0("\\show", (e) => {
	var t = e.popToken(), r = t.text;
	return console.log(t, e.macros.get(r), ty[r], ek.math[r], ek.text[r]), "";
}), r0("\\bgroup", "{"), r0("\\egroup", "}"), r0("~", "\\nobreakspace"), r0("\\lq", "`"), r0("\\rq", "'"), r0("\\aa", "\\r a"), r0("\\AA", "\\r A"), r0("\\textcopyright", "\\html@mathml{\\textcircled{c}}{\\char`©}"), r0("\\copyright", "\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}"), r0("\\textregistered", "\\html@mathml{\\textcircled{\\scriptsize R}}{\\char`®}"), r0("ℬ", "\\mathscr{B}"), r0("ℰ", "\\mathscr{E}"), r0("ℱ", "\\mathscr{F}"), r0("ℋ", "\\mathscr{H}"), r0("ℐ", "\\mathscr{I}"), r0("ℒ", "\\mathscr{L}"), r0("ℳ", "\\mathscr{M}"), r0("ℛ", "\\mathscr{R}"), r0("ℭ", "\\mathfrak{C}"), r0("ℌ", "\\mathfrak{H}"), r0("ℨ", "\\mathfrak{Z}"), r0("\\Bbbk", "\\Bbb{k}"), r0("·", "\\cdotp"), r0("\\llap", "\\mathllap{\\textrm{#1}}"), r0("\\rlap", "\\mathrlap{\\textrm{#1}}"), r0("\\clap", "\\mathclap{\\textrm{#1}}"), r0("\\mathstrut", "\\vphantom{(}"), r0("\\underbar", "\\underline{\\text{#1}}"), r0("\\not", "\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char\"338}"), r0("\\neq", "\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char`≠}}"), r0("\\ne", "\\neq"), r0("≠", "\\neq"), r0("\\notin", "\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}{\\mathrel{\\char`∉}}"), r0("∉", "\\notin"), r0("≘", "\\html@mathml{\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}}{\\mathrel{\\char`≘}}"), r0("≙", "\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char`≘}}"), r0("≚", "\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char`≚}}"), r0("≛", "\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}{\\mathrel{\\char`≛}}"), r0("≝", "\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}{\\mathrel{\\char`≝}}"), r0("≞", "\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}{\\mathrel{\\char`≞}}"), r0("≟", "\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char`≟}}"), r0("⟂", "\\perp"), r0("‼", "\\mathclose{!\\mkern-0.8mu!}"), r0("∌", "\\notni"), r0("⌜", "\\ulcorner"), r0("⌝", "\\urcorner"), r0("⌞", "\\llcorner"), r0("⌟", "\\lrcorner"), r0("©", "\\copyright"), r0("®", "\\textregistered"), r0("️", "\\textregistered"), r0("\\ulcorner", "\\html@mathml{\\@ulcorner}{\\mathop{\\char\"231c}}"), r0("\\urcorner", "\\html@mathml{\\@urcorner}{\\mathop{\\char\"231d}}"), r0("\\llcorner", "\\html@mathml{\\@llcorner}{\\mathop{\\char\"231e}}"), r0("\\lrcorner", "\\html@mathml{\\@lrcorner}{\\mathop{\\char\"231f}}"), r0("\\vdots", "{\\varvdots\\rule{0pt}{15pt}}"), r0("⋮", "\\vdots"), r0("\\varGamma", "\\mathit{\\Gamma}"), r0("\\varDelta", "\\mathit{\\Delta}"), r0("\\varTheta", "\\mathit{\\Theta}"), r0("\\varLambda", "\\mathit{\\Lambda}"), r0("\\varXi", "\\mathit{\\Xi}"), r0("\\varPi", "\\mathit{\\Pi}"), r0("\\varSigma", "\\mathit{\\Sigma}"), r0("\\varUpsilon", "\\mathit{\\Upsilon}"), r0("\\varPhi", "\\mathit{\\Phi}"), r0("\\varPsi", "\\mathit{\\Psi}"), r0("\\varOmega", "\\mathit{\\Omega}"), r0("\\substack", "\\begin{subarray}{c}#1\\end{subarray}"), r0("\\colon", "\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu\\relax"), r0("\\boxed", "\\fbox{$\\displaystyle{#1}$}"), r0("\\iff", "\\DOTSB\\;\\Longleftrightarrow\\;"), r0("\\implies", "\\DOTSB\\;\\Longrightarrow\\;"), r0("\\impliedby", "\\DOTSB\\;\\Longleftarrow\\;"), r0("\\dddot", "{\\overset{\\raisebox{-0.1ex}{\\normalsize ...}}{#1}}"), r0("\\ddddot", "{\\overset{\\raisebox{-0.1ex}{\\normalsize ....}}{#1}}");
var aG = {
	",": "\\dotsc",
	"\\not": "\\dotsb",
	"+": "\\dotsb",
	"=": "\\dotsb",
	"<": "\\dotsb",
	">": "\\dotsb",
	"-": "\\dotsb",
	"*": "\\dotsb",
	":": "\\dotsb",
	"\\DOTSB": "\\dotsb",
	"\\coprod": "\\dotsb",
	"\\bigvee": "\\dotsb",
	"\\bigwedge": "\\dotsb",
	"\\biguplus": "\\dotsb",
	"\\bigcap": "\\dotsb",
	"\\bigcup": "\\dotsb",
	"\\prod": "\\dotsb",
	"\\sum": "\\dotsb",
	"\\bigotimes": "\\dotsb",
	"\\bigoplus": "\\dotsb",
	"\\bigodot": "\\dotsb",
	"\\bigsqcup": "\\dotsb",
	"\\And": "\\dotsb",
	"\\longrightarrow": "\\dotsb",
	"\\Longrightarrow": "\\dotsb",
	"\\longleftarrow": "\\dotsb",
	"\\Longleftarrow": "\\dotsb",
	"\\longleftrightarrow": "\\dotsb",
	"\\Longleftrightarrow": "\\dotsb",
	"\\mapsto": "\\dotsb",
	"\\longmapsto": "\\dotsb",
	"\\hookrightarrow": "\\dotsb",
	"\\doteq": "\\dotsb",
	"\\mathbin": "\\dotsb",
	"\\mathrel": "\\dotsb",
	"\\relbar": "\\dotsb",
	"\\Relbar": "\\dotsb",
	"\\xrightarrow": "\\dotsb",
	"\\xleftarrow": "\\dotsb",
	"\\DOTSI": "\\dotsi",
	"\\int": "\\dotsi",
	"\\oint": "\\dotsi",
	"\\iint": "\\dotsi",
	"\\iiint": "\\dotsi",
	"\\iiiint": "\\dotsi",
	"\\idotsint": "\\dotsi",
	"\\DOTSX": "\\dotsx"
};
r0("\\dots", function(e) {
	var t = "\\dotso", r = e.expandAfterFuture().text;
	return r in aG ? t = aG[r] : ("\\not" === r.slice(0, 4) || r in ek.math && i(["bin", "rel"], ek.math[r].group)) && (t = "\\dotsb"), t;
});
var aU = {
	")": !0,
	"]": !0,
	"\\rbrack": !0,
	"\\}": !0,
	"\\rbrace": !0,
	"\\rangle": !0,
	"\\rceil": !0,
	"\\rfloor": !0,
	"\\rgroup": !0,
	"\\rmoustache": !0,
	"\\right": !0,
	"\\bigr": !0,
	"\\biggr": !0,
	"\\Bigr": !0,
	"\\Biggr": !0,
	$: !0,
	";": !0,
	".": !0,
	",": !0
};
r0("\\dotso", function(e) {
	return e.future().text in aU ? "\\ldots\\," : "\\ldots";
}), r0("\\dotsc", function(e) {
	var t = e.future().text;
	return t in aU && "," !== t ? "\\ldots\\," : "\\ldots";
}), r0("\\cdots", function(e) {
	return e.future().text in aU ? "\\@cdots\\," : "\\@cdots";
}), r0("\\dotsb", "\\cdots"), r0("\\dotsm", "\\cdots"), r0("\\dotsi", "\\!\\cdots"), r0("\\dotsx", "\\ldots\\,"), r0("\\DOTSI", "\\relax"), r0("\\DOTSB", "\\relax"), r0("\\DOTSX", "\\relax"), r0("\\tmspace", "\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax"), r0("\\,", "\\tmspace+{3mu}{.1667em}"), r0("\\thinspace", "\\,"), r0("\\>", "\\mskip{4mu}"), r0("\\:", "\\tmspace+{4mu}{.2222em}"), r0("\\medspace", "\\:"), r0("\\;", "\\tmspace+{5mu}{.2777em}"), r0("\\thickspace", "\\;"), r0("\\!", "\\tmspace-{3mu}{.1667em}"), r0("\\negthinspace", "\\!"), r0("\\negmedspace", "\\tmspace-{4mu}{.2222em}"), r0("\\negthickspace", "\\tmspace-{5mu}{.277em}"), r0("\\enspace", "\\kern.5em "), r0("\\enskip", "\\hskip.5em\\relax"), r0("\\quad", "\\hskip1em\\relax"), r0("\\qquad", "\\hskip2em\\relax"), r0("\\tag", "\\@ifstar\\tag@literal\\tag@paren"), r0("\\tag@paren", "\\tag@literal{({#1})}"), r0("\\tag@literal", (e) => {
	if (e.macros.get("\\df@tag")) throw new a("Multiple \\tag");
	return "\\gdef\\df@tag{\\text{#1}}";
}), r0("\\bmod", "\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}"), r0("\\pod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)"), r0("\\pmod", "\\pod{{\\rm mod}\\mkern6mu#1}"), r0("\\mod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1"), r0("\\newline", "\\\\\\relax"), r0("\\TeX", "\\textrm{\\html@mathml{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}{TeX}}");
var a_ = ei(U["Main-Regular"][84][1] - .7 * U["Main-Regular"][65][1]);
r0("\\LaTeX", "\\textrm{\\html@mathml{L\\kern-.36em\\raisebox{" + a_ + "}{\\scriptstyle A}\\kern-.15em\\TeX}{LaTeX}}"), r0("\\KaTeX", "\\textrm{\\html@mathml{K\\kern-.17em\\raisebox{" + a_ + "}{\\scriptstyle A}\\kern-.15em\\TeX}{KaTeX}}"), r0("\\hspace", "\\@ifstar\\@hspacer\\@hspace"), r0("\\@hspace", "\\hskip #1\\relax"), r0("\\@hspacer", "\\rule{0pt}{0pt}\\hskip #1\\relax"), r0("\\ordinarycolon", ":"), r0("\\vcentcolon", "\\mathrel{\\mathop\\ordinarycolon}"), r0("\\dblcolon", "\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}{\\mathop{\\char\"2237}}"), r0("\\coloneqq", "\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char\"2254}}"), r0("\\Coloneqq", "\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char\"2237\\char\"3d}}"), r0("\\coloneq", "\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char\"3a\\char\"2212}}"), r0("\\Coloneq", "\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char\"2237\\char\"2212}}"), r0("\\eqqcolon", "\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char\"2255}}"), r0("\\Eqqcolon", "\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char\"3d\\char\"2237}}"), r0("\\eqcolon", "\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char\"2239}}"), r0("\\Eqcolon", "\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char\"2212\\char\"2237}}"), r0("\\colonapprox", "\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char\"3a\\char\"2248}}"), r0("\\Colonapprox", "\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char\"2237\\char\"2248}}"), r0("\\colonsim", "\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char\"3a\\char\"223c}}"), r0("\\Colonsim", "\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char\"2237\\char\"223c}}"), r0("∷", "\\dblcolon"), r0("∹", "\\eqcolon"), r0("≔", "\\coloneqq"), r0("≕", "\\eqqcolon"), r0("⩴", "\\Coloneqq"), r0("\\ratio", "\\vcentcolon"), r0("\\coloncolon", "\\dblcolon"), r0("\\colonequals", "\\coloneqq"), r0("\\coloncolonequals", "\\Coloneqq"), r0("\\equalscolon", "\\eqqcolon"), r0("\\equalscoloncolon", "\\Eqqcolon"), r0("\\colonminus", "\\coloneq"), r0("\\coloncolonminus", "\\Coloneq"), r0("\\minuscolon", "\\eqcolon"), r0("\\minuscoloncolon", "\\Eqcolon"), r0("\\coloncolonapprox", "\\Colonapprox"), r0("\\coloncolonsim", "\\Colonsim"), r0("\\simcolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}"), r0("\\simcoloncolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}"), r0("\\approxcolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}"), r0("\\approxcoloncolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}"), r0("\\notni", "\\html@mathml{\\not\\ni}{\\mathrel{\\char`∌}}"), r0("\\limsup", "\\DOTSB\\operatorname*{lim\\,sup}"), r0("\\liminf", "\\DOTSB\\operatorname*{lim\\,inf}"), r0("\\injlim", "\\DOTSB\\operatorname*{inj\\,lim}"), r0("\\projlim", "\\DOTSB\\operatorname*{proj\\,lim}"), r0("\\varlimsup", "\\DOTSB\\operatorname*{\\overline{lim}}"), r0("\\varliminf", "\\DOTSB\\operatorname*{\\underline{lim}}"), r0("\\varinjlim", "\\DOTSB\\operatorname*{\\underrightarrow{lim}}"), r0("\\varprojlim", "\\DOTSB\\operatorname*{\\underleftarrow{lim}}"), r0("\\gvertneqq", "\\html@mathml{\\@gvertneqq}{≩}"), r0("\\lvertneqq", "\\html@mathml{\\@lvertneqq}{≨}"), r0("\\ngeqq", "\\html@mathml{\\@ngeqq}{≱}"), r0("\\ngeqslant", "\\html@mathml{\\@ngeqslant}{≱}"), r0("\\nleqq", "\\html@mathml{\\@nleqq}{≰}"), r0("\\nleqslant", "\\html@mathml{\\@nleqslant}{≰}"), r0("\\nshortmid", "\\html@mathml{\\@nshortmid}{∤}"), r0("\\nshortparallel", "\\html@mathml{\\@nshortparallel}{∦}"), r0("\\nsubseteqq", "\\html@mathml{\\@nsubseteqq}{⊈}"), r0("\\nsupseteqq", "\\html@mathml{\\@nsupseteqq}{⊉}"), r0("\\varsubsetneq", "\\html@mathml{\\@varsubsetneq}{⊊}"), r0("\\varsubsetneqq", "\\html@mathml{\\@varsubsetneqq}{⫋}"), r0("\\varsupsetneq", "\\html@mathml{\\@varsupsetneq}{⊋}"), r0("\\varsupsetneqq", "\\html@mathml{\\@varsupsetneqq}{⫌}"), r0("\\imath", "\\html@mathml{\\@imath}{ı}"), r0("\\jmath", "\\html@mathml{\\@jmath}{ȷ}"), r0("\\llbracket", "\\html@mathml{\\mathopen{[\\mkern-3.2mu[}}{\\mathopen{\\char`⟦}}"), r0("\\rrbracket", "\\html@mathml{\\mathclose{]\\mkern-3.2mu]}}{\\mathclose{\\char`⟧}}"), r0("⟦", "\\llbracket"), r0("⟧", "\\rrbracket"), r0("\\lBrace", "\\html@mathml{\\mathopen{\\{\\mkern-3.2mu[}}{\\mathopen{\\char`⦃}}"), r0("\\rBrace", "\\html@mathml{\\mathclose{]\\mkern-3.2mu\\}}}{\\mathclose{\\char`⦄}}"), r0("⦃", "\\lBrace"), r0("⦄", "\\rBrace"), r0("\\minuso", "\\mathbin{\\html@mathml{{\\mathrlap{\\mathchoice{\\kern{0.145em}}{\\kern{0.145em}}{\\kern{0.1015em}}{\\kern{0.0725em}}\\circ}{-}}}{\\char`⦵}}"), r0("⦵", "\\minuso"), r0("\\darr", "\\downarrow"), r0("\\dArr", "\\Downarrow"), r0("\\Darr", "\\Downarrow"), r0("\\lang", "\\langle"), r0("\\rang", "\\rangle"), r0("\\uarr", "\\uparrow"), r0("\\uArr", "\\Uparrow"), r0("\\Uarr", "\\Uparrow"), r0("\\N", "\\mathbb{N}"), r0("\\R", "\\mathbb{R}"), r0("\\Z", "\\mathbb{Z}"), r0("\\alef", "\\aleph"), r0("\\alefsym", "\\aleph"), r0("\\Alpha", "\\mathrm{A}"), r0("\\Beta", "\\mathrm{B}"), r0("\\bull", "\\bullet"), r0("\\Chi", "\\mathrm{X}"), r0("\\clubs", "\\clubsuit"), r0("\\cnums", "\\mathbb{C}"), r0("\\Complex", "\\mathbb{C}"), r0("\\Dagger", "\\ddagger"), r0("\\diamonds", "\\diamondsuit"), r0("\\empty", "\\emptyset"), r0("\\Epsilon", "\\mathrm{E}"), r0("\\Eta", "\\mathrm{H}"), r0("\\exist", "\\exists"), r0("\\harr", "\\leftrightarrow"), r0("\\hArr", "\\Leftrightarrow"), r0("\\Harr", "\\Leftrightarrow"), r0("\\hearts", "\\heartsuit"), r0("\\image", "\\Im"), r0("\\infin", "\\infty"), r0("\\Iota", "\\mathrm{I}"), r0("\\isin", "\\in"), r0("\\Kappa", "\\mathrm{K}"), r0("\\larr", "\\leftarrow"), r0("\\lArr", "\\Leftarrow"), r0("\\Larr", "\\Leftarrow"), r0("\\lrarr", "\\leftrightarrow"), r0("\\lrArr", "\\Leftrightarrow"), r0("\\Lrarr", "\\Leftrightarrow"), r0("\\Mu", "\\mathrm{M}"), r0("\\natnums", "\\mathbb{N}"), r0("\\Nu", "\\mathrm{N}"), r0("\\Omicron", "\\mathrm{O}"), r0("\\plusmn", "\\pm"), r0("\\rarr", "\\rightarrow"), r0("\\rArr", "\\Rightarrow"), r0("\\Rarr", "\\Rightarrow"), r0("\\real", "\\Re"), r0("\\reals", "\\mathbb{R}"), r0("\\Reals", "\\mathbb{R}"), r0("\\Rho", "\\mathrm{P}"), r0("\\sdot", "\\cdot"), r0("\\sect", "\\S"), r0("\\spades", "\\spadesuit"), r0("\\sub", "\\subset"), r0("\\sube", "\\subseteq"), r0("\\supe", "\\supseteq"), r0("\\Tau", "\\mathrm{T}"), r0("\\thetasym", "\\vartheta"), r0("\\weierp", "\\wp"), r0("\\Zeta", "\\mathrm{Z}"), r0("\\argmin", "\\DOTSB\\operatorname*{arg\\,min}"), r0("\\argmax", "\\DOTSB\\operatorname*{arg\\,max}"), r0("\\plim", "\\DOTSB\\mathop{\\operatorname{plim}}\\limits"), r0("\\bra", "\\mathinner{\\langle{#1}|}"), r0("\\ket", "\\mathinner{|{#1}\\rangle}"), r0("\\braket", "\\mathinner{\\langle{#1}\\rangle}"), r0("\\Bra", "\\left\\langle#1\\right|"), r0("\\Ket", "\\left|#1\\right\\rangle");
var aY = e((t) => (r) => {
	var a = r.consumeArg().tokens, i = r.consumeArg().tokens, n = r.consumeArg().tokens, s = r.consumeArg().tokens, o = r.macros.get("|"), l = r.macros.get("\\|");
	r.macros.beginGroup();
	var h = e((e) => (r) => {
		t && (r.macros.set("|", o), n.length && r.macros.set("\\|", l));
		var a = e;
		return !e && n.length && "|" === r.future().text && (r.popToken(), a = !0), {
			tokens: a ? n : i,
			numArgs: 0
		};
	}, "midMacro");
	r.macros.set("|", h(!1)), n.length && r.macros.set("\\|", h(!0));
	var m = r.consumeArg().tokens, c = r.expandTokens([
		...s,
		...m,
		...a
	]);
	return r.macros.endGroup(), {
		tokens: c.reverse(),
		numArgs: 0
	};
}, "braketHelper");
r0("\\bra@ket", aY(!1)), r0("\\bra@set", aY(!0)), r0("\\Braket", "\\bra@ket{\\left\\langle}{\\,\\middle\\vert\\,}{\\,\\middle\\vert\\,}{\\right\\rangle}"), r0("\\Set", "\\bra@set{\\left\\{\\:}{\\;\\middle\\vert\\;}{\\;\\middle\\Vert\\;}{\\:\\right\\}}"), r0("\\set", "\\bra@set{\\{\\,}{\\mid}{}{\\,\\}}"), r0("\\angln", "{\\angl n}"), r0("\\blue", "\\textcolor{##6495ed}{#1}"), r0("\\orange", "\\textcolor{##ffa500}{#1}"), r0("\\pink", "\\textcolor{##ff00af}{#1}"), r0("\\red", "\\textcolor{##df0030}{#1}"), r0("\\green", "\\textcolor{##28ae7b}{#1}"), r0("\\gray", "\\textcolor{gray}{#1}"), r0("\\purple", "\\textcolor{##9d38bd}{#1}"), r0("\\blueA", "\\textcolor{##ccfaff}{#1}"), r0("\\blueB", "\\textcolor{##80f6ff}{#1}"), r0("\\blueC", "\\textcolor{##63d9ea}{#1}"), r0("\\blueD", "\\textcolor{##11accd}{#1}"), r0("\\blueE", "\\textcolor{##0c7f99}{#1}"), r0("\\tealA", "\\textcolor{##94fff5}{#1}"), r0("\\tealB", "\\textcolor{##26edd5}{#1}"), r0("\\tealC", "\\textcolor{##01d1c1}{#1}"), r0("\\tealD", "\\textcolor{##01a995}{#1}"), r0("\\tealE", "\\textcolor{##208170}{#1}"), r0("\\greenA", "\\textcolor{##b6ffb0}{#1}"), r0("\\greenB", "\\textcolor{##8af281}{#1}"), r0("\\greenC", "\\textcolor{##74cf70}{#1}"), r0("\\greenD", "\\textcolor{##1fab54}{#1}"), r0("\\greenE", "\\textcolor{##0d923f}{#1}"), r0("\\goldA", "\\textcolor{##ffd0a9}{#1}"), r0("\\goldB", "\\textcolor{##ffbb71}{#1}"), r0("\\goldC", "\\textcolor{##ff9c39}{#1}"), r0("\\goldD", "\\textcolor{##e07d10}{#1}"), r0("\\goldE", "\\textcolor{##a75a05}{#1}"), r0("\\redA", "\\textcolor{##fca9a9}{#1}"), r0("\\redB", "\\textcolor{##ff8482}{#1}"), r0("\\redC", "\\textcolor{##f9685d}{#1}"), r0("\\redD", "\\textcolor{##e84d39}{#1}"), r0("\\redE", "\\textcolor{##bc2612}{#1}"), r0("\\maroonA", "\\textcolor{##ffbde0}{#1}"), r0("\\maroonB", "\\textcolor{##ff92c6}{#1}"), r0("\\maroonC", "\\textcolor{##ed5fa6}{#1}"), r0("\\maroonD", "\\textcolor{##ca337c}{#1}"), r0("\\maroonE", "\\textcolor{##9e034e}{#1}"), r0("\\purpleA", "\\textcolor{##ddd7ff}{#1}"), r0("\\purpleB", "\\textcolor{##c6b9fc}{#1}"), r0("\\purpleC", "\\textcolor{##aa87ff}{#1}"), r0("\\purpleD", "\\textcolor{##7854ab}{#1}"), r0("\\purpleE", "\\textcolor{##543b78}{#1}"), r0("\\mintA", "\\textcolor{##f5f9e8}{#1}"), r0("\\mintB", "\\textcolor{##edf2df}{#1}"), r0("\\mintC", "\\textcolor{##e0e5cc}{#1}"), r0("\\grayA", "\\textcolor{##f6f7f7}{#1}"), r0("\\grayB", "\\textcolor{##f0f1f2}{#1}"), r0("\\grayC", "\\textcolor{##e3e5e6}{#1}"), r0("\\grayD", "\\textcolor{##d6d8da}{#1}"), r0("\\grayE", "\\textcolor{##babec2}{#1}"), r0("\\grayF", "\\textcolor{##888d93}{#1}"), r0("\\grayG", "\\textcolor{##626569}{#1}"), r0("\\grayH", "\\textcolor{##3b3e40}{#1}"), r0("\\grayI", "\\textcolor{##21242c}{#1}"), r0("\\kaBlue", "\\textcolor{##314453}{#1}"), r0("\\kaGreen", "\\textcolor{##71B307}{#1}");
var aW = {
	"^": !0,
	_: !0,
	"\\limits": !0,
	"\\nolimits": !0
}, aX = class {
	static {
		e(this, "MacroExpander");
	}
	constructor(e, t, r) {
		this.settings = void 0, this.expansionCount = void 0, this.lexer = void 0, this.macros = void 0, this.stack = void 0, this.mode = void 0, this.settings = t, this.expansionCount = 0, this.feed(e), this.macros = new aP(rQ, t.macros), this.mode = r, this.stack = [];
	}
	feed(e) {
		this.lexer = new aL(e, this.settings);
	}
	switchMode(e) {
		this.mode = e;
	}
	beginGroup() {
		this.macros.beginGroup();
	}
	endGroup() {
		this.macros.endGroup();
	}
	endGroups() {
		this.macros.endGroups();
	}
	future() {
		return 0 === this.stack.length && this.pushToken(this.lexer.lex()), this.stack[this.stack.length - 1];
	}
	popToken() {
		return this.future(), this.stack.pop();
	}
	pushToken(e) {
		this.stack.push(e);
	}
	pushTokens(e) {
		this.stack.push(...e);
	}
	scanArgument(e) {
		var t, a, i;
		if (e) {
			if (this.consumeSpaces(), "[" !== this.future().text) return null;
			t = this.popToken(), {tokens: i, end: a} = this.consumeArg(["]"]);
		} else ({tokens: i, start: t, end: a} = this.consumeArg());
		return this.pushToken(new r("EOF", a.loc)), this.pushTokens(i), t.range(a, "");
	}
	consumeSpaces() {
		for (;;) if (" " === this.future().text) this.stack.pop();
		else break;
	}
	consumeArg(e) {
		var t = [], r = e && e.length > 0;
		r || this.consumeSpaces();
		var i, n = this.future(), s = 0, o = 0;
		do {
			if (i = this.popToken(), t.push(i), "{" === i.text) ++s;
			else if ("}" === i.text) {
				if (-1 == --s) throw new a("Extra }", i);
			} else if ("EOF" === i.text) throw new a("Unexpected end of input in a macro argument, expected '" + (e && r ? e[o] : "}") + "'", i);
			if (e && r) if ((0 === s || 1 === s && "{" === e[o]) && i.text === e[o]) {
				if (++o === e.length) {
					t.splice(-o, o);
					break;
				}
			} else o = 0;
		} while (0 !== s || r);
		return "{" === n.text && "}" === t[t.length - 1].text && (t.pop(), t.shift()), t.reverse(), {
			tokens: t,
			start: n,
			end: i
		};
	}
	consumeArgs(e, t) {
		if (t) {
			if (t.length !== e + 1) throw new a("The length of delimiters doesn't match the number of args!");
			for (var r = t[0], i = 0; i < r.length; i++) {
				var n = this.popToken();
				if (r[i] !== n.text) throw new a("Use of the macro doesn't match its definition", n);
			}
		}
		for (var s = [], o = 0; o < e; o++) s.push(this.consumeArg(t && t[o + 1]).tokens);
		return s;
	}
	countExpansion(e) {
		if (this.expansionCount += e, this.expansionCount > this.settings.maxExpand) throw new a("Too many expansions: infinite loop or need to increase maxExpand setting");
	}
	expandOnce(e) {
		var t = this.popToken(), r = t.text, i = t.noexpand ? null : this._getExpansion(r);
		if (null == i || e && i.unexpandable) {
			if (e && null == i && "\\" === r[0] && !this.isDefined(r)) throw new a("Undefined control sequence: " + r);
			return this.pushToken(t), !1;
		}
		this.countExpansion(1);
		var n = i.tokens, s = this.consumeArgs(i.numArgs, i.delimiters);
		if (i.numArgs) {
			n = n.slice();
			for (var o = n.length - 1; o >= 0; --o) {
				var l = n[o];
				if ("#" === l.text) {
					if (0 === o) throw new a("Incomplete placeholder at end of macro body", l);
					if ("#" === (l = n[--o]).text) n.splice(o + 1, 1);
					else if (/^[1-9]$/.test(l.text)) n.splice(o, 2, ...s[l.text - 1]);
					else throw new a("Not a valid argument number", l);
				}
			}
		}
		return this.pushTokens(n), n.length;
	}
	expandAfterFuture() {
		return this.expandOnce(), this.future();
	}
	expandNextToken() {
		for (;;) if (!1 === this.expandOnce()) {
			var e = this.stack.pop();
			return e.treatAsRelax && (e.text = "\\relax"), e;
		}
		throw Error();
	}
	expandMacro(e) {
		return this.macros.has(e) ? this.expandTokens([new r(e)]) : void 0;
	}
	expandTokens(e) {
		var t = [], r = this.stack.length;
		for (this.pushTokens(e); this.stack.length > r;) if (!1 === this.expandOnce(!0)) {
			var a = this.stack.pop();
			a.treatAsRelax && (a.noexpand = !1, a.treatAsRelax = !1), t.push(a);
		}
		return this.countExpansion(t.length), t;
	}
	expandMacroAsText(e) {
		var t = this.expandMacro(e);
		return t && t.map((e) => e.text).join("");
	}
	_getExpansion(e) {
		var t = this.macros.get(e);
		if (null == t) return t;
		if (1 === e.length) {
			var r = this.lexer.catcodes[e];
			if (null != r && 13 !== r) return;
		}
		var a = "function" == typeof t ? t(this) : t;
		if ("string" == typeof a) {
			var i = 0;
			if (-1 !== a.indexOf("#")) for (var n = a.replace(/##/g, ""); -1 !== n.indexOf("#" + (i + 1));) ++i;
			for (var s = new aL(a, this.settings), o = [], l = s.lex(); "EOF" !== l.text;) o.push(l), l = s.lex();
			return o.reverse(), {
				tokens: o,
				numArgs: i
			};
		}
		return a;
	}
	isDefined(e) {
		return this.macros.has(e) || ty.hasOwnProperty(e) || ek.math.hasOwnProperty(e) || ek.text.hasOwnProperty(e) || aW.hasOwnProperty(e);
	}
	isExpandable(e) {
		var t = this.macros.get(e);
		return null != t ? "string" == typeof t || "function" == typeof t || !t.unexpandable : ty.hasOwnProperty(e) && !ty[e].primitive;
	}
}, a$ = /^[₊₋₌₍₎₀₁₂₃₄₅₆₇₈₉ₐₑₕᵢⱼₖₗₘₙₒₚᵣₛₜᵤᵥₓᵦᵧᵨᵩᵪ]/, aj = Object.freeze({
	"₊": "+",
	"₋": "-",
	"₌": "=",
	"₍": "(",
	"₎": ")",
	"₀": "0",
	"₁": "1",
	"₂": "2",
	"₃": "3",
	"₄": "4",
	"₅": "5",
	"₆": "6",
	"₇": "7",
	"₈": "8",
	"₉": "9",
	ₐ: "a",
	ₑ: "e",
	ₕ: "h",
	ᵢ: "i",
	ⱼ: "j",
	ₖ: "k",
	ₗ: "l",
	ₘ: "m",
	ₙ: "n",
	ₒ: "o",
	ₚ: "p",
	ᵣ: "r",
	ₛ: "s",
	ₜ: "t",
	ᵤ: "u",
	ᵥ: "v",
	ₓ: "x",
	ᵦ: "β",
	ᵧ: "γ",
	ᵨ: "ρ",
	ᵩ: "ϕ",
	ᵪ: "χ",
	"⁺": "+",
	"⁻": "-",
	"⁼": "=",
	"⁽": "(",
	"⁾": ")",
	"⁰": "0",
	"¹": "1",
	"²": "2",
	"³": "3",
	"⁴": "4",
	"⁵": "5",
	"⁶": "6",
	"⁷": "7",
	"⁸": "8",
	"⁹": "9",
	ᴬ: "A",
	ᴮ: "B",
	ᴰ: "D",
	ᴱ: "E",
	ᴳ: "G",
	ᴴ: "H",
	ᴵ: "I",
	ᴶ: "J",
	ᴷ: "K",
	ᴸ: "L",
	ᴹ: "M",
	ᴺ: "N",
	ᴼ: "O",
	ᴾ: "P",
	ᴿ: "R",
	ᵀ: "T",
	ᵁ: "U",
	ⱽ: "V",
	ᵂ: "W",
	ᵃ: "a",
	ᵇ: "b",
	ᶜ: "c",
	ᵈ: "d",
	ᵉ: "e",
	ᶠ: "f",
	ᵍ: "g",
	ʰ: "h",
	ⁱ: "i",
	ʲ: "j",
	ᵏ: "k",
	ˡ: "l",
	ᵐ: "m",
	ⁿ: "n",
	ᵒ: "o",
	ᵖ: "p",
	ʳ: "r",
	ˢ: "s",
	ᵗ: "t",
	ᵘ: "u",
	ᵛ: "v",
	ʷ: "w",
	ˣ: "x",
	ʸ: "y",
	ᶻ: "z",
	ᵝ: "β",
	ᵞ: "γ",
	ᵟ: "δ",
	ᵠ: "ϕ",
	ᵡ: "χ",
	ᶿ: "θ"
}), aZ = {
	"́": {
		text: "\\'",
		math: "\\acute"
	},
	"̀": {
		text: "\\`",
		math: "\\grave"
	},
	"̈": {
		text: "\\\"",
		math: "\\ddot"
	},
	"̃": {
		text: "\\~",
		math: "\\tilde"
	},
	"̄": {
		text: "\\=",
		math: "\\bar"
	},
	"̆": {
		text: "\\u",
		math: "\\breve"
	},
	"̌": {
		text: "\\v",
		math: "\\check"
	},
	"̂": {
		text: "\\^",
		math: "\\hat"
	},
	"̇": {
		text: "\\.",
		math: "\\dot"
	},
	"̊": {
		text: "\\r",
		math: "\\mathring"
	},
	"̋": { text: "\\H" },
	"̧": { text: "\\c" }
}, aK = {
	á: "á",
	à: "à",
	ä: "ä",
	ǟ: "ǟ",
	ã: "ã",
	ā: "ā",
	ă: "ă",
	ắ: "ắ",
	ằ: "ằ",
	ẵ: "ẵ",
	ǎ: "ǎ",
	â: "â",
	ấ: "ấ",
	ầ: "ầ",
	ẫ: "ẫ",
	ȧ: "ȧ",
	ǡ: "ǡ",
	å: "å",
	ǻ: "ǻ",
	ḃ: "ḃ",
	ć: "ć",
	ḉ: "ḉ",
	č: "č",
	ĉ: "ĉ",
	ċ: "ċ",
	ç: "ç",
	ď: "ď",
	ḋ: "ḋ",
	ḑ: "ḑ",
	é: "é",
	è: "è",
	ë: "ë",
	ẽ: "ẽ",
	ē: "ē",
	ḗ: "ḗ",
	ḕ: "ḕ",
	ĕ: "ĕ",
	ḝ: "ḝ",
	ě: "ě",
	ê: "ê",
	ế: "ế",
	ề: "ề",
	ễ: "ễ",
	ė: "ė",
	ȩ: "ȩ",
	ḟ: "ḟ",
	ǵ: "ǵ",
	ḡ: "ḡ",
	ğ: "ğ",
	ǧ: "ǧ",
	ĝ: "ĝ",
	ġ: "ġ",
	ģ: "ģ",
	ḧ: "ḧ",
	ȟ: "ȟ",
	ĥ: "ĥ",
	ḣ: "ḣ",
	ḩ: "ḩ",
	í: "í",
	ì: "ì",
	ï: "ï",
	ḯ: "ḯ",
	ĩ: "ĩ",
	ī: "ī",
	ĭ: "ĭ",
	ǐ: "ǐ",
	î: "î",
	ǰ: "ǰ",
	ĵ: "ĵ",
	ḱ: "ḱ",
	ǩ: "ǩ",
	ķ: "ķ",
	ĺ: "ĺ",
	ľ: "ľ",
	ļ: "ļ",
	ḿ: "ḿ",
	ṁ: "ṁ",
	ń: "ń",
	ǹ: "ǹ",
	ñ: "ñ",
	ň: "ň",
	ṅ: "ṅ",
	ņ: "ņ",
	ó: "ó",
	ò: "ò",
	ö: "ö",
	ȫ: "ȫ",
	õ: "õ",
	ṍ: "ṍ",
	ṏ: "ṏ",
	ȭ: "ȭ",
	ō: "ō",
	ṓ: "ṓ",
	ṑ: "ṑ",
	ŏ: "ŏ",
	ǒ: "ǒ",
	ô: "ô",
	ố: "ố",
	ồ: "ồ",
	ỗ: "ỗ",
	ȯ: "ȯ",
	ȱ: "ȱ",
	ő: "ő",
	ṕ: "ṕ",
	ṗ: "ṗ",
	ŕ: "ŕ",
	ř: "ř",
	ṙ: "ṙ",
	ŗ: "ŗ",
	ś: "ś",
	ṥ: "ṥ",
	š: "š",
	ṧ: "ṧ",
	ŝ: "ŝ",
	ṡ: "ṡ",
	ş: "ş",
	ẗ: "ẗ",
	ť: "ť",
	ṫ: "ṫ",
	ţ: "ţ",
	ú: "ú",
	ù: "ù",
	ü: "ü",
	ǘ: "ǘ",
	ǜ: "ǜ",
	ǖ: "ǖ",
	ǚ: "ǚ",
	ũ: "ũ",
	ṹ: "ṹ",
	ū: "ū",
	ṻ: "ṻ",
	ŭ: "ŭ",
	ǔ: "ǔ",
	û: "û",
	ů: "ů",
	ű: "ű",
	ṽ: "ṽ",
	ẃ: "ẃ",
	ẁ: "ẁ",
	ẅ: "ẅ",
	ŵ: "ŵ",
	ẇ: "ẇ",
	ẘ: "ẘ",
	ẍ: "ẍ",
	ẋ: "ẋ",
	ý: "ý",
	ỳ: "ỳ",
	ÿ: "ÿ",
	ỹ: "ỹ",
	ȳ: "ȳ",
	ŷ: "ŷ",
	ẏ: "ẏ",
	ẙ: "ẙ",
	ź: "ź",
	ž: "ž",
	ẑ: "ẑ",
	ż: "ż",
	Á: "Á",
	À: "À",
	Ä: "Ä",
	Ǟ: "Ǟ",
	Ã: "Ã",
	Ā: "Ā",
	Ă: "Ă",
	Ắ: "Ắ",
	Ằ: "Ằ",
	Ẵ: "Ẵ",
	Ǎ: "Ǎ",
	Â: "Â",
	Ấ: "Ấ",
	Ầ: "Ầ",
	Ẫ: "Ẫ",
	Ȧ: "Ȧ",
	Ǡ: "Ǡ",
	Å: "Å",
	Ǻ: "Ǻ",
	Ḃ: "Ḃ",
	Ć: "Ć",
	Ḉ: "Ḉ",
	Č: "Č",
	Ĉ: "Ĉ",
	Ċ: "Ċ",
	Ç: "Ç",
	Ď: "Ď",
	Ḋ: "Ḋ",
	Ḑ: "Ḑ",
	É: "É",
	È: "È",
	Ë: "Ë",
	Ẽ: "Ẽ",
	Ē: "Ē",
	Ḗ: "Ḗ",
	Ḕ: "Ḕ",
	Ĕ: "Ĕ",
	Ḝ: "Ḝ",
	Ě: "Ě",
	Ê: "Ê",
	Ế: "Ế",
	Ề: "Ề",
	Ễ: "Ễ",
	Ė: "Ė",
	Ȩ: "Ȩ",
	Ḟ: "Ḟ",
	Ǵ: "Ǵ",
	Ḡ: "Ḡ",
	Ğ: "Ğ",
	Ǧ: "Ǧ",
	Ĝ: "Ĝ",
	Ġ: "Ġ",
	Ģ: "Ģ",
	Ḧ: "Ḧ",
	Ȟ: "Ȟ",
	Ĥ: "Ĥ",
	Ḣ: "Ḣ",
	Ḩ: "Ḩ",
	Í: "Í",
	Ì: "Ì",
	Ï: "Ï",
	Ḯ: "Ḯ",
	Ĩ: "Ĩ",
	Ī: "Ī",
	Ĭ: "Ĭ",
	Ǐ: "Ǐ",
	Î: "Î",
	İ: "İ",
	Ĵ: "Ĵ",
	Ḱ: "Ḱ",
	Ǩ: "Ǩ",
	Ķ: "Ķ",
	Ĺ: "Ĺ",
	Ľ: "Ľ",
	Ļ: "Ļ",
	Ḿ: "Ḿ",
	Ṁ: "Ṁ",
	Ń: "Ń",
	Ǹ: "Ǹ",
	Ñ: "Ñ",
	Ň: "Ň",
	Ṅ: "Ṅ",
	Ņ: "Ņ",
	Ó: "Ó",
	Ò: "Ò",
	Ö: "Ö",
	Ȫ: "Ȫ",
	Õ: "Õ",
	Ṍ: "Ṍ",
	Ṏ: "Ṏ",
	Ȭ: "Ȭ",
	Ō: "Ō",
	Ṓ: "Ṓ",
	Ṑ: "Ṑ",
	Ŏ: "Ŏ",
	Ǒ: "Ǒ",
	Ô: "Ô",
	Ố: "Ố",
	Ồ: "Ồ",
	Ỗ: "Ỗ",
	Ȯ: "Ȯ",
	Ȱ: "Ȱ",
	Ő: "Ő",
	Ṕ: "Ṕ",
	Ṗ: "Ṗ",
	Ŕ: "Ŕ",
	Ř: "Ř",
	Ṙ: "Ṙ",
	Ŗ: "Ŗ",
	Ś: "Ś",
	Ṥ: "Ṥ",
	Š: "Š",
	Ṧ: "Ṧ",
	Ŝ: "Ŝ",
	Ṡ: "Ṡ",
	Ş: "Ş",
	Ť: "Ť",
	Ṫ: "Ṫ",
	Ţ: "Ţ",
	Ú: "Ú",
	Ù: "Ù",
	Ü: "Ü",
	Ǘ: "Ǘ",
	Ǜ: "Ǜ",
	Ǖ: "Ǖ",
	Ǚ: "Ǚ",
	Ũ: "Ũ",
	Ṹ: "Ṹ",
	Ū: "Ū",
	Ṻ: "Ṻ",
	Ŭ: "Ŭ",
	Ǔ: "Ǔ",
	Û: "Û",
	Ů: "Ů",
	Ű: "Ű",
	Ṽ: "Ṽ",
	Ẃ: "Ẃ",
	Ẁ: "Ẁ",
	Ẅ: "Ẅ",
	Ŵ: "Ŵ",
	Ẇ: "Ẇ",
	Ẍ: "Ẍ",
	Ẋ: "Ẋ",
	Ý: "Ý",
	Ỳ: "Ỳ",
	Ÿ: "Ÿ",
	Ỹ: "Ỹ",
	Ȳ: "Ȳ",
	Ŷ: "Ŷ",
	Ẏ: "Ẏ",
	Ź: "Ź",
	Ž: "Ž",
	Ẑ: "Ẑ",
	Ż: "Ż",
	ά: "ά",
	ὰ: "ὰ",
	ᾱ: "ᾱ",
	ᾰ: "ᾰ",
	έ: "έ",
	ὲ: "ὲ",
	ή: "ή",
	ὴ: "ὴ",
	ί: "ί",
	ὶ: "ὶ",
	ϊ: "ϊ",
	ΐ: "ΐ",
	ῒ: "ῒ",
	ῑ: "ῑ",
	ῐ: "ῐ",
	ό: "ό",
	ὸ: "ὸ",
	ύ: "ύ",
	ὺ: "ὺ",
	ϋ: "ϋ",
	ΰ: "ΰ",
	ῢ: "ῢ",
	ῡ: "ῡ",
	ῠ: "ῠ",
	ώ: "ώ",
	ὼ: "ὼ",
	Ύ: "Ύ",
	Ὺ: "Ὺ",
	Ϋ: "Ϋ",
	Ῡ: "Ῡ",
	Ῠ: "Ῠ",
	Ώ: "Ώ",
	Ὼ: "Ὼ"
}, aJ = class i {
	static {
		e(this, "Parser");
	}
	constructor(e, t) {
		this.mode = void 0, this.gullet = void 0, this.settings = void 0, this.leftrightDepth = void 0, this.nextToken = void 0, this.mode = "math", this.gullet = new aX(e, t, this.mode), this.settings = t, this.leftrightDepth = 0;
	}
	expect(e, t) {
		if (void 0 === t && (t = !0), this.fetch().text !== e) throw new a("Expected '" + e + "', got '" + this.fetch().text + "'", this.fetch());
		t && this.consume();
	}
	consume() {
		this.nextToken = null;
	}
	fetch() {
		return this.nextToken ??= this.gullet.expandNextToken(), this.nextToken;
	}
	switchMode(e) {
		this.mode = e, this.gullet.switchMode(e);
	}
	parse() {
		this.settings.globalGroup || this.gullet.beginGroup(), this.settings.colorIsTextColor && this.gullet.macros.set("\\color", "\\textcolor");
		try {
			var e = this.parseExpression(!1);
			return this.expect("EOF"), this.settings.globalGroup || this.gullet.endGroup(), e;
		} finally {
			this.gullet.endGroups();
		}
	}
	subparse(e) {
		var t = this.nextToken;
		this.consume(), this.gullet.pushToken(new r("}")), this.gullet.pushTokens(e);
		var a = this.parseExpression(!1);
		return this.expect("}"), this.nextToken = t, a;
	}
	parseExpression(e, t) {
		for (var r = [];;) {
			"math" === this.mode && this.consumeSpaces();
			var a = this.fetch();
			if (-1 !== i.endOfExpression.indexOf(a.text) || t && a.text === t || e && ty[a.text] && ty[a.text].infix) break;
			var n = this.parseAtom(t);
			if (n) {
				if ("internal" === n.type) continue;
			} else break;
			r.push(n);
		}
		return "text" === this.mode && this.formLigatures(r), this.handleInfixNodes(r);
	}
	handleInfixNodes(e) {
		for (var t, r = -1, i = 0; i < e.length; i++) if ("infix" === e[i].type) {
			if (-1 !== r) throw new a("only one infix operator per group", e[i].token);
			r = i, t = e[i].replaceWith;
		}
		if (-1 === r || !t) return e;
		var n, s, o = e.slice(0, r), l = e.slice(r + 1);
		return n = 1 === o.length && "ordgroup" === o[0].type ? o[0] : {
			type: "ordgroup",
			mode: this.mode,
			body: o
		}, s = 1 === l.length && "ordgroup" === l[0].type ? l[0] : {
			type: "ordgroup",
			mode: this.mode,
			body: l
		}, ["\\\\abovefrac" === t ? this.callFunction(t, [
			n,
			e[r],
			s
		], []) : this.callFunction(t, [n, s], [])];
	}
	handleSupSubscript(e) {
		var t, r = this.fetch(), i = r.text;
		this.consume(), this.consumeSpaces();
		do
			t = this.parseGroup(e);
		while ((null == t ? void 0 : t.type) === "internal");
		if (!t) throw new a("Expected group after '" + i + "'", r);
		return t;
	}
	formatUnsupportedCmd(e) {
		for (var t = [], r = 0; r < e.length; r++) t.push({
			type: "textord",
			mode: "text",
			text: e[r]
		});
		var a = {
			type: "text",
			mode: this.mode,
			body: t
		};
		return {
			type: "color",
			mode: this.mode,
			color: this.settings.errorColor,
			body: [a]
		};
	}
	parseAtom(e) {
		var t, i, n = this.parseGroup("atom", e);
		if (n?.type === "internal" || "text" === this.mode) return n;
		for (;;) {
			this.consumeSpaces();
			var s = this.fetch();
			if ("\\limits" === s.text || "\\nolimits" === s.text) {
				if (n && "op" === n.type) n.limits = "\\limits" === s.text, n.alwaysHandleSupSub = !0;
				else if (n && "operatorname" === n.type) n.alwaysHandleSupSub && (n.limits = "\\limits" === s.text);
				else throw new a("Limit controls must follow a math operator", s);
				this.consume();
			} else if ("^" === s.text) {
				if (t) throw new a("Double superscript", s);
				t = this.handleSupSubscript("superscript");
			} else if ("_" === s.text) {
				if (i) throw new a("Double subscript", s);
				i = this.handleSupSubscript("subscript");
			} else if ("'" === s.text) {
				if (t) throw new a("Double superscript", s);
				var o = {
					type: "textord",
					mode: this.mode,
					text: "\\prime"
				}, l = [o];
				for (this.consume(); "'" === this.fetch().text;) l.push(o), this.consume();
				"^" === this.fetch().text && l.push(this.handleSupSubscript("superscript")), t = {
					type: "ordgroup",
					mode: this.mode,
					body: l
				};
			} else if (aj[s.text]) {
				var h = a$.test(s.text), m = [];
				for (m.push(new r(aj[s.text])), this.consume();;) {
					var c = this.fetch().text;
					if (!aj[c] || a$.test(c) !== h) break;
					m.unshift(new r(aj[c])), this.consume();
				}
				var u = this.subparse(m);
				h ? i = {
					type: "ordgroup",
					mode: "math",
					body: u
				} : t = {
					type: "ordgroup",
					mode: "math",
					body: u
				};
			} else break;
		}
		return t || i ? {
			type: "supsub",
			mode: this.mode,
			base: n,
			sup: t,
			sub: i
		} : n;
	}
	parseFunction(e, t) {
		var r = this.fetch(), i = r.text, n = ty[i];
		if (!n) return null;
		if (this.consume(), t && "atom" !== t && !n.allowedInArgument) throw new a("Got function '" + i + "' with no arguments" + (t ? " as " + t : ""), r);
		if ("text" === this.mode && !n.allowedInText) throw new a("Can't use function '" + i + "' in text mode", r);
		if ("math" === this.mode && !1 === n.allowedInMath) throw new a("Can't use function '" + i + "' in math mode", r);
		var { args: s, optArgs: o } = this.parseArguments(i, n);
		return this.callFunction(i, s, o, r, e);
	}
	callFunction(e, t, r, i, n) {
		var s = ty[e];
		if (s && s.handler) return s.handler({
			funcName: e,
			parser: this,
			token: i,
			breakOnTokenText: n
		}, t, r);
		throw new a("No function handler for " + e);
	}
	parseArguments(e, t) {
		var r = t.numArgs + t.numOptionalArgs;
		if (0 === r) return {
			args: [],
			optArgs: []
		};
		for (var i = [], n = [], s = 0; s < r; s++) {
			var o = t.argTypes && t.argTypes[s], l = s < t.numOptionalArgs;
			(t.primitive && null == o || "sqrt" === t.type && 1 === s && null == n[0]) && (o = "primitive");
			var h = this.parseGroupOfType("argument to '" + e + "'", o, l);
			if (l) n.push(h);
			else if (null != h) i.push(h);
			else throw new a("Null argument, please report this as a bug");
		}
		return {
			args: i,
			optArgs: n
		};
	}
	parseGroupOfType(e, t, r) {
		switch (t) {
			case "color": return this.parseColorGroup(r);
			case "size": return this.parseSizeGroup(r);
			case "url": return this.parseUrlGroup(r);
			case "math":
			case "text": return this.parseArgumentGroup(r, t);
			case "hbox":
				var i = this.parseArgumentGroup(r, "text");
				return null != i ? {
					type: "styling",
					mode: i.mode,
					body: [i],
					style: "text"
				} : null;
			case "raw":
				var n = this.parseStringGroup("raw", r);
				return null != n ? {
					type: "raw",
					mode: "text",
					string: n.text
				} : null;
			case "primitive":
				if (r) throw new a("A primitive argument cannot be optional");
				var s = this.parseGroup(e);
				if (null == s) throw new a("Expected group as " + e, this.fetch());
				return s;
			case "original":
			case null:
			case void 0: return this.parseArgumentGroup(r);
			default: throw new a("Unknown group type as " + e, this.fetch());
		}
	}
	consumeSpaces() {
		for (; " " === this.fetch().text;) this.consume();
	}
	parseStringGroup(e, t) {
		var r = this.gullet.scanArgument(t);
		if (null == r) return null;
		for (var a, i = ""; "EOF" !== (a = this.fetch()).text;) i += a.text, this.consume();
		return this.consume(), r.text = i, r;
	}
	parseRegexGroup(e, t) {
		for (var r, i = this.fetch(), n = i, s = ""; "EOF" !== (r = this.fetch()).text && e.test(s + r.text);) s += (n = r).text, this.consume();
		if ("" === s) throw new a("Invalid " + t + ": '" + i.text + "'", i);
		return i.range(n, s);
	}
	parseColorGroup(e) {
		var t = this.parseStringGroup("color", e);
		if (null == t) return null;
		var r = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(t.text);
		if (!r) throw new a("Invalid color: '" + t.text + "'", t);
		var i = r[0];
		return /^[0-9a-f]{6}$/i.test(i) && (i = "#" + i), {
			type: "color-token",
			mode: this.mode,
			color: i
		};
	}
	parseSizeGroup(e) {
		var t, r = !1;
		if (this.gullet.consumeSpaces(), !(t = e || "{" === this.gullet.future().text ? this.parseStringGroup("size", e) : this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/, "size"))) return null;
		e || 0 !== t.text.length || (t.text = "0pt", r = !0);
		var i = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t.text);
		if (!i) throw new a("Invalid size: '" + t.text + "'", t);
		var n = {
			number: +(i[1] + i[2]),
			unit: i[3]
		};
		if (!er(n)) throw new a("Invalid unit: '" + n.unit + "'", t);
		return {
			type: "size",
			mode: this.mode,
			value: n,
			isBlank: r
		};
	}
	parseUrlGroup(e) {
		this.gullet.lexer.setCatcode("%", 13), this.gullet.lexer.setCatcode("~", 12);
		var t = this.parseStringGroup("url", e);
		if (this.gullet.lexer.setCatcode("%", 14), this.gullet.lexer.setCatcode("~", 13), null == t) return null;
		var r = t.text.replace(/\\([#$%&~_^{}])/g, "$1");
		return {
			type: "url",
			mode: this.mode,
			url: r
		};
	}
	parseArgumentGroup(e, t) {
		var r = this.gullet.scanArgument(e);
		if (null == r) return null;
		var a = this.mode;
		t && this.switchMode(t), this.gullet.beginGroup();
		var i = this.parseExpression(!1, "EOF");
		this.expect("EOF"), this.gullet.endGroup();
		var n = {
			type: "ordgroup",
			mode: this.mode,
			loc: r.loc,
			body: i
		};
		return t && this.switchMode(a), n;
	}
	parseGroup(e, r) {
		var i, n = this.fetch(), s = n.text;
		if ("{" === s || "\\begingroup" === s) {
			this.consume();
			var o = "{" === s ? "}" : "\\endgroup";
			this.gullet.beginGroup();
			var l = this.parseExpression(!1, o), h = this.fetch();
			this.expect(o), this.gullet.endGroup(), i = {
				type: "ordgroup",
				mode: this.mode,
				loc: t.range(n, h),
				body: l,
				semisimple: "\\begingroup" === s || void 0
			};
		} else if (null == (i = this.parseFunction(r, e) || this.parseSymbol()) && "\\" === s[0] && !aW.hasOwnProperty(s)) {
			if (this.settings.throwOnError) throw new a("Undefined control sequence: " + s, n);
			i = this.formatUnsupportedCmd(s), this.consume();
		}
		return i;
	}
	formLigatures(e) {
		for (var r = e.length - 1, a = 0; a < r; ++a) {
			var i = e[a], n = i.text;
			"-" === n && "-" === e[a + 1].text && (a + 1 < r && "-" === e[a + 2].text ? (e.splice(a, 3, {
				type: "textord",
				mode: "text",
				loc: t.range(i, e[a + 2]),
				text: "---"
			}), r -= 2) : (e.splice(a, 2, {
				type: "textord",
				mode: "text",
				loc: t.range(i, e[a + 1]),
				text: "--"
			}), r -= 1)), ("'" === n || "`" === n) && e[a + 1].text === n && (e.splice(a, 2, {
				type: "textord",
				mode: "text",
				loc: t.range(i, e[a + 1]),
				text: n + n
			}), r -= 1);
		}
	}
	parseSymbol() {
		var e = this.fetch(), r = e.text;
		if (/^\\verb[^a-zA-Z]/.test(r)) {
			this.consume();
			var i = r.slice(5), n = "*" === i.charAt(0);
			if (n && (i = i.slice(1)), i.length < 2 || i.charAt(0) !== i.slice(-1)) throw new a(`\\verb assertion failed --
                    please report what input caused this bug`);
			return {
				type: "verb",
				mode: "text",
				body: i = i.slice(1, -1),
				star: n
			};
		}
		aK.hasOwnProperty(r[0]) && !ek[this.mode][r[0]] && (this.settings.strict && "math" === this.mode && this.settings.reportNonstrict("unicodeTextInMathMode", "Accented Unicode text character \"" + r[0] + "\" used in math mode", e), r = aK[r[0]] + r.slice(1));
		var s = aN.exec(r);
		if (s && ("i" === (r = r.substring(0, s.index)) ? r = "ı" : "j" === r && (r = "ȷ")), ek[this.mode][r]) {
			this.settings.strict && "math" === this.mode && eK.indexOf(r) >= 0 && this.settings.reportNonstrict("unicodeTextInMathMode", "Latin-1/Unicode text character \"" + r[0] + "\" used in math mode", e);
			var o, l = ek[this.mode][r].group, h = t.range(e);
			o = ex.hasOwnProperty(l) ? {
				type: "atom",
				mode: this.mode,
				family: l,
				loc: h,
				text: r
			} : {
				type: l,
				mode: this.mode,
				loc: h,
				text: r
			};
		} else {
			if (!(r.charCodeAt(0) >= 128)) return null;
			this.settings.strict && (C(r.charCodeAt(0)) ? "math" === this.mode && this.settings.reportNonstrict("unicodeTextInMathMode", "Unicode text character \"" + r[0] + "\" used in math mode", e) : this.settings.reportNonstrict("unknownSymbol", "Unrecognized Unicode character \"" + r[0] + "\" (" + r.charCodeAt(0) + ")", e)), o = {
				type: "textord",
				mode: "text",
				loc: t.range(e),
				text: r
			};
		}
		if (this.consume(), s) for (var m = 0; m < s[0].length; m++) {
			var c = s[0][m];
			if (!aZ[c]) throw new a("Unknown accent ' " + c + "'", e);
			var u = aZ[c][this.mode] || aZ[c].text;
			if (!u) throw new a("Accent " + c + " unsupported in " + this.mode + " mode", e);
			o = {
				type: "accent",
				mode: this.mode,
				loc: t.range(e),
				label: u,
				isStretchy: !1,
				isShifty: !0,
				base: o
			};
		}
		return o;
	}
};
aJ.endOfExpression = [
	"}",
	"\\endgroup",
	"\\end",
	"\\right",
	"&"
];
var aQ = e(function(e, t) {
	if (!("string" == typeof e || e instanceof String)) throw TypeError("KaTeX can only parse string typed expression");
	var i = new aJ(e, t);
	delete i.gullet.macros.current["\\df@tag"];
	var n = i.parse();
	if (delete i.gullet.macros.current["\\current@color"], delete i.gullet.macros.current["\\color"], i.gullet.macros.get("\\df@tag")) {
		if (!t.displayMode) throw new a("\\tag works only in display equations");
		n = [{
			type: "tag",
			mode: "text",
			body: n,
			tag: i.subparse([new r("\\df@tag")])
		}];
	}
	return n;
}, "parseTree"), a0 = e(function(e, t, r) {
	t.textContent = "";
	var a = a6(e, r).toNode();
	t.appendChild(a);
}, "render");
"u" > typeof document && "CSS1Compat" !== document.compatMode && ("u" > typeof console && console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."), a0 = e(function() {
	throw new a("KaTeX doesn't work in quirks mode.");
}, "render"));
var a1 = e(function(e, t) {
	return a6(e, t).toMarkup();
}, "renderToString"), a4 = e(function(e, t) {
	return aQ(e, new v(t));
}, "generateParseTree"), a5 = e(function(e, t, r) {
	if (r.throwOnError || !(e instanceof a)) throw e;
	var i = tt(["katex-error"], [new ed(t)]);
	return i.setAttribute("title", e.toString()), i.setAttribute("style", "color:" + r.errorColor), i;
}, "renderError"), a6 = e(function(e, t) {
	var r = new v(t);
	try {
		var a = aQ(e, r);
		return tQ(a, e, r);
	} catch (t) {
		return a5(t, e, r);
	}
}, "renderToDomTree"), a7 = e(function(e, t) {
	var r = new v(t);
	try {
		var a = aQ(e, r);
		return t0(a, e, r);
	} catch (t) {
		return a5(t, e, r);
	}
}, "renderToHTMLTree"), a3 = "0.16.22", a8 = {
	Span: em,
	Anchor: ec,
	SymbolNode: ed,
	SvgNode: eg,
	PathNode: ef,
	LineNode: ev
}, a2 = {
	version: a3,
	render: a0,
	renderToString: a1,
	ParseError: a,
	SETTINGS_SCHEMA: g,
	__parse: a4,
	__renderToDomTree: a6,
	__renderToHTMLTree: a7,
	__setFontMetrics: W,
	__defineSymbol: eS,
	__defineFunction: tk,
	__defineMacro: r0,
	__domTree: a8
};
export { a as ParseError, g as SETTINGS_SCHEMA, tk as __defineFunction, r0 as __defineMacro, eS as __defineSymbol, a8 as __domTree, a4 as __parse, a6 as __renderToDomTree, a7 as __renderToHTMLTree, W as __setFontMetrics, a2 as default, a0 as render, a1 as renderToString, a3 as version };
